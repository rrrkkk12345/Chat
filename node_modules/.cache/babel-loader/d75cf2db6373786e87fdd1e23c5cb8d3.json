{"ast":null,"code":"var _jsxFileName = \"/Users/rei.kawasato/Desktop/travel/src/pages/chat.tsx\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport { makeStyles, TextField, Grid, Button, ListItemAvatar, Avatar, List } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport useReactRouter from 'use-react-router'; // import classes from '*.module.css';\n\nimport HeaderChat from './headerChat';\nimport userIcon from '../assets/avatarWomen.png';\nimport jsonDataTest from '../utils/db2.json';\n\nconst UserIcon = require('../assets/test.png');\n\nconst TabChatOn = require('../assets/TabChatOn.png');\n\nconst TabMapOff = require('../assets/TabMapOff.png');\n\nconst Tap = require('../assets/Tap.png');\n\nconst headerHeight = '44px';\nconst ContentBodyHeight = `calc(100vh - ${headerHeight})`;\nconst selectButtonRadius = '18px';\nconst useStyles = makeStyles(theme => ({\n  chatDesignContainer: {\n    display: \"flex\",\n    position: \"relative\",\n    width: \"100%\",\n    // height: '100vh',\n    // height: 'calc(100vh - 200px)',\n    height: ContentBodyHeight,\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    paddingTop: headerHeight,\n    paddingBottom: '156px' // paddingBottom: isButton ? '156px' : 'calc(10% + 1rem)',\n    // paddingBottom: 'calc(20% + 1rem)',\n\n  },\n  chatDesign: {\n    display: 'flex',\n    justifyContent: 'center',\n    position: \"relative\",\n    width: \"100%\",\n    backgroundColor: \"#EFEDE9\",\n    // top: \"10%\",\n    // paddingTop: headerHeight,\n    paddingBottom: \"291px\",\n    overflow: \"auto\",\n    '& .MuiList-padding': {\n      display: 'flex',\n      justifyContent: 'center',\n      padding: '0.5rem 1rem'\n    }\n  },\n  chatDesignInner: {\n    position: \"relative\",\n    width: \"100%\",\n    maxWidth: '390px',\n    height: ContentBodyHeight\n  },\n  buttonDesign: {\n    bottom: \"30%\",\n    position: \"fixed\",\n    borderRadius: \"50%\",\n    // backgroundColor: \"blue\",\n    color: \"white\",\n    // zIndex:100,\n    // marginLeft: \"40%\",\n    fontFamily: 'メイリオ' // cursor: \"pointer\",\n\n  },\n  selectButton: {\n    width: \"100%\",\n    minHeight: '10%',\n    // height: '10%',\n    justifyItems: 'center',\n    textAlign: 'center',\n    padding: '0.5rem 0',\n    position: 'fixed',\n    bottom: \"10%\",\n    backgroundColor: '#EFEDE9',\n    boxShadow: 'inset 0 -0.5px 0 0 rgba(0, 0, 0, 0.2)',\n    '& .MuiButton-label': {\n      color: '#4575B4'\n    },\n    '& .MuiButton-disableElevation': {\n      width: '100%',\n      maxWidth: '326px',\n      height: '44px',\n      MaxHeight: '100%',\n      border: '1px solid #cdcdcd',\n      backgroundColor: '#FFFFFF'\n    },\n    '& .MuiGrid-grid-xs-12:nth-of-type(1)': {\n      '& button': {\n        borderTopLeftRadius: selectButtonRadius,\n        borderTopRightRadius: selectButtonRadius\n      }\n    },\n    '& .MuiGrid-grid-xs-12:nth-of-type(2)': {\n      '& button': {\n        borderBottomLeftRadius: selectButtonRadius,\n        borderBottomRightRadius: selectButtonRadius\n      }\n    }\n  },\n  narrator: {\n    fontFamily: 'メイリオ',\n    // fontSize: 20,\n    display: 'flex',\n    alignItems: 'flex-start',\n    //縦\n    textAlign: 'left',\n    //横\n    backgroundColor: '#efdcc9',\n    color: \"#994C00\",\n    borderRadius: 16,\n    width: '100%',\n    maxWidth: '390px',\n    marginTop: 20,\n    justifyContent: 'flex-start',\n    // marginLeft: '15%',\n    padding: '1rem' // position:'relative',\n\n  },\n  yukaWrapper: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    alignItems: 'flex-start',\n    '& .MuiListItemAvatar-root': {\n      minWidth: '40px'\n    },\n    '& .MuiAvatar-root': {\n      width: '31px',\n      height: '31px'\n    }\n  },\n  yuka: {\n    fontFamily: 'メイリオ',\n    width: '100%',\n    maxWidth: '25ch',\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: 17.5,\n    borderColor: 'blue',\n    padding: 10\n  },\n  yuka_label: {\n    fontSize: 15,\n    marginBottom: '0%',\n    marginLeft: '15%',\n    marginTop: '0.5rem'\n  },\n  syujiinkoWrapper: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    alignItems: 'flex-end'\n  },\n  syujiinko: {\n    fontFamily: 'メイリオ',\n    border: '1px solid #bfc8d5',\n    color: '#7088b1',\n    borderRadius: 17.5,\n    backgroundColor: '#e2e3e4',\n    width: 'auto',\n    maxWidth: '27ch',\n    padding: 10\n  },\n  avatar: {\n    // padding: 10,\n    marginLeft: 50\n  },\n  square: {\n    width: \"100%\",\n    height: \"900px\",\n    // margin:'0',\n    backgroundColor: \"#eeedea\"\n  },\n  bottomTab: {\n    position: \"fixed\",\n    bottom: \"0\",\n    height: \"10%\",\n    width: \"100%\",\n    backgroundColor: \"#eeedea\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    textAlign: \"center\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  bottomChat: {\n    // border: \"2px solid\",\n    // borderColor: \"pink\",\n    flex: 1\n  },\n  bottomMap: {\n    // border: \"2px solid\",\n    // borderColor: \"pink\",\n    flex: 1\n  },\n  mapLabel: {\n    color: \"#4575b4\",\n    fontWeight: 'bold',\n    fontSize: '14px',\n    letterSpacing: '-0.32px',\n    textAlign: 'center',\n    bottom: \"13%\",\n    position: \"fixed\",\n    borderRadius: \"50%\",\n    // backgroundColor: \"blue\",\n    // zIndex:100,\n    // marginLeft: \"40%\",\n    fontFamily: 'メイリオ' // cursor: \"pointer\",\n\n  }\n}));\nconst currentSentenceIdInit = \"0\";\nconst genderInit = \"0\";\nconst spotIdInit = \"A\";\nconst spotNameInit = \"大谷資料館\";\nconst scenarioListInit = [{\n  sentenceId: \"0\",\n  nextSentenceId: \"1\",\n  personName: \"優花\",\n  sentence: {\n    plane: \"初期値消したい\",\n    button: [{\n      buttonLabel: \"海外強度料理にしよう\",\n      nextSentenceId: \"21\"\n    }, {\n      buttonLabel: \"お蕎麦屋さんにしよう\",\n      nextSentenceId: \"22\"\n    }]\n  },\n  reply: \"true\"\n}];\nconst isButtonInit = false;\nconst isReplyInit = false;\nconst isBtnLabelInit_1 = \"\";\nconst isBtnLabelInit_2 = \"\";\nconst isBtnScenarioIdInit_1 = \"\";\nconst isBtnScenarioIdInit_2 = \"\";\n\nconst BottomTab = () => {\n  const {\n    history\n  } = useReactRouter();\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.bottomTab,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.bottomChat,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: TabChatOn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 17\n    }\n  }, \"\\u30C1\\u30E3\\u30C3\\u30C8\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.bottomMap,\n    onClick: () => history.push(\"/map\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: TabMapOff,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 17\n    }\n  }, \"\\u30DE\\u30C3\\u30D7\")));\n};\n\nvar btn1 = \"\";\n\nconst Chat = () => {\n  const classes = useStyles();\n  const [jsonData, setJsonData] = useState();\n  const [scenarioList, setScenarioList] = useState();\n  const [scenarioLog, setScenarioLog] = useState();\n  const [currentSentenceId, setCurrentSentenceId] = useState(currentSentenceIdInit);\n  const [isButton, setIsButton] = useState(isButtonInit);\n  const [isReply, setIsReply] = useState(isReplyInit);\n  const [btnLabel_1, setBtnLabel_1] = useState(isBtnLabelInit_1);\n  const [btnLabel_2, setBtnLabel_2] = useState(isBtnLabelInit_2);\n  const [btnScenarioId_1, setBtnScenarioId_1] = useState(isBtnScenarioIdInit_1);\n  const [btnScenarioId_2, setBtnScenarioId_2] = useState(isBtnScenarioIdInit_2);\n  const [btnText, setBtnText] = useState(\"\");\n  const [reply, setReply] = useState(\"\");\n  const isFirstRender = useRef(false);\n  const ref = useRef(null);\n  useEffect(() => {\n    const jwt = JSON.parse(localStorage.getItem('jwt'));\n    const {\n      Authorization,\n      Accesstoken\n    } = jwt;\n    const scenarioHistString = localStorage.getItem('scenarioHist'); // const scenarioHist: string<{ nextSentenceId: string, personName: string, plane: string }> = localStorage.getItem('scenarioHist')\n    // const { personName, plane } = scenarioHist\n\n    console.log(scenarioHistString);\n\n    if (scenarioHistString) {\n      console.log(\"Localstorage\");\n      const scenarioHist = JSON.parse(scenarioHistString);\n\n      if (scenarioHist.length > 0) {\n        setScenarioLog(scenarioHist);\n        setCurrentSentenceId(scenarioHist.slice(-1)[0].nextSentenceId);\n        scrollToBottomOfList();\n      }\n    } else {\n      console.log(\"DB\"); //ログから会話履歴をもってくる\n\n      fetch(\"https://jtb-prd.two-choices.jp/api/scenario/log/\", {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': Authorization,\n          'accesstoken': Accesstoken\n        }\n      }).then(res => res.json()).then(data => {\n        if (data.scenarioHistory.length <= 0) {\n          localStorage.setItem('scenarioHist', JSON.stringify([]));\n          return;\n        }\n\n        localStorage.setItem('scenarioHist', JSON.stringify(data.scenarioHistory)); // const scenarioGet: Array<{ nextSentenceId: string, personName: string, plane: string }> = JSON.parse(localStorage.getItem('scenarioHist') as string)\n\n        console.log(data.scenarioHistory); // DBから最新のIDをとってくる\n        // scenarioGet.slice(-1)[0]\n\n        setScenarioLog(data.scenarioHistory);\n        setCurrentSentenceId(data.scenarioHistory.slice(-1)[0].nextSentenceId);\n        scrollToBottomOfList();\n      });\n    }\n  }, []);\n  useEffect(() => {\n    scrollToBottomOfList();\n  }, [scenarioList]);\n  useEffect(() => {\n    scrollToBottomOfList();\n  }, [scenarioLog]);\n  const scrollToBottomOfList = React.useCallback(() => {\n    ref.current.scrollIntoView({\n      behavior: 'smooth',\n      block: 'end'\n    });\n  }, [ref]);\n\n  const selectBtnText = (scenarioId, planeMessage) => {\n    scenarioList && setScenarioList([...scenarioList, {\n      sentenceId: \"\",\n      nextSentenceId: scenarioId,\n      personName: \"主人公\",\n      sentence: {\n        plane: planeMessage,\n        button: [{\n          buttonLabel: \"\",\n          nextSentenceId: \"\"\n        }, {\n          buttonLabel: \"\",\n          nextSentenceId: \"\"\n        }]\n      },\n      reply: \"false\"\n    }]);\n    setCurrentSentenceId(scenarioId);\n    const jwt = JSON.parse(localStorage.getItem('jwt'));\n    const {\n      Authorization,\n      Accesstoken\n    } = jwt;\n    fetch(\"https://jtb-prd.two-choices.jp/api/scenario/log/\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': Authorization,\n        'accesstoken': Accesstoken\n      },\n      // body: JSON.stringify({ scenario: { personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId } })\n      body: JSON.stringify({\n        scenario: {\n          nextSentenceId: scenarioId,\n          personName: \"主人公\",\n          plane: planeMessage\n        }\n      })\n    });\n    const tmpArray = JSON.parse(localStorage.getItem('scenarioHist'));\n    console.log(\"tmpArray:\", tmpArray);\n    tmpArray.push({\n      nextSentenceId: scenarioId,\n      personName: \"主人公\",\n      plane: planeMessage\n    }); // localStorage.setItem('scenarioHist', JSON.stringify({ personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId }))\n\n    localStorage.setItem('scenarioHist', JSON.stringify(tmpArray)); //性別\n    // console.log(\"性別\",currentSentenceId)\n\n    if (currentSentenceId === \"1\") {\n      fetch(\"https://jtb-prd.two-choices.jp/api/user/\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': Authorization,\n          'accesstoken': Accesstoken\n        },\n        body: JSON.stringify({\n          gender: planeMessage\n        })\n      });\n    }\n  };\n\n  const handleReplyChange = e => {\n    setReply(e.target.value);\n  };\n\n  const replyText = (id, planeMessage) => {\n    scenarioList && setScenarioList([...scenarioList, {\n      sentenceId: \"\",\n      nextSentenceId: \"\",\n      personName: \"主人公\",\n      sentence: {\n        plane: planeMessage,\n        button: [{\n          buttonLabel: \"\",\n          nextSentenceId: \"\"\n        }, {\n          buttonLabel: \"\",\n          nextSentenceId: \"\"\n        }]\n      },\n      reply: \"\"\n    }]);\n    setCurrentSentenceId(id);\n    setIsReply(false);\n    const jwt = JSON.parse(localStorage.getItem('jwt'));\n    const {\n      Authorization,\n      Accesstoken\n    } = jwt;\n    fetch(\"https://jtb-prd.two-choices.jp/api/scenario/log/\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': Authorization,\n        'accesstoken': Accesstoken\n      },\n      // body: JSON.stringify({ scenario: { personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId } })\n      body: JSON.stringify({\n        scenario: {\n          nextSentenceId: id,\n          personName: \"主人公\",\n          plane: planeMessage\n        }\n      })\n    });\n    const tmpArray = JSON.parse(localStorage.getItem('scenarioHist'));\n    console.log(\"tmpArray:\", tmpArray); // tmpArray.push({ personName: \"主人公\", plane: planeMessage })\n    // localStorage.setItem('scenarioHist', JSON.stringify({ personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId }))\n\n    localStorage.setItem('scenarioHist', JSON.stringify(tmpArray)); // }).then(res => res.json()).then(console.log)\n    // scrollToBottomOfList()\n    //名前\n\n    if (currentSentenceId === \"1\") {\n      fetch(\"https://jtb-prd.two-choices.jp/api/user/\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': Authorization,\n          'accesstoken': Accesstoken\n        },\n        body: JSON.stringify({\n          name: planeMessage\n        })\n      });\n    } //年齢\n\n\n    if (currentSentenceId === \"3\") {\n      fetch(\"https://jtb-prd.two-choices.jp/api/user/\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': Authorization,\n          'accesstoken': Accesstoken\n        },\n        body: JSON.stringify({\n          birth: planeMessage\n        })\n      });\n    }\n  };\n\n  const processScenario = async (btnId, btnLabel) => {\n    // setCurrentSentenceId(\"0\")\n    // console.log(jsonDataTest)\n    if (!localStorage.getItem('scenarioHist')) return;\n    setIsButton(false);\n    setIsReply(false);\n\n    if (btnId != \"\") {\n      return;\n    } else {\n      //genderはバックエンドでやるのでAccessTokenとAuthorization\n      //静的なデータをとってくる\n      // fetch(\"http://localhost:3001/posts\")\n      //     .then(response => response.json())\n      //     .then(jData => {\n      //         setJsonData(jData)\n      jsonDataTest.map(scenario => {\n        //次もってくる文章に合っているものを抽出\n        if (scenario.sentenceId === currentSentenceId) {\n          //Filtterつかえる\n          //上書き\n          scenarioList ? setScenarioList([...scenarioList, { ...scenario\n          }]) : //新規\n          setScenarioList([{ ...scenario\n          }]);\n          console.log(\"scenario.nextSentenceId\", scenario.nextSentenceId);\n          console.log(\"scenario.sentence.button[0].buttonLabel\", scenario.sentence.button[0].buttonLabel); // 現在のnextSentenceIdに値が入っている場合\n\n          if (scenario.nextSentenceId != \"\") {\n            setCurrentSentenceId(scenario.nextSentenceId);\n          } //現在のsentenceにボタンが入っている場合\n\n\n          if (scenario.sentence.button[0].buttonLabel != \"\") {\n            setIsButton(true);\n            setBtnScenarioId_1(scenario.sentence.button[0].nextSentenceId);\n            setBtnScenarioId_2(scenario.sentence.button[1].nextSentenceId);\n            setBtnLabel_1(scenario.sentence.button[0].buttonLabel);\n            setBtnLabel_2(scenario.sentence.button[1].buttonLabel);\n          } //返信がテキストで必要な場合\n\n\n          if (scenario.reply === \"true\") {\n            setIsReply(true);\n          }\n\n          const jwt = JSON.parse(localStorage.getItem('jwt'));\n          const {\n            Authorization,\n            Accesstoken\n          } = jwt; //今表示したものをDBに入れる\n\n          fetch(\"https://jtb-prd.two-choices.jp/api/scenario/log/\", {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': Authorization,\n              'accesstoken': Accesstoken\n            },\n            body: JSON.stringify({\n              scenario: {\n                nextSentenceId: currentSentenceId,\n                personName: scenario.personName,\n                plane: scenario.sentence.plane\n              }\n            })\n          });\n          const tmpArray = JSON.parse(localStorage.getItem('scenarioHist'));\n          console.log(\"tmpArray:\", tmpArray);\n          tmpArray.push({\n            nextSentenceId: scenario.nextSentenceId,\n            personName: scenario.personName,\n            plane: scenario.sentence.plane\n          });\n          localStorage.setItem('scenarioHist', JSON.stringify(tmpArray));\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(HeaderChat, {\n    title: \"\\u6848\\u5185\\u4EBA\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 590,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.chatDesignContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.chatDesign,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.chatDesignInner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 21\n    }\n  }, scenarioLog && scenarioLog.map(scenario => scenario.personName == \"優花\" ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.yukaWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 596,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.yuka_label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 597,\n      columnNumber: 33\n    }\n  }, \"\\u512A\\u82B1\"), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 600,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    alt: \"icon\",\n    src: userIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 601,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(ListItem, {\n    className: classes.yuka,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 603,\n      columnNumber: 37\n    }\n  }, scenario.plane))) : scenario.personName == \"主人公\" ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.syujiinkoWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 607,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    className: classes.syujiinko,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 609,\n      columnNumber: 41\n    }\n  }, scenario.plane))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 613,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 614,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    className: classes.narrator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 615,\n      columnNumber: 41\n    }\n  }, scenario.plane)))), scenarioList && scenarioList.map(scenario => scenario.personName == \"優花\" ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.yukaWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 620,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.yuka_label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 621,\n      columnNumber: 33\n    }\n  }, \"\\u512A\\u82B1\"), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 623,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 624,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    alt: \"icon\",\n    src: userIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(ListItem, {\n    className: classes.yuka,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 627,\n      columnNumber: 37\n    }\n  }, scenario.sentence.plane))) : scenario.personName == \"主人公\" ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.syujiinkoWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 631,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 632,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    className: classes.syujiinko,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 633,\n      columnNumber: 41\n    }\n  }, scenario.sentence.plane))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 637,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 638,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    className: classes.narrator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 639,\n      columnNumber: 41\n    }\n  }, scenario.sentence.plane)))), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"bottom-of-list\",\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 647,\n      columnNumber: 25\n    }\n  })), isButton == true ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.selectButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 650,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    alignItems: \"center\",\n    spacing: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 651,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 652,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    disableElevation: true,\n    onClick: () => {\n      selectBtnText(btnScenarioId_1, btnLabel_1);\n      processScenario(btnScenarioId_1, btnLabel_1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 653,\n      columnNumber: 37\n    }\n  }, btnLabel_1)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 665,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    disableElevation: true,\n    onClick: () => {\n      selectBtnText(btnScenarioId_2, btnLabel_2);\n      processScenario(btnScenarioId_2, btnLabel_2);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 666,\n      columnNumber: 37\n    }\n  }, btnLabel_2)))) // <button className={classes.buttonDesign} onClick={() => { processScenario(\"\", \"\") }}>↑</button>\n  : isReply == true ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.selectButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 691,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    alignItems: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 692,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 693,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"\\u5165\\u529B\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\",\n    onChange: e => handleReplyChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 694,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 699,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    disableElevation: true,\n    onClick: () => replyText(currentSentenceId, reply),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 700,\n      columnNumber: 41\n    }\n  }, \"\\u9001\\u4FE1\")))) // : currentSentenceId === \"5\" ? //東京\n  //     <div className={classes.mapLabel}>\n  //         目的地に到着したら下のマップページでチェックインしてシナリオを進めましょう\n  //     </div>\n  // :currentSentenceId === \"68\" ?//大谷資料館\n  // <div className={classes.mapLabel}>\n  //     目的地に到着したら下のマップページでチェックインしてシナリオを進めましょう\n  // </div>\n  : currentSentenceId === \"125\" ?\n  /*#__PURE__*/\n  //クーリ・ルージュ\n  React.createElement(\"div\", {\n    className: classes.mapLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 734,\n      columnNumber: 33\n    }\n  }, \"\\u76EE\\u7684\\u5730\\u306B\\u5230\\u7740\\u3057\\u305F\\u3089\\u4E0B\\u306E\\u30DE\\u30C3\\u30D7\\u30DA\\u30FC\\u30B8\\u3067\\u30C1\\u30A7\\u30C3\\u30AF\\u30A4\\u30F3\\u3057\\u3066\\u30B7\\u30CA\\u30EA\\u30AA\\u3092\\u9032\\u3081\\u307E\\u3057\\u3087\\u3046\") //   :currentSentenceId === \"165\" ?//若竹\n  //   <div className={classes.mapLabel}>\n  //       目的地に到着したら下のマップページでチェックインしてシナリオを進めましょう\n  //   </div>\n  :\n  /*#__PURE__*/\n  React.createElement(\"img\", {\n    className: classes.buttonDesign,\n    src: Tap,\n    onClick: () => {\n      processScenario(\"\", \"\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 742,\n      columnNumber: 29\n    }\n  }) // <button className={classes.buttonDesign} onClick={() => { processScenario(\"\", \"\") }}>↑</button>\n  , /*#__PURE__*/React.createElement(BottomTab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 746,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default Chat;","map":{"version":3,"sources":["/Users/rei.kawasato/Desktop/travel/src/pages/chat.tsx"],"names":["React","useEffect","useState","useRef","makeStyles","TextField","Grid","Button","ListItemAvatar","Avatar","List","ListItem","useReactRouter","HeaderChat","userIcon","jsonDataTest","UserIcon","require","TabChatOn","TabMapOff","Tap","headerHeight","ContentBodyHeight","selectButtonRadius","useStyles","theme","chatDesignContainer","display","position","width","height","flexDirection","justifyContent","alignItems","paddingTop","paddingBottom","chatDesign","backgroundColor","overflow","padding","chatDesignInner","maxWidth","buttonDesign","bottom","borderRadius","color","fontFamily","selectButton","minHeight","justifyItems","textAlign","boxShadow","MaxHeight","border","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","narrator","marginTop","yukaWrapper","minWidth","yuka","palette","background","paper","borderColor","yuka_label","fontSize","marginBottom","marginLeft","syujiinkoWrapper","syujiinko","avatar","square","bottomTab","bottomChat","flex","bottomMap","mapLabel","fontWeight","letterSpacing","currentSentenceIdInit","genderInit","spotIdInit","spotNameInit","scenarioListInit","sentenceId","nextSentenceId","personName","sentence","plane","button","buttonLabel","reply","isButtonInit","isReplyInit","isBtnLabelInit_1","isBtnLabelInit_2","isBtnScenarioIdInit_1","isBtnScenarioIdInit_2","BottomTab","history","classes","push","btn1","Chat","jsonData","setJsonData","scenarioList","setScenarioList","scenarioLog","setScenarioLog","currentSentenceId","setCurrentSentenceId","isButton","setIsButton","isReply","setIsReply","btnLabel_1","setBtnLabel_1","btnLabel_2","setBtnLabel_2","btnScenarioId_1","setBtnScenarioId_1","btnScenarioId_2","setBtnScenarioId_2","btnText","setBtnText","setReply","isFirstRender","ref","jwt","JSON","parse","localStorage","getItem","Authorization","Accesstoken","scenarioHistString","console","log","scenarioHist","length","slice","scrollToBottomOfList","fetch","method","headers","then","res","json","data","scenarioHistory","setItem","stringify","useCallback","current","scrollIntoView","behavior","block","selectBtnText","scenarioId","planeMessage","body","scenario","tmpArray","gender","handleReplyChange","e","target","value","replyText","id","name","birth","processScenario","btnId","btnLabel","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react'\nimport { Typography, makeStyles, TextField, Grid, Box, Button, ListItemAvatar, Avatar, List } from '@material-ui/core'\nimport ListItem from '@material-ui/core/ListItem';\nimport useReactRouter from 'use-react-router';\n// import classes from '*.module.css';\nimport Header from './header';\nimport HeaderChat from './headerChat';\nimport GoogleMapAPI from '../utils/googleMapAPI';\nimport Footer from './footer';\nimport SelectInput from '@material-ui/core/Select/SelectInput';\nimport axios, { AxiosResponse } from 'axios';\nimport { Data, GoogleMap } from '@react-google-maps/api';\nimport userIcon from '../assets/avatarWomen.png';\nimport { Label } from '@material-ui/icons';\nimport jsonDataTest from '../utils/db2.json';\nconst UserIcon = require('../assets/test.png');\nconst TabChatOn = require('../assets/TabChatOn.png');\nconst TabMapOff = require('../assets/TabMapOff.png');\nconst Tap = require('../assets/Tap.png');\n\n\nconst headerHeight = '44px';\nconst ContentBodyHeight = `calc(100vh - ${headerHeight})`;\nconst selectButtonRadius = '18px';\n\nconst useStyles = makeStyles((theme) => ({\n    chatDesignContainer: {\n        display: \"flex\",\n        position: \"relative\",\n        width: \"100%\",\n        // height: '100vh',\n        // height: 'calc(100vh - 200px)',\n        height: ContentBodyHeight,\n        flexDirection: 'column',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n        paddingTop: headerHeight,\n        paddingBottom: '156px',\n        // paddingBottom: isButton ? '156px' : 'calc(10% + 1rem)',\n        // paddingBottom: 'calc(20% + 1rem)',\n    },\n    chatDesign: {\n        display: 'flex',\n        justifyContent: 'center',\n        position: \"relative\",\n        width: \"100%\",\n        backgroundColor: \"#EFEDE9\",\n        // top: \"10%\",\n        // paddingTop: headerHeight,\n        paddingBottom: \"291px\",\n        overflow: \"auto\",\n        '& .MuiList-padding': {\n            display: 'flex',\n            justifyContent: 'center',\n            padding: '0.5rem 1rem',\n        }\n    },\n    chatDesignInner: {\n        position: \"relative\",\n        width: \"100%\",\n        maxWidth: '390px',\n        height: ContentBodyHeight,\n    },\n    buttonDesign: {\n        bottom: \"30%\",\n        position: \"fixed\",\n        borderRadius: \"50%\",\n        // backgroundColor: \"blue\",\n        color: \"white\",\n        // zIndex:100,\n        // marginLeft: \"40%\",\n        fontFamily: 'メイリオ',\n        // cursor: \"pointer\",\n    },\n    selectButton: {\n        width: \"100%\",\n        minHeight: '10%',\n        // height: '10%',\n        justifyItems: 'center',\n        textAlign: 'center',\n        padding: '0.5rem 0',\n        position: 'fixed',\n        bottom: \"10%\",\n        backgroundColor: '#EFEDE9',\n        boxShadow: 'inset 0 -0.5px 0 0 rgba(0, 0, 0, 0.2)',\n        '& .MuiButton-label': {\n            color: '#4575B4',\n        },\n        '& .MuiButton-disableElevation': {\n            width: '100%',\n            maxWidth: '326px',\n            height: '44px',\n            MaxHeight: '100%',\n            border: '1px solid #cdcdcd',\n            backgroundColor: '#FFFFFF',\n        },\n        '& .MuiGrid-grid-xs-12:nth-of-type(1)': {\n            '& button': {\n                borderTopLeftRadius: selectButtonRadius,\n                borderTopRightRadius: selectButtonRadius,\n            },\n        },\n        '& .MuiGrid-grid-xs-12:nth-of-type(2)': {\n            '& button': {\n                borderBottomLeftRadius: selectButtonRadius,\n                borderBottomRightRadius: selectButtonRadius,\n            },\n        },\n    },\n    narrator: {\n        fontFamily: 'メイリオ',\n        // fontSize: 20,\n        display: 'flex',\n        alignItems: 'flex-start',//縦\n        textAlign: 'left',//横\n        backgroundColor: '#efdcc9',\n        color: \"#994C00\",\n        borderRadius: 16,\n        width: '100%',\n        maxWidth: '390px',\n        marginTop: 20,\n        justifyContent: 'flex-start',\n        // marginLeft: '15%',\n        padding: '1rem',\n        // position:'relative',\n    },\n    yukaWrapper: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'flex-start',\n        alignItems: 'flex-start',\n        '& .MuiListItemAvatar-root': {\n            minWidth: '40px',\n        },\n        '& .MuiAvatar-root': {\n            width: '31px',\n            height: '31px',\n        }\n    },\n    yuka: {\n        fontFamily: 'メイリオ',\n        width: '100%',\n        maxWidth: '25ch',\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: 17.5,\n        borderColor: 'blue',\n        padding: 10,\n    },\n    yuka_label: {\n        fontSize: 15,\n        marginBottom: '0%',\n        marginLeft: '15%',\n        marginTop: '0.5rem',\n    },\n    syujiinkoWrapper: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'flex-start',\n        alignItems: 'flex-end',\n    },\n    syujiinko: {\n        fontFamily: 'メイリオ',\n        border: '1px solid #bfc8d5',\n        color: '#7088b1',\n        borderRadius: 17.5,\n        backgroundColor: '#e2e3e4',\n        width: 'auto',\n        maxWidth: '27ch',\n        padding: 10,\n    },\n    avatar: {\n        // padding: 10,\n        marginLeft: 50,\n    },\n    square: {\n        width: \"100%\",\n        height: \"900px\",\n        // margin:'0',\n        backgroundColor: \"#eeedea\",\n    },\n    bottomTab: {\n        position: \"fixed\",\n        bottom: \"0\",\n        height: \"10%\",\n        width: \"100%\",\n        backgroundColor: \"#eeedea\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        textAlign: \"center\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    bottomChat: {\n        // border: \"2px solid\",\n        // borderColor: \"pink\",\n        flex: 1,\n    },\n    bottomMap: {\n        // border: \"2px solid\",\n        // borderColor: \"pink\",\n        flex: 1,\n    },\n    mapLabel: {\n        color: \"#4575b4\",\n        fontWeight: 'bold',\n        fontSize: '14px',\n        letterSpacing: '-0.32px',\n        textAlign: 'center',\n        bottom: \"13%\",\n        position: \"fixed\",\n        borderRadius: \"50%\",\n        // backgroundColor: \"blue\",\n        // zIndex:100,\n        // marginLeft: \"40%\",\n        fontFamily: 'メイリオ',\n        // cursor: \"pointer\",\n    },\n}))\n\ntype JsonData = {\n    sentenceId: string\n    nextSentenceId: string\n    personName: string\n    sentence: {\n        plane: string,\n        button: Array<{\n            buttonLabel: string,\n            nextSentenceId: string\n        }>\n    }\n    reply: string\n}\ntype LogData = {\n    // id: string\n    personName: string\n    plane: string,\n\n}\n\n\nconst currentSentenceIdInit: string = \"0\"\nconst genderInit: string = \"0\"\nconst spotIdInit: string = \"A\"\nconst spotNameInit: string = \"大谷資料館\"\nconst scenarioListInit = [\n    {\n        sentenceId: \"0\",\n        nextSentenceId: \"1\",\n        personName: \"優花\",\n        sentence: {\n            plane: \"初期値消したい\",\n            button: [\n                {\n                    buttonLabel: \"海外強度料理にしよう\",\n                    nextSentenceId: \"21\"\n                },\n                {\n                    buttonLabel: \"お蕎麦屋さんにしよう\",\n                    nextSentenceId: \"22\"\n                }\n            ],\n        },\n        reply: \"true\"\n    }\n]\n\nconst isButtonInit = false\nconst isReplyInit = false\nconst isBtnLabelInit_1 = \"\"\nconst isBtnLabelInit_2 = \"\"\nconst isBtnScenarioIdInit_1 = \"\"\nconst isBtnScenarioIdInit_2 = \"\"\n\nconst BottomTab: React.FC = () => {\n    const { history } = useReactRouter();\n    const classes = useStyles()\n    return (\n\n        <div className={classes.bottomTab}>\n            <div className={classes.bottomChat}>\n\n                <img src={TabChatOn} />\n                <div>\n                    チャット\n                </div>\n            </div>\n            <div className={classes.bottomMap} onClick={() => history.push(\"/map\")}>\n\n                <img src={TabMapOff} />\n                <div>\n                    マップ\n                </div>\n            </div>\n        </div>\n    )\n}\n\nvar btn1: string = \"\"\nconst Chat: React.FC = () => {\n\n\n    const classes = useStyles()\n    const [jsonData, setJsonData] = useState<JsonData[]>()\n    const [scenarioList, setScenarioList] = useState<JsonData[]>()\n    const [scenarioLog, setScenarioLog] = useState<LogData[]>()\n    const [currentSentenceId, setCurrentSentenceId] = useState(currentSentenceIdInit);\n    const [isButton, setIsButton] = useState(isButtonInit)\n    const [isReply, setIsReply] = useState(isReplyInit)\n    const [btnLabel_1, setBtnLabel_1] = useState(isBtnLabelInit_1)\n    const [btnLabel_2, setBtnLabel_2] = useState(isBtnLabelInit_2)\n    const [btnScenarioId_1, setBtnScenarioId_1] = useState(isBtnScenarioIdInit_1)\n    const [btnScenarioId_2, setBtnScenarioId_2] = useState(isBtnScenarioIdInit_2)\n    const [btnText, setBtnText] = useState(\"\")\n    const [reply, setReply] = useState(\"\")\n    const isFirstRender = useRef(false)\n\n\n    const ref = useRef<any>(null)\n\n    useEffect(() => {\n\n        const jwt = JSON.parse(localStorage.getItem('jwt') as string)\n        const { Authorization, Accesstoken } = jwt\n        const scenarioHistString: string | null = localStorage.getItem('scenarioHist')\n        // const scenarioHist: string<{ nextSentenceId: string, personName: string, plane: string }> = localStorage.getItem('scenarioHist')\n        // const { personName, plane } = scenarioHist\n\n        console.log(scenarioHistString)\n        if (scenarioHistString) {\n            console.log(\"Localstorage\")\n            const scenarioHist: Array<{ nextSentenceId: string, personName: string, plane: string }> = JSON.parse(scenarioHistString)\n            if (scenarioHist.length > 0) {\n\n                setScenarioLog(scenarioHist)\n                setCurrentSentenceId(scenarioHist.slice(-1)[0].nextSentenceId)\n                scrollToBottomOfList()\n            }\n        } else {\n            console.log(\"DB\")\n\n            //ログから会話履歴をもってくる\n\n            fetch(\"https://jtb-prd.two-choices.jp/api/scenario/log/\", {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': Authorization,\n                    'accesstoken': Accesstoken\n                },\n            }).then(res => res.json()).then(data => {\n\n\n\n                if (data.scenarioHistory.length <= 0) {\n\n                    localStorage.setItem('scenarioHist', JSON.stringify([]))\n                    return\n                }\n                localStorage.setItem('scenarioHist', JSON.stringify(data.scenarioHistory))\n                // const scenarioGet: Array<{ nextSentenceId: string, personName: string, plane: string }> = JSON.parse(localStorage.getItem('scenarioHist') as string)\n                console.log(data.scenarioHistory)\n\n                // DBから最新のIDをとってくる\n                // scenarioGet.slice(-1)[0]\n\n                setScenarioLog(data.scenarioHistory)\n                setCurrentSentenceId(data.scenarioHistory.slice(-1)[0].nextSentenceId)\n                scrollToBottomOfList()\n\n\n            })\n        }\n    }, [])\n\n    useEffect(() => {\n        scrollToBottomOfList()\n    }, [scenarioList])\n\n\n    useEffect(() => {\n        scrollToBottomOfList()\n    }, [scenarioLog])\n\n\n    const scrollToBottomOfList = React.useCallback(() => {\n        ref!.current!.scrollIntoView({\n            behavior: 'smooth',\n            block: 'end',\n        })\n    }, [ref])\n\n    const selectBtnText = (scenarioId: string, planeMessage: string) => {\n        scenarioList && setScenarioList([...scenarioList, {\n            sentenceId: \"\",\n            nextSentenceId: scenarioId,\n            personName: \"主人公\",\n            sentence: {\n                plane: planeMessage,\n                button: [\n                    {\n                        buttonLabel: \"\",\n                        nextSentenceId: \"\"\n                    },\n                    {\n                        buttonLabel: \"\",\n                        nextSentenceId: \"\"\n                    }\n                ]\n            },\n            reply: \"false\"\n        }])\n        setCurrentSentenceId(scenarioId)\n        const jwt = JSON.parse(localStorage.getItem('jwt') as string)\n        const { Authorization, Accesstoken } = jwt\n        fetch(\"https://jtb-prd.two-choices.jp/api/scenario/log/\", {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': Authorization,\n                'accesstoken': Accesstoken\n            },\n            // body: JSON.stringify({ scenario: { personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId } })\n            body: JSON.stringify({ scenario: { nextSentenceId: scenarioId, personName: \"主人公\", plane: planeMessage } })\n        })\n        const tmpArray = JSON.parse(localStorage.getItem('scenarioHist') as string)\n        console.log(\"tmpArray:\", tmpArray)\n        tmpArray.push({ nextSentenceId: scenarioId, personName: \"主人公\", plane: planeMessage })\n        // localStorage.setItem('scenarioHist', JSON.stringify({ personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId }))\n        localStorage.setItem('scenarioHist', JSON.stringify(tmpArray))\n\n        //性別\n        // console.log(\"性別\",currentSentenceId)\n        if (currentSentenceId === \"1\") {\n            fetch(\"https://jtb-prd.two-choices.jp/api/user/\", {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': Authorization,\n                    'accesstoken': Accesstoken\n                },\n                body: JSON.stringify({ gender: planeMessage })\n            })\n        }\n    }\n\n\n    const handleReplyChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setReply(e.target.value)\n    }\n\n    const replyText = (id: string, planeMessage: string) => {\n\n        scenarioList && setScenarioList([...scenarioList, {\n            sentenceId: \"\",\n            nextSentenceId: \"\",\n            personName: \"主人公\",\n            sentence: {\n                plane: planeMessage,\n                button: [\n                    {\n                        buttonLabel: \"\",\n                        nextSentenceId: \"\"\n                    },\n                    {\n                        buttonLabel: \"\",\n                        nextSentenceId: \"\"\n                    }\n                ]\n            },\n            reply: \"\"\n        }])\n        setCurrentSentenceId(id)\n        setIsReply(false)\n        const jwt = JSON.parse(localStorage.getItem('jwt') as string)\n        const { Authorization, Accesstoken } = jwt\n        fetch(\"https://jtb-prd.two-choices.jp/api/scenario/log/\", {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': Authorization,\n                'accesstoken': Accesstoken\n            },\n            // body: JSON.stringify({ scenario: { personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId } })\n            body: JSON.stringify({ scenario: { nextSentenceId: id, personName: \"主人公\", plane: planeMessage } })\n        })\n        const tmpArray = JSON.parse(localStorage.getItem('scenarioHist') as string)\n        console.log(\"tmpArray:\", tmpArray)\n        // tmpArray.push({ personName: \"主人公\", plane: planeMessage })\n        // localStorage.setItem('scenarioHist', JSON.stringify({ personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId }))\n        localStorage.setItem('scenarioHist', JSON.stringify(tmpArray))\n        // }).then(res => res.json()).then(console.log)\n        // scrollToBottomOfList()\n\n        //名前\n        if (currentSentenceId === \"1\") {\n            fetch(\"https://jtb-prd.two-choices.jp/api/user/\", {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': Authorization,\n                    'accesstoken': Accesstoken\n                },\n                body: JSON.stringify({ name: planeMessage })\n            })\n        }\n        //年齢\n        if (currentSentenceId === \"3\") {\n            fetch(\"https://jtb-prd.two-choices.jp/api/user/\", {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': Authorization,\n                    'accesstoken': Accesstoken\n                },\n                body: JSON.stringify({ birth: planeMessage })\n            })\n        }\n    }\n    const processScenario = async (btnId: string, btnLabel: string) => {\n        // setCurrentSentenceId(\"0\")\n        // console.log(jsonDataTest)\n        if (!localStorage.getItem('scenarioHist')) return\n\n        setIsButton(false)\n        setIsReply(false)\n        if (btnId != \"\") {\n            return\n        } else {\n            //genderはバックエンドでやるのでAccessTokenとAuthorization\n            //静的なデータをとってくる\n            // fetch(\"http://localhost:3001/posts\")\n            //     .then(response => response.json())\n            //     .then(jData => {\n            //         setJsonData(jData)\n            jsonDataTest.map((scenario: any) => {\n                //次もってくる文章に合っているものを抽出\n                if (scenario.sentenceId === currentSentenceId) { //Filtterつかえる\n                    //上書き\n                    scenarioList ? setScenarioList([...scenarioList,\n                    { ...scenario }\n                    ]) :\n                        //新規\n                        setScenarioList([\n                            { ...scenario }\n\n                        ])\n                    console.log(\"scenario.nextSentenceId\", scenario.nextSentenceId)\n                    console.log(\"scenario.sentence.button[0].buttonLabel\", scenario.sentence.button[0].buttonLabel)\n                    // 現在のnextSentenceIdに値が入っている場合\n                    if (scenario.nextSentenceId != \"\") {\n                        setCurrentSentenceId(scenario.nextSentenceId)\n                    }\n                    //現在のsentenceにボタンが入っている場合\n                    if (scenario.sentence.button[0].buttonLabel != \"\") {\n                        setIsButton(true)\n                        setBtnScenarioId_1(scenario.sentence.button[0].nextSentenceId)\n                        setBtnScenarioId_2(scenario.sentence.button[1].nextSentenceId)\n                        setBtnLabel_1(scenario.sentence.button[0].buttonLabel)\n                        setBtnLabel_2(scenario.sentence.button[1].buttonLabel)\n                    }\n                    //返信がテキストで必要な場合\n                    if (scenario.reply === \"true\") {\n                        setIsReply(true)\n                    }\n                    const jwt = JSON.parse(localStorage.getItem('jwt') as string)\n                    const { Authorization, Accesstoken } = jwt\n\n                    //今表示したものをDBに入れる\n                    fetch(\"https://jtb-prd.two-choices.jp/api/scenario/log/\", {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/json',\n                            'Authorization': Authorization,\n                            'accesstoken': Accesstoken\n                        },\n                        body: JSON.stringify({ scenario: { nextSentenceId: currentSentenceId, personName: scenario.personName, plane: scenario.sentence.plane } })\n                    })\n                    const tmpArray = JSON.parse(localStorage.getItem('scenarioHist') as string)\n                    console.log(\"tmpArray:\", tmpArray)\n                    tmpArray.push({ nextSentenceId: scenario.nextSentenceId, personName: scenario.personName, plane: scenario.sentence.plane })\n                    localStorage.setItem('scenarioHist', JSON.stringify(tmpArray))\n                }\n            })\n        }\n    }\n\n    return (\n        <div>\n\n            <HeaderChat title=\"案内人\" />\n\n            <div className={classes.chatDesignContainer}>\n                <div className={classes.chatDesign}>\n                    <div className={classes.chatDesignInner}>\n                        {scenarioLog && scenarioLog.map((scenario: any) => scenario.personName == \"優花\" ?\n                            <div className={classes.yukaWrapper}>\n                                <div className={classes.yuka_label}>優花</div>\n\n                                <List>\n                                    <ListItemAvatar>\n                                        <Avatar alt=\"icon\" src={userIcon} />\n                                    </ListItemAvatar>\n                                    <ListItem className={classes.yuka}>{scenario.plane}</ListItem>\n                                </List>\n                            </div>\n                            : scenario.personName == \"主人公\" ?\n                                <div className={classes.syujiinkoWrapper}>\n                                    <List>\n                                        <ListItem className={classes.syujiinko}>{scenario.plane}</ListItem>\n                                    </List>\n                                </div>\n                                :\n                                <div>\n                                    <List>\n                                        <ListItem className={classes.narrator}>{scenario.plane}</ListItem>\n                                    </List>\n                                </div>\n                        )}\n                        {scenarioList && scenarioList.map((scenario: any) => scenario.personName == \"優花\" ?\n                            <div className={classes.yukaWrapper}>\n                                <div className={classes.yuka_label}>優花</div>\n\n                                <List>\n                                    <ListItemAvatar>\n                                        <Avatar alt=\"icon\" src={userIcon} />\n                                    </ListItemAvatar>\n                                    <ListItem className={classes.yuka}>{scenario.sentence.plane}</ListItem>\n                                </List>\n                            </div>\n                            : scenario.personName == \"主人公\" ?\n                                <div className={classes.syujiinkoWrapper}>\n                                    <List>\n                                        <ListItem className={classes.syujiinko}>{scenario.sentence.plane}</ListItem>\n                                    </List>\n                                </div>\n                                :\n                                <div>\n                                    <List>\n                                        <ListItem className={classes.narrator}>{scenario.sentence.plane}</ListItem>\n                                    </List>\n                                </div>\n                        )}\n\n\n\n\n                        <div id=\"bottom-of-list\" ref={ref} />\n                    </div>\n                    {isButton == true ?\n                        <div className={classes.selectButton}>\n                            <Grid container justify=\"center\" alignItems=\"center\" spacing={0}>\n                                <Grid item xs={12}>\n                                    <Button\n                                        variant=\"contained\"\n                                        disableElevation\n                                        onClick={() => {\n                                            selectBtnText(btnScenarioId_1, btnLabel_1)\n                                            processScenario(btnScenarioId_1, btnLabel_1)\n                                        }}\n                                    >\n                                        {btnLabel_1}\n                                    </Button>\n\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <Button\n                                        variant=\"contained\"\n                                        disableElevation\n                                        onClick={() => {\n                                            selectBtnText(btnScenarioId_2, btnLabel_2)\n                                            processScenario(btnScenarioId_2, btnLabel_2)\n                                        }}\n                                    >\n                                        {btnLabel_2}\n                                    </Button>\n\n                                </Grid>\n                            </Grid>\n                            {/* <button onClick={() => {\n                            selectBtnText(btnScenarioId_1, btnLabel_1)\n                            processScenario(btnScenarioId_1, btnLabel_1)\n                        }}>{btnLabel_1}</button>\n                        <button onClick={() => {\n                            selectBtnText(btnScenarioId_2, btnLabel_2)\n                            processScenario(btnScenarioId_2, btnLabel_2)\n                        }}>{btnLabel_2}</button> */}\n                        </div>\n\n                        // <button className={classes.buttonDesign} onClick={() => { processScenario(\"\", \"\") }}>↑</button>\n                        : isReply == true ?\n                            <div className={classes.selectButton}>\n                                <Grid container justify=\"center\" alignItems=\"flex-end\">\n                                    <Grid item xs={6}>\n                                        <TextField id=\"standard-basic\" label=\"入力してください\" onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                                            handleReplyChange(e)\n                                        } />\n\n                                    </Grid>\n                                    <Grid item xs={3}>\n                                        <Button\n                                            variant=\"contained\"\n                                            disableElevation\n                                            onClick={() => replyText(currentSentenceId, reply)}\n                                        >\n                                            送信\n                                    </Button>\n\n                                    </Grid>\n                                </Grid>\n                                {/* <input\n                                id=\"replyText\"\n                                type=\"input\"\n                                name=\"reply\"\n                                placeholder=\"ここに入力して送信ボタンを押してください\"\n                                onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                                    handleReplyChange(e)\n                                }\n                            /> */}\n                                {/* <button onClick={() => {\n                                replyText(currentSentenceId, reply)\n                                // processScenario(btnScenarioId_1, \"0\")\n                            }}>送信</button> */}\n                            </div>\n                            // : currentSentenceId === \"5\" ? //東京\n                            //     <div className={classes.mapLabel}>\n                            //         目的地に到着したら下のマップページでチェックインしてシナリオを進めましょう\n                            //     </div>\n\n                                // :currentSentenceId === \"68\" ?//大谷資料館\n                                // <div className={classes.mapLabel}>\n                                //     目的地に到着したら下のマップページでチェックインしてシナリオを進めましょう\n                                // </div>\n                                :currentSentenceId === \"125\" ?//クーリ・ルージュ\n                                <div className={classes.mapLabel}>\n                                    目的地に到着したら下のマップページでチェックインしてシナリオを進めましょう\n                                </div>\n                            //   :currentSentenceId === \"165\" ?//若竹\n                            //   <div className={classes.mapLabel}>\n                            //       目的地に到着したら下のマップページでチェックインしてシナリオを進めましょう\n                            //   </div>\n                            :\n                            <img className={classes.buttonDesign} src={Tap} onClick={() => { processScenario(\"\", \"\") }} />\n                        // <button className={classes.buttonDesign} onClick={() => { processScenario(\"\", \"\") }}>↑</button>\n\n                    }\n                    <BottomTab />\n                    {/* <Footer /> */}\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}