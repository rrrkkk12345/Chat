{"ast":null,"code":"var _jsxFileName = \"/Users/rei.kawasato/Desktop/travel/src/pages/chat.tsx\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport { makeStyles, ListItemAvatar, Avatar, List } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport useReactRouter from 'use-react-router'; // import classes from '*.module.css';\n\nimport HeaderChat from './headerChat';\nimport userIcon from '../assets/test.png';\nimport jsonDataTest from '../utils/db2.json';\n\nconst UserIcon = require('../assets/test.png');\n\nconst TabChatOn = require('../assets/TabChatOn.png');\n\nconst TabMapOff = require('../assets/TabMapOff.png');\n\nconst useStyles = makeStyles(theme => ({\n  chatDesign: {\n    position: \"fixed\",\n    width: \"100%\",\n    backgroundColor: \"#EFEDE9\",\n    top: \"10%\",\n    bottom: \"25%\",\n    overflow: \"auto\"\n  },\n  buttonDesign: {\n    bottom: \"30%\",\n    position: \"fixed\",\n    borderRadius: \"50%\",\n    backgroundColor: \"blue\",\n    color: \"white\",\n    // zIndex:100,\n    marginLeft: \"50%\",\n    fontFamily: 'メイリオ',\n    cursor: \"pointer\"\n  },\n  selectButton: {\n    width: \"100%\",\n    minHeight: '10%',\n    justifyItems: 'center',\n    textAlign: 'center',\n    padding: '30px 0',\n    position: 'fixed',\n    bottom: '10%',\n    backgroundColor: 'EFEDE9',\n    zIndex: 500\n  },\n  narrator: {\n    fontFamily: 'メイリオ',\n    // fontSize: 20,\n    display: 'flex',\n    alignItems: 'top',\n    //縦\n    textAlign: 'start',\n    //横\n    color: \"#994C00\",\n    backgroundColor: '#EEB57D',\n    borderRadius: 16,\n    // height: 60,\n    width: '70%',\n    marginTop: 20,\n    alignSelf: '',\n    justifyContent: 'flex-start',\n    marginLeft: '15%',\n    padding: 10 // position:'relative',\n\n  },\n  yuka: {\n    fontFamily: 'メイリオ',\n    width: '100%',\n    maxWidth: '25ch',\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: 20,\n    borderColor: 'blue',\n    padding: 10\n  },\n  yuka_label: {\n    fontSize: 15,\n    marginBottom: '0%',\n    marginLeft: '20%',\n    marginTop: '5%'\n  },\n  syujiinko: {\n    fontFamily: 'メイリオ',\n    border: 'solid',\n    color: '#7088b1',\n    borderRadius: 20,\n    borderColor: '#bfc8d5',\n    backgroundColor: '#e2e3e4',\n    width: '100%',\n    maxWidth: '30ch',\n    marginLeft: '40%',\n    padding: 10\n  },\n  avatar: {\n    // padding: 10,\n    marginLeft: 50\n  },\n  square: {\n    width: \"100%\",\n    height: \"900px\",\n    // margin:'0',\n    backgroundColor: \"#eeedea\"\n  },\n  bottomTab: {\n    position: \"fixed\",\n    bottom: \"0\",\n    height: \"10%\",\n    width: \"100%\",\n    backgroundColor: \"#eeedea\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    textAlign: \"center\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  bottomChat: {\n    // border: \"2px solid\",\n    // borderColor: \"pink\",\n    flex: 1\n  },\n  bottomMap: {\n    // border: \"2px solid\",\n    // borderColor: \"pink\",\n    flex: 1\n  }\n}));\nconst currentSentenceIdInit = \"0\";\nconst genderInit = \"0\";\nconst spotIdInit = \"A\";\nconst spotNameInit = \"大谷資料館\";\nconst scenarioListInit = [{\n  sentenceId: \"0\",\n  nextSentenceId: \"1\",\n  personName: \"優花\",\n  sentence: {\n    plane: \"初期値消したい\",\n    button: [{\n      buttonLabel: \"海外強度料理にしよう\",\n      nextSentenceId: \"21\"\n    }, {\n      buttonLabel: \"お蕎麦屋さんにしよう\",\n      nextSentenceId: \"22\"\n    }]\n  },\n  reply: \"true\"\n}];\nconst isButtonInit = false;\nconst isReplyInit = false;\nconst isBtnLabelInit_1 = \"\";\nconst isBtnLabelInit_2 = \"\";\nconst isBtnScenarioIdInit_1 = \"\";\nconst isBtnScenarioIdInit_2 = \"\";\n\nconst BottomTab = () => {\n  const {\n    history\n  } = useReactRouter();\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.bottomTab,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.bottomChat,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: TabChatOn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }\n  }, \"\\u30C1\\u30E3\\u30C3\\u30C8\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.bottomMap,\n    onClick: () => history.push(\"/map\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: TabMapOff,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }\n  }, \"\\u30DE\\u30C3\\u30D7\")));\n};\n\nvar btn1 = \"\";\n\nconst Chat = () => {\n  const classes = useStyles();\n  const [jsonData, setJsonData] = useState();\n  const [scenarioList, setScenarioList] = useState();\n  const [scenarioLog, setScenarioLog] = useState();\n  const [currentSentenceId, setCurrentSentenceId] = useState(currentSentenceIdInit);\n  const [isButton, setIsButton] = useState(isButtonInit);\n  const [isReply, setIsReply] = useState(isReplyInit);\n  const [btnLabel_1, setBtnLabel_1] = useState(isBtnLabelInit_1);\n  const [btnLabel_2, setBtnLabel_2] = useState(isBtnLabelInit_2);\n  const [btnScenarioId_1, setBtnScenarioId_1] = useState(isBtnScenarioIdInit_1);\n  const [btnScenarioId_2, setBtnScenarioId_2] = useState(isBtnScenarioIdInit_2);\n  const [btnText, setBtnText] = useState(\"\");\n  const [reply, setReply] = useState(\"\");\n  const isFirstRender = useRef(false);\n  const ref = useRef(null);\n  useEffect(() => {\n    const jwt = JSON.parse(localStorage.getItem('jwt'));\n    const {\n      Authorization,\n      Accesstoken\n    } = jwt;\n    const scenarioHist = JSON.parse(localStorage.getItem('scenarioHist')); // const { personName, plane } = scenarioHist\n\n    if (scenarioHist) {\n      console.log(\"Localstorage\");\n      console.log(scenarioHist);\n      console.log(scenarioHist.slice(-1)[0].nextSentenceId);\n      setScenarioLog(scenarioHist);\n      setCurrentSentenceId(scenarioHist.slice(-1)[0].nextSentenceId);\n      scrollToBottomOfList();\n    } else {\n      console.log(\"DB\"); //ログから会話履歴をもってくる\n\n      fetch(\"https://jtb-prd.two-choices.jp/api/scenario/log/\", {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': Authorization,\n          'accesstoken': Accesstoken\n        }\n      }).then(res => res.json()).then(data => {\n        const localHistory = localStorage.setItem('scenarioHist', JSON.stringify(data.ScenarioHistory));\n        const scenarioGet = JSON.parse(localStorage.getItem('scenarioHist'));\n        console.log(scenarioGet);\n        setScenarioLog(scenarioGet); // DBから最新のIDをとってくる\n        // scenarioGet.slice(-1)[0]\n\n        console.log(scenarioGet.slice(-1)[0].nextSentenceId);\n        setCurrentSentenceId(scenarioGet.slice(-1)[0].nextSentenceId);\n        scrollToBottomOfList();\n      });\n    }\n  }, []);\n  useEffect(() => {\n    scrollToBottomOfList();\n  }, [scenarioList]);\n  useEffect(() => {\n    scrollToBottomOfList();\n  }, [scenarioLog]);\n  const scrollToBottomOfList = React.useCallback(() => {\n    ref.current.scrollIntoView({\n      behavior: 'smooth',\n      block: 'end'\n    });\n  }, [ref]);\n\n  const selectBtnText = (scenarioId, planeMessage) => {\n    scenarioList && setScenarioList([...scenarioList, {\n      sentenceId: \"\",\n      nextSentenceId: scenarioId,\n      personName: \"主人公\",\n      sentence: {\n        plane: planeMessage,\n        button: [{\n          buttonLabel: \"\",\n          nextSentenceId: \"\"\n        }, {\n          buttonLabel: \"\",\n          nextSentenceId: \"\"\n        }]\n      },\n      reply: \"false\"\n    }]);\n    setCurrentSentenceId(scenarioId);\n    const jwt = JSON.parse(localStorage.getItem('jwt'));\n    const {\n      Authorization,\n      Accesstoken\n    } = jwt;\n    fetch(\"https://jtb-prd.two-choices.jp/api/scenario/log/\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': Authorization,\n        'accesstoken': Accesstoken\n      },\n      // body: JSON.stringify({ scenario: { personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId } })\n      body: JSON.stringify({\n        scenario: {\n          personName: \"主人公\",\n          plane: planeMessage\n        }\n      })\n    });\n    const tmpArray = JSON.parse(localStorage.getItem('scenarioHist'));\n    console.log(\"tmpArray:\", tmpArray);\n    tmpArray.push({\n      personName: \"主人公\",\n      plane: planeMessage\n    }); // localStorage.setItem('scenarioHist', JSON.stringify({ personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId }))\n\n    localStorage.setItem('scenarioHist', JSON.stringify(tmpArray));\n  };\n\n  const handleReplyChange = e => {\n    setReply(e.target.value);\n  };\n\n  const replyText = (id, planeMessage) => {\n    scenarioList && setScenarioList([...scenarioList, {\n      sentenceId: \"\",\n      nextSentenceId: \"\",\n      personName: \"主人公\",\n      sentence: {\n        plane: planeMessage,\n        button: [{\n          buttonLabel: \"\",\n          nextSentenceId: \"\"\n        }, {\n          buttonLabel: \"\",\n          nextSentenceId: \"\"\n        }]\n      },\n      reply: \"\"\n    }]);\n    setCurrentSentenceId(id);\n    setIsReply(false);\n    const jwt = JSON.parse(localStorage.getItem('jwt'));\n    const {\n      Authorization,\n      Accesstoken\n    } = jwt;\n    fetch(\"https://jtb-prd.two-choices.jp/api/scenario/log/\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': Authorization,\n        'accesstoken': Accesstoken\n      },\n      // body: JSON.stringify({ scenario: { personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId } })\n      body: JSON.stringify({\n        scenario: {\n          personName: \"主人公\",\n          plane: planeMessage\n        }\n      })\n    });\n    const tmpArray = JSON.parse(localStorage.getItem('scenarioHist'));\n    console.log(\"tmpArray:\", tmpArray);\n    tmpArray.push({\n      personName: \"主人公\",\n      plane: planeMessage\n    }); // localStorage.setItem('scenarioHist', JSON.stringify({ personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId }))\n\n    localStorage.setItem('scenarioHist', JSON.stringify(tmpArray)); // }).then(res => res.json()).then(console.log)\n    // scrollToBottomOfList()\n    // if(currentSentenceId===\"1\"){\n    //     fetch(\"https://jtb-prd.two-choices.jp/api/user/\", {\n    //     method: 'POST',\n    //     headers: {\n    //         'Content-Type': 'application/json',\n    //         'Authorization': Authorization,\n    //         'accesstoken': Accesstoken\n    //     },\n    //     body: JSON.stringify({ name:planeMessage })\n    // })\n    // }\n  }; // const getStaticScenario = async () => {\n  //     //フロントかバックエンドからシナリオデータすべてをとってくる（これまでの履歴と、次のシナリオを出す用）\n  //     fetch(\"http://localhost:3001/posts\")\n  //         .then(response => response.json())\n  //         .then(jData => {\n  //             setJsonData(jData)\n  //             jData.map((scenario: any) => {\n  //                 scenarioList ? setScenarioList([...scenarioList,\n  //                 { ...scenario }\n  //                 ]) :\n  //                     //新規\n  //                     setScenarioList([\n  //                         { ...scenario }\n  //                     ])\n  //             })\n  //             setScenarioList(jData)\n  //         })\n  // }\n\n\n  const processScenario = async (btnId, btnLabel) => {\n    // setCurrentSentenceId(\"0\")\n    console.log(jsonDataTest);\n    setIsButton(false);\n    setIsReply(false);\n\n    if (btnId != \"\") {\n      return;\n    } else {\n      //genderはバックエンドでやるのでAccessTokenとAuthorization\n      //静的なデータをとってくる\n      // fetch(\"http://localhost:3001/posts\")\n      //     .then(response => response.json())\n      //     .then(jData => {\n      //         setJsonData(jData)\n      jsonDataTest.map(scenario => {\n        //次もってくる文章に合っているものを抽出\n        if (scenario.sentenceId === currentSentenceId) {\n          //Filtterつかえる\n          //上書き\n          scenarioList ? setScenarioList([...scenarioList, { ...scenario\n          }]) : //新規\n          setScenarioList([{ ...scenario\n          }]);\n          console.log(\"scenario.nextSentenceId\", scenario.nextSentenceId);\n          console.log(\"scenario.sentence.button[0].buttonLabel\", scenario.sentence.button[0].buttonLabel); // 現在のnextSentenceIdに値が入っている場合\n\n          if (scenario.nextSentenceId != \"\") {\n            setCurrentSentenceId(scenario.nextSentenceId);\n          } //現在のsentenceにボタンが入っている場合\n\n\n          if (scenario.sentence.button[0].buttonLabel != \"\") {\n            setIsButton(true);\n            setBtnScenarioId_1(scenario.sentence.button[0].nextSentenceId);\n            setBtnScenarioId_2(scenario.sentence.button[1].nextSentenceId);\n            setBtnLabel_1(scenario.sentence.button[0].buttonLabel);\n            setBtnLabel_2(scenario.sentence.button[1].buttonLabel);\n          } //返信がテキストで必要な場合\n\n\n          if (scenario.reply === \"true\") {\n            setIsReply(true);\n          }\n\n          const jwt = JSON.parse(localStorage.getItem('jwt'));\n          const {\n            Authorization,\n            Accesstoken\n          } = jwt; //今表示したものをDBに入れる\n          // fetch(\"http://localhost:3001/log\", {\n\n          fetch(\"https://jtb-prd.two-choices.jp/api/scenario/log/\", {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': Authorization,\n              'accesstoken': Accesstoken\n            },\n            // body: JSON.stringify({ scenario: { personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId } })\n            body: JSON.stringify({\n              scenario: {\n                nextSentenceId: currentSentenceId,\n                personName: scenario.personName,\n                plane: scenario.sentence.plane\n              }\n            })\n          });\n          const tmpArray = JSON.parse(localStorage.getItem('scenarioHist'));\n          console.log(\"tmpArray:\", tmpArray);\n          tmpArray.push({\n            nextSentenceId: scenario.nextSentenceId,\n            personName: scenario.personName,\n            plane: scenario.sentence.plane\n          }); // localStorage.setItem('scenarioHist', JSON.stringify({ personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId }))\n\n          localStorage.setItem('scenarioHist', JSON.stringify(tmpArray)); // }).then(res => res.json()).then(console.log)\n        } // })\n\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(HeaderChat, {\n    title: \"\\u30C1\\u30E3\\u30C3\\u30C8\\u753B\\u9762\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.chatDesign,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 13\n    }\n  }, scenarioLog && scenarioLog.map(scenario => scenario.personName == \"優花\" ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.yuka_label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 25\n    }\n  }, \"\\u512A\\u82B1\"), /*#__PURE__*/React.createElement(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    alt: \"icon\",\n    src: userIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(List, {\n    className: classes.yuka,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 29\n    }\n  }, scenario.plane))) : scenario.personName == \"主人公\" ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    className: classes.syujiinko,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 33\n    }\n  }, scenario.plane))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    className: classes.narrator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 33\n    }\n  }, scenario.plane)))), scenarioList && scenarioList.map(scenario => scenario.personName == \"優花\" ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.yuka_label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 25\n    }\n  }, \"\\u512A\\u82B1\"), /*#__PURE__*/React.createElement(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    alt: \"icon\",\n    src: userIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(List, {\n    className: classes.yuka,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 29\n    }\n  }, scenario.sentence.plane))) : scenario.personName == \"主人公\" ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    className: classes.syujiinko,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 33\n    }\n  }, scenario.sentence.plane))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    className: classes.narrator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 33\n    }\n  }, scenario.sentence.plane)))), isButton == true ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.selectButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      selectBtnText(btnScenarioId_1, btnLabel_1);\n      processScenario(btnScenarioId_1, btnLabel_1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 25\n    }\n  }, btnLabel_1), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      selectBtnText(btnScenarioId_2, btnLabel_2);\n      processScenario(btnScenarioId_2, btnLabel_2);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 25\n    }\n  }, btnLabel_2)) : isReply == true ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.selectButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"replyText\",\n    type: \"input\",\n    name: \"reply\",\n    placeholder: \"\\u3053\\u3053\\u306B\\u5165\\u529B\\u3057\\u3066\\u9001\\u4FE1\\u30DC\\u30BF\\u30F3\\u3092\\u62BC\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\",\n    onChange: e => handleReplyChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      replyText(currentSentenceId, reply); // processScenario(btnScenarioId_1, \"0\")\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 566,\n      columnNumber: 29\n    }\n  }, \"\\u9001\\u4FE1\")) : currentSentenceId == \"5\" ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.selectButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 29\n    }\n  }, \"\\u76EE\\u7684\\u5730\\u306B\\u5230\\u7740\\u3057\\u305F\\u3089\\u4E0B\\u306E\\u30DE\\u30C3\\u30D7\\u30DA\\u30FC\\u30B8\\u3067\\u30C1\\u30A7\\u30C3\\u30AF\\u30A4\\u30F3\\u3057\\u3066\\u30B7\\u30CA\\u30EA\\u30AA\\u3092\\u9032\\u3081\\u307E\\u3057\\u3087\\u3046\") : /*#__PURE__*/React.createElement(\"button\", {\n    className: classes.buttonDesign,\n    onClick: () => {\n      processScenario(\"\", \"\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 582,\n      columnNumber: 29\n    }\n  }, \"\\u2191\"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"bottom-of-list\",\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(BottomTab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 587,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Chat;","map":{"version":3,"sources":["/Users/rei.kawasato/Desktop/travel/src/pages/chat.tsx"],"names":["React","useEffect","useState","useRef","makeStyles","ListItemAvatar","Avatar","List","ListItem","useReactRouter","HeaderChat","userIcon","jsonDataTest","UserIcon","require","TabChatOn","TabMapOff","useStyles","theme","chatDesign","position","width","backgroundColor","top","bottom","overflow","buttonDesign","borderRadius","color","marginLeft","fontFamily","cursor","selectButton","minHeight","justifyItems","textAlign","padding","zIndex","narrator","display","alignItems","marginTop","alignSelf","justifyContent","yuka","maxWidth","palette","background","paper","borderColor","yuka_label","fontSize","marginBottom","syujiinko","border","avatar","square","height","bottomTab","flexDirection","bottomChat","flex","bottomMap","currentSentenceIdInit","genderInit","spotIdInit","spotNameInit","scenarioListInit","sentenceId","nextSentenceId","personName","sentence","plane","button","buttonLabel","reply","isButtonInit","isReplyInit","isBtnLabelInit_1","isBtnLabelInit_2","isBtnScenarioIdInit_1","isBtnScenarioIdInit_2","BottomTab","history","classes","push","btn1","Chat","jsonData","setJsonData","scenarioList","setScenarioList","scenarioLog","setScenarioLog","currentSentenceId","setCurrentSentenceId","isButton","setIsButton","isReply","setIsReply","btnLabel_1","setBtnLabel_1","btnLabel_2","setBtnLabel_2","btnScenarioId_1","setBtnScenarioId_1","btnScenarioId_2","setBtnScenarioId_2","btnText","setBtnText","setReply","isFirstRender","ref","jwt","JSON","parse","localStorage","getItem","Authorization","Accesstoken","scenarioHist","console","log","slice","scrollToBottomOfList","fetch","method","headers","then","res","json","data","localHistory","setItem","stringify","ScenarioHistory","scenarioGet","useCallback","current","scrollIntoView","behavior","block","selectBtnText","scenarioId","planeMessage","body","scenario","tmpArray","handleReplyChange","e","target","value","replyText","id","processScenario","btnId","btnLabel","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react'\nimport { Typography, makeStyles, Grid, Box, Button, ListItemAvatar, Avatar, List } from '@material-ui/core'\nimport ListItem from '@material-ui/core/ListItem';\nimport useReactRouter from 'use-react-router';\n// import classes from '*.module.css';\nimport Header from './header';\nimport HeaderChat from './headerChat';\nimport GoogleMapAPI from '../utils/googleMapAPI';\nimport Footer from './footer';\nimport SelectInput from '@material-ui/core/Select/SelectInput';\nimport axios, { AxiosResponse } from 'axios';\nimport { Data, GoogleMap } from '@react-google-maps/api';\nimport userIcon from '../assets/test.png';\nimport { Label } from '@material-ui/icons';\nimport jsonDataTest from '../utils/db2.json';\nconst UserIcon = require('../assets/test.png');\nconst TabChatOn = require('../assets/TabChatOn.png');\nconst TabMapOff = require('../assets/TabMapOff.png');\n\nconst useStyles = makeStyles((theme) => ({\n    chatDesign: {\n        position: \"fixed\",\n        width: \"100%\",\n        backgroundColor: \"#EFEDE9\",\n        top: \"10%\",\n        bottom: \"25%\",\n        overflow: \"auto\"\n\n    },\n    buttonDesign: {\n        bottom: \"30%\",\n        position: \"fixed\",\n        borderRadius: \"50%\",\n        backgroundColor: \"blue\",\n        color: \"white\",\n        // zIndex:100,\n        marginLeft: \"50%\",\n        fontFamily: 'メイリオ',\n        cursor: \"pointer\",\n    },\n    selectButton: {\n        width: \"100%\",\n        minHeight: '10%',\n        justifyItems: 'center',\n        textAlign: 'center',\n        padding: '30px 0',\n        position: 'fixed',\n        bottom: '10%',\n        backgroundColor: 'EFEDE9',\n        zIndex:500,\n    },\n    narrator: {\n        fontFamily: 'メイリオ',\n        // fontSize: 20,\n        display: 'flex',\n        alignItems: 'top',//縦\n        textAlign: 'start',//横\n        color: \"#994C00\",\n        backgroundColor: '#EEB57D',\n        borderRadius: 16,\n        // height: 60,\n        width: '70%',\n        marginTop: 20,\n        alignSelf: '',\n        justifyContent: 'flex-start',\n        marginLeft: '15%',\n        padding: 10,\n        // position:'relative',\n    },\n    yuka: {\n        fontFamily: 'メイリオ',\n        width: '100%',\n        maxWidth: '25ch',\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: 20,\n        borderColor: 'blue',\n        padding: 10,\n    },\n    yuka_label: {\n        fontSize: 15,\n        marginBottom: '0%',\n        marginLeft: '20%',\n        marginTop: '5%',\n    },\n    syujiinko: {\n        fontFamily: 'メイリオ',\n        border: 'solid',\n        color: '#7088b1',\n        borderRadius: 20,\n        borderColor: '#bfc8d5',\n        backgroundColor: '#e2e3e4',\n        width: '100%',\n        maxWidth: '30ch',\n        marginLeft: '40%',\n        padding: 10,\n    },\n    avatar: {\n        // padding: 10,\n        marginLeft: 50,\n    },\n    square: {\n        width: \"100%\",\n        height: \"900px\",\n        // margin:'0',\n        backgroundColor: \"#eeedea\",\n    },\n    bottomTab: {\n        position: \"fixed\",\n        bottom: \"0\",\n        height: \"10%\",\n        width: \"100%\",\n        backgroundColor: \"#eeedea\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        textAlign: \"center\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    bottomChat: {\n        // border: \"2px solid\",\n        // borderColor: \"pink\",\n        flex: 1,\n    },\n    bottomMap: {\n        // border: \"2px solid\",\n        // borderColor: \"pink\",\n        flex: 1,\n    }\n}))\n\ntype JsonData = {\n    sentenceId: string\n    nextSentenceId: string\n    personName: string\n    sentence: {\n        plane: string,\n        button: Array<{\n            buttonLabel: string,\n            nextSentenceId: string\n        }>\n    }\n    reply: string\n}\ntype LogData = {\n    // id: string\n    personName: string\n    plane: string,\n\n}\n\n\nconst currentSentenceIdInit: string = \"0\"\nconst genderInit: string = \"0\"\nconst spotIdInit: string = \"A\"\nconst spotNameInit: string = \"大谷資料館\"\nconst scenarioListInit = [\n    {\n        sentenceId: \"0\",\n        nextSentenceId: \"1\",\n        personName: \"優花\",\n        sentence: {\n            plane: \"初期値消したい\",\n            button: [\n                {\n                    buttonLabel: \"海外強度料理にしよう\",\n                    nextSentenceId: \"21\"\n                },\n                {\n                    buttonLabel: \"お蕎麦屋さんにしよう\",\n                    nextSentenceId: \"22\"\n                }\n            ],\n        },\n        reply: \"true\"\n    }\n]\n\nconst isButtonInit = false\nconst isReplyInit = false\nconst isBtnLabelInit_1 = \"\"\nconst isBtnLabelInit_2 = \"\"\nconst isBtnScenarioIdInit_1 = \"\"\nconst isBtnScenarioIdInit_2 = \"\"\n\nconst BottomTab: React.FC = () => {\n    const { history } = useReactRouter();\n    const classes = useStyles()\n    return (\n\n        <div className={classes.bottomTab}>\n            <div className={classes.bottomChat}>\n\n                <img src={TabChatOn} />\n                <div>\n                    チャット\n                </div>\n            </div>\n            <div className={classes.bottomMap} onClick={() => history.push(\"/map\")}>\n\n                <img src={TabMapOff} />\n                <div>\n                    マップ\n                </div>\n            </div>\n        </div>\n    )\n}\n\nvar btn1: string = \"\"\nconst Chat: React.FC = () => {\n    const classes = useStyles()\n    const [jsonData, setJsonData] = useState<JsonData[]>()\n    const [scenarioList, setScenarioList] = useState<JsonData[]>()\n    const [scenarioLog, setScenarioLog] = useState<LogData[]>()\n    const [currentSentenceId, setCurrentSentenceId] = useState(currentSentenceIdInit);\n    const [isButton, setIsButton] = useState(isButtonInit)\n    const [isReply, setIsReply] = useState(isReplyInit)\n    const [btnLabel_1, setBtnLabel_1] = useState(isBtnLabelInit_1)\n    const [btnLabel_2, setBtnLabel_2] = useState(isBtnLabelInit_2)\n    const [btnScenarioId_1, setBtnScenarioId_1] = useState(isBtnScenarioIdInit_1)\n    const [btnScenarioId_2, setBtnScenarioId_2] = useState(isBtnScenarioIdInit_2)\n    const [btnText, setBtnText] = useState(\"\")\n    const [reply, setReply] = useState(\"\")\n    const isFirstRender = useRef(false)\n\n\n    const ref = useRef<any>(null)\n\n    useEffect(() => {\n\n        const jwt = JSON.parse(localStorage.getItem('jwt') as string)\n        const { Authorization, Accesstoken } = jwt\n        const scenarioHist: Array<{ nextSentenceId:string,personName: string, plane: string }> = JSON.parse(localStorage.getItem('scenarioHist') as string)\n        // const { personName, plane } = scenarioHist\n\n\n\n        if (scenarioHist) {\n            console.log(\"Localstorage\")\n\n            console.log(scenarioHist)\n            console.log(scenarioHist.slice(-1)[0].nextSentenceId)\n            setScenarioLog(scenarioHist)\n            setCurrentSentenceId(scenarioHist.slice(-1)[0].nextSentenceId)\n            scrollToBottomOfList()\n        } else {\n            console.log(\"DB\")\n\n            //ログから会話履歴をもってくる\n\n            fetch(\"https://jtb-prd.two-choices.jp/api/scenario/log/\", {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': Authorization,\n                    'accesstoken': Accesstoken\n                },\n            }).then(res => res.json()).then(data => {\n\n                const localHistory = localStorage.setItem('scenarioHist', JSON.stringify(data.ScenarioHistory))\n                const scenarioGet: Array<{ nextSentenceId:string,personName: string, plane: string }> = JSON.parse(localStorage.getItem('scenarioHist') as string)\n                console.log(scenarioGet)\n                setScenarioLog(scenarioGet)\n\n                // DBから最新のIDをとってくる\n                // scenarioGet.slice(-1)[0]\n                console.log(scenarioGet.slice(-1)[0].nextSentenceId)\n                setCurrentSentenceId(scenarioGet.slice(-1)[0].nextSentenceId)\n                scrollToBottomOfList()\n            })\n        }\n    }, [])\n\n    useEffect(() => {\n        scrollToBottomOfList()\n    }, [scenarioList])\n\n\n    useEffect(() => {\n        scrollToBottomOfList()\n    }, [scenarioLog])\n\n\n\n    const scrollToBottomOfList = React.useCallback(() => {\n        ref!.current!.scrollIntoView({\n            behavior: 'smooth',\n            block: 'end',\n        })\n    }, [ref])\n\n    const selectBtnText = (scenarioId: string, planeMessage: string) => {\n        scenarioList && setScenarioList([...scenarioList, {\n            sentenceId: \"\",\n            nextSentenceId: scenarioId,\n            personName: \"主人公\",\n            sentence: {\n                plane: planeMessage,\n                button: [\n                    {\n                        buttonLabel: \"\",\n                        nextSentenceId: \"\"\n                    },\n                    {\n                        buttonLabel: \"\",\n                        nextSentenceId: \"\"\n                    }\n                ]\n            },\n            reply: \"false\"\n        }])\n        setCurrentSentenceId(scenarioId)\n        const jwt = JSON.parse(localStorage.getItem('jwt') as string)\n        const { Authorization, Accesstoken } = jwt\n        fetch(\"https://jtb-prd.two-choices.jp/api/scenario/log/\", {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': Authorization,\n                'accesstoken': Accesstoken\n            },\n            // body: JSON.stringify({ scenario: { personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId } })\n            body: JSON.stringify({ scenario: { personName: \"主人公\", plane: planeMessage } })\n        })\n        const tmpArray = JSON.parse(localStorage.getItem('scenarioHist') as string)\n        console.log(\"tmpArray:\", tmpArray)\n        tmpArray.push({ personName: \"主人公\", plane: planeMessage })\n        // localStorage.setItem('scenarioHist', JSON.stringify({ personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId }))\n        localStorage.setItem('scenarioHist', JSON.stringify(tmpArray))\n    }\n\n\n    const handleReplyChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setReply(e.target.value)\n    }\n\n    const replyText = (id: string, planeMessage: string) => {\n\n        scenarioList && setScenarioList([...scenarioList, {\n            sentenceId: \"\",\n            nextSentenceId: \"\",\n            personName: \"主人公\",\n            sentence: {\n                plane: planeMessage,\n                button: [\n                    {\n                        buttonLabel: \"\",\n                        nextSentenceId: \"\"\n                    },\n                    {\n                        buttonLabel: \"\",\n                        nextSentenceId: \"\"\n                    }\n                ]\n            },\n            reply: \"\"\n        }])\n        setCurrentSentenceId(id)\n        setIsReply(false)\n        const jwt = JSON.parse(localStorage.getItem('jwt') as string)\n        const { Authorization, Accesstoken } = jwt\n        fetch(\"https://jtb-prd.two-choices.jp/api/scenario/log/\", {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': Authorization,\n                'accesstoken': Accesstoken\n            },\n            // body: JSON.stringify({ scenario: { personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId } })\n            body: JSON.stringify({ scenario: { personName: \"主人公\", plane: planeMessage } })\n        })\n        const tmpArray = JSON.parse(localStorage.getItem('scenarioHist') as string)\n        console.log(\"tmpArray:\", tmpArray)\n        tmpArray.push({ personName: \"主人公\", plane: planeMessage })\n        // localStorage.setItem('scenarioHist', JSON.stringify({ personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId }))\n        localStorage.setItem('scenarioHist', JSON.stringify(tmpArray))\n        // }).then(res => res.json()).then(console.log)\n        // scrollToBottomOfList()\n\n        // if(currentSentenceId===\"1\"){\n        //     fetch(\"https://jtb-prd.two-choices.jp/api/user/\", {\n        //     method: 'POST',\n        //     headers: {\n        //         'Content-Type': 'application/json',\n        //         'Authorization': Authorization,\n        //         'accesstoken': Accesstoken\n        //     },\n        //     body: JSON.stringify({ name:planeMessage })\n        // })\n\n        // }\n    }\n    // const getStaticScenario = async () => {\n    //     //フロントかバックエンドからシナリオデータすべてをとってくる（これまでの履歴と、次のシナリオを出す用）\n    //     fetch(\"http://localhost:3001/posts\")\n    //         .then(response => response.json())\n    //         .then(jData => {\n    //             setJsonData(jData)\n    //             jData.map((scenario: any) => {\n    //                 scenarioList ? setScenarioList([...scenarioList,\n    //                 { ...scenario }\n    //                 ]) :\n    //                     //新規\n    //                     setScenarioList([\n    //                         { ...scenario }\n\n    //                     ])\n    //             })\n    //             setScenarioList(jData)\n    //         })\n    // }\n    const processScenario = async (btnId: string, btnLabel: string) => {\n        \n\n\n        // setCurrentSentenceId(\"0\")\n        console.log(jsonDataTest)\n        setIsButton(false)\n        setIsReply(false)\n        if (btnId != \"\") {\n            return\n        } else {\n            //genderはバックエンドでやるのでAccessTokenとAuthorization\n            //静的なデータをとってくる\n            // fetch(\"http://localhost:3001/posts\")\n            //     .then(response => response.json())\n            //     .then(jData => {\n            //         setJsonData(jData)\n                    jsonDataTest.map((scenario: any) => {\n                        //次もってくる文章に合っているものを抽出\n                        if (scenario.sentenceId === currentSentenceId) { //Filtterつかえる\n                            //上書き\n                            scenarioList ? setScenarioList([...scenarioList,\n                            { ...scenario }\n                            ]) :\n                                //新規\n                                setScenarioList([\n                                    { ...scenario }\n\n                                ])\n                            console.log(\"scenario.nextSentenceId\",scenario.nextSentenceId)\n                            console.log(\"scenario.sentence.button[0].buttonLabel\",scenario.sentence.button[0].buttonLabel)\n                            // 現在のnextSentenceIdに値が入っている場合\n                            if (scenario.nextSentenceId != \"\") {\n                                setCurrentSentenceId(scenario.nextSentenceId)\n                            }\n                            //現在のsentenceにボタンが入っている場合\n                            if (scenario.sentence.button[0].buttonLabel != \"\") {\n                                setIsButton(true)\n                                setBtnScenarioId_1(scenario.sentence.button[0].nextSentenceId)\n                                setBtnScenarioId_2(scenario.sentence.button[1].nextSentenceId)\n                                setBtnLabel_1(scenario.sentence.button[0].buttonLabel)\n                                setBtnLabel_2(scenario.sentence.button[1].buttonLabel)\n                            }\n                            //返信がテキストで必要な場合\n                            if (scenario.reply === \"true\") {\n                                setIsReply(true)\n                            }\n                            const jwt = JSON.parse(localStorage.getItem('jwt') as string)\n                            const { Authorization, Accesstoken } = jwt\n\n                            //今表示したものをDBに入れる\n                            // fetch(\"http://localhost:3001/log\", {\n                            fetch(\"https://jtb-prd.two-choices.jp/api/scenario/log/\", {\n                                method: 'POST',\n                                headers: {\n                                    'Content-Type': 'application/json',\n                                    'Authorization': Authorization,\n                                    'accesstoken': Accesstoken\n                                },\n                                // body: JSON.stringify({ scenario: { personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId } })\n                                body: JSON.stringify({ scenario: { nextSentenceId:currentSentenceId, personName: scenario.personName, plane: scenario.sentence.plane } })\n                            })\n                            const tmpArray = JSON.parse(localStorage.getItem('scenarioHist') as string)\n                            console.log(\"tmpArray:\", tmpArray)\n                            tmpArray.push({ nextSentenceId:scenario.nextSentenceId,personName: scenario.personName, plane: scenario.sentence.plane })\n                            // localStorage.setItem('scenarioHist', JSON.stringify({ personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId }))\n                            localStorage.setItem('scenarioHist', JSON.stringify(tmpArray))\n                            // }).then(res => res.json()).then(console.log)\n                        }\n                    // })\n                })\n        }\n    }\n\n    return (\n        <div>\n\n            <HeaderChat title=\"チャット画面\" />\n\n            <div className={classes.chatDesign}>\n                {scenarioLog && scenarioLog.map((scenario: any) => scenario.personName == \"優花\" ?\n                    <div>\n                        <div className={classes.yuka_label}>優花</div>\n\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar alt=\"icon\" src={userIcon} />\n                            </ListItemAvatar>\n                            <List className={classes.yuka}>{scenario.plane}</List>\n                        </ListItem>\n                    </div>\n                    : scenario.personName == \"主人公\" ?\n                        <div>\n                            <ListItem>\n                                <List className={classes.syujiinko}>{scenario.plane}</List>\n                            </ListItem>\n                        </div>\n                        :\n                        <div>\n                            <ListItem>\n                                <List className={classes.narrator}>{scenario.plane}</List>\n                            </ListItem>\n                        </div>\n                )}\n                {scenarioList && scenarioList.map((scenario: any) => scenario.personName == \"優花\" ?\n                    <div>\n                        <div className={classes.yuka_label}>優花</div>\n\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar alt=\"icon\" src={userIcon} />\n                            </ListItemAvatar>\n                            <List className={classes.yuka}>{scenario.sentence.plane}</List>\n                        </ListItem>\n                    </div>\n                    : scenario.personName == \"主人公\" ?\n                        <div>\n                            <ListItem>\n                                <List className={classes.syujiinko}>{scenario.sentence.plane}</List>\n                            </ListItem>\n                        </div>\n                        :\n                        <div>\n                            <ListItem>\n                                <List className={classes.narrator}>{scenario.sentence.plane}</List>\n                            </ListItem>\n                        </div>\n                )}\n\n\n\n\n                {isButton == true ?\n                    <div className={classes.selectButton}>\n                        <button onClick={() => {\n                            selectBtnText(btnScenarioId_1, btnLabel_1)\n                            processScenario(btnScenarioId_1, btnLabel_1)\n                        }}>{btnLabel_1}</button>\n                        <button onClick={() => {\n                            selectBtnText(btnScenarioId_2, btnLabel_2)\n                            processScenario(btnScenarioId_2, btnLabel_2)\n                        }}>{btnLabel_2}</button>\n                    </div>\n                    : isReply == true ?\n                        <div className={classes.selectButton}>\n                            <input\n                                id=\"replyText\"\n                                type=\"input\"\n                                name=\"reply\"\n                                placeholder=\"ここに入力して送信ボタンを押してください\"\n                                onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                                    handleReplyChange(e)\n                                }\n                            />\n                            <button onClick={() => {\n                                replyText(currentSentenceId, reply)\n                                // processScenario(btnScenarioId_1, \"0\")\n                            }}>送信</button>\n                        </div>\n                        : currentSentenceId == \"5\" ?\n                            <div className={classes.selectButton}>\n                                目的地に到着したら下のマップページでチェックインしてシナリオを進めましょう\n                                {/* {GoogleMapAPI({a:\"a\"})} */}\n\n                                {/* <button onClick={() => {\n                                    // replyText(currentSentenceId, reply)\n                                    // processScenario(btnScenarioId_1, \"0\")\n                                }}>チェックイン</button> */}\n                            </div>\n                            :\n                            <button className={classes.buttonDesign} onClick={() => { processScenario(\"\", \"\") }}>↑</button>\n\n                }\n                <div id=\"bottom-of-list\" ref={ref} />\n            </div>\n            <BottomTab />\n            {/* <Footer /> */}\n        </div>\n    )\n}\n\n\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}