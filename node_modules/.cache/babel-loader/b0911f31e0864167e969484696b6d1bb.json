{"ast":null,"code":"import { rootReducer } from './modules/rootState';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport logger from 'redux-logger';\nimport { configureStore } from '@reduxjs/toolkit';\nimport sessionStorage from 'redux-persist/lib/storage/session';\nconst persistConfig = {\n  key: 'root',\n  storage: sessionStorage,\n  whitelist: ['loginInfo', 'resumeStore']\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst middlewares = [];\n\nif (process.env.NODE_ENV === `development`) {\n  middlewares.push(logger);\n}\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: middlewares\n});\nconst persistor = persistStore(store);\nexport { store, persistor };","map":{"version":3,"sources":["/Users/rei.kawasato/Desktop/Projects/JTB/Phase1/workspace/travel/src/store.tsx"],"names":["rootReducer","persistStore","persistReducer","logger","configureStore","sessionStorage","persistConfig","key","storage","whitelist","persistedReducer","middlewares","process","env","NODE_ENV","push","store","reducer","middleware","persistor"],"mappings":"AAAA,SAASA,WAAT,QAA4B,qBAA5B;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,cAAT,QAAqD,kBAArD;AAEA,OAAOC,cAAP,MAA2B,mCAA3B;AACA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBC,EAAAA,OAAO,EAAEH,cAFW;AAGpBI,EAAAA,SAAS,EAAE,CAAC,WAAD,EAAc,aAAd;AAHS,CAAtB;AAKA,MAAMC,gBAAgB,GAAGR,cAAc,CAACI,aAAD,EAAgBN,WAAhB,CAAvC;AAEA,MAAMW,WAAe,GAAE,EAAvB;;AAEA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAA0B,aAA9B,EAA4C;AAC1CH,EAAAA,WAAW,CAACI,IAAZ,CAAiBZ,MAAjB;AACD;;AAED,MAAMa,KAAK,GAAGZ,cAAc,CAAC;AAC3Ba,EAAAA,OAAO,EAAEP,gBADkB;AAE3BQ,EAAAA,UAAU,EAAEP;AAFe,CAAD,CAA5B;AAIA,MAAMQ,SAAS,GAAGlB,YAAY,CAACe,KAAD,CAA9B;AAEA,SAASA,KAAT,EAAgBG,SAAhB","sourcesContent":["import { rootReducer } from './modules/rootState';\nimport { persistStore, persistReducer } from 'redux-persist'\nimport logger from 'redux-logger';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\n\nimport sessionStorage from 'redux-persist/lib/storage/session'\nconst persistConfig = {\n  key: 'root',\n  storage: sessionStorage,\n  whitelist: ['loginInfo', 'resumeStore']\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst middlewares:any= [];\n\nif (process.env.NODE_ENV === `development`) {\n  middlewares.push(logger);\n}\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: middlewares,\n});\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n"]},"metadata":{},"sourceType":"module"}