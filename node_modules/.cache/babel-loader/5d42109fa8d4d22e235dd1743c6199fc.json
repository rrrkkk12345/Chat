{"ast":null,"code":"var _jsxFileName = \"/Users/rei.kawasato/Desktop/travel/src/pages/passwordChange.tsx\";\nimport React, { useState } from 'react';\nimport useReactRouter from 'use-react-router';\nimport { useDispatch } from \"react-redux\";\nimport commonStyle from './accountCommon.module.css';\nimport { makeStyles } from '@material-ui/core';\n\nconst Frame = require('../assets/decorativeframe2.png');\n\nconst useStyles = makeStyles({\n  startText: {\n    // borderBottom: \"1px solid #4575B4\",\n    backgroundColor: \"#EFEDE9\",\n    fontSize: \"15px\",\n    color: \"#4575B4\",\n    width: \"60%\",\n    height: \"5%\",\n    marginTop: \"-70%\",\n    marginLeft: \"20%\",\n    zIndex: 2,\n    position: 'absolute',\n    // letterSpacing: \"6px\",\n    fontFamily: \"メイリオ\",\n    textAlign: \"center\",\n    // lineHeight: \"50px\",\n    paddingBottom: \"1px\"\n  },\n  buttonDesign: {\n    // borderBottom: \"1px solid #4575B4\",\n    backgroundColor: \"#EFEDE9\",\n    fontSize: \"15px\",\n    color: \"#4575B4\",\n    width: \"60%\",\n    height: \"5%\",\n    marginTop: \"20%\",\n    marginLeft: \"20%\",\n    zIndex: 2,\n    position: 'absolute',\n    // letterSpacing: \"6px\",\n    fontFamily: \"メイリオ\",\n    textAlign: \"center\",\n    // lineHeight: \"50px\",\n    paddingBottom: \"1px\"\n  },\n  toStart: {\n    color: 'blue',\n    zIndex: 2,\n    borderBottom: '1px solid blue'\n  },\n  title: {\n    textAlign: 'center',\n    zIndex: 2,\n    alignItems: 'top'\n  },\n  border: {\n    marginLeft: 125,\n    textAlign: 'center',\n    border: '1px solid',\n    borderColor: 'blue',\n    zIndex: 2\n  },\n  center_wrapper: {\n    zIndex: 2,\n    textAlign: 'center'\n  },\n  frameDesign: {\n    zIndex: 500,\n    width: \"90%\",\n    height: \"70%\",\n    display: 'flex',\n    alignItems: 'top',\n    //縦\n    marginTop: \"10%\",\n    justifyContent: 'center',\n    marginLeft: '3%',\n    padding: 10\n  }\n});\n\nconst PasswordChange = () => {\n  const classes = useStyles();\n  const title = \"選択式ミステリー旅行\";\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [previousPassword, setPreviousPassword] = useState('');\n  const [proposePassword, setProposePassword] = useState('');\n  const {\n    history\n  } = useReactRouter();\n  const dispatch = useDispatch();\n  const [securityCode, setSecurityCode] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const jwt = JSON.parse(localStorage.getItem('jwt'));\n  const {\n    Authorization,\n    Accesstoken\n  } = jwt;\n\n  const passwordChange = async event => {\n    console.log(localStorage.getItem('jwt'));\n\n    if (previousPassword && proposePassword) {\n      fetch(\"https://jtb-prd.two-choices.jp/api/change_password/\", {\n        //非同期処理\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': Authorization,\n          'accesstoken': Accesstoken\n        },\n        body: JSON.stringify({\n          previousPassword: previousPassword,\n          proposePassword: proposePassword\n        })\n      }).then(async res => {\n        if (res.status === 200) {\n          console.log(res.status, typeof res.status);\n          window.alert(\"パスワード変更完了しました。次回ログイン時は新規パスワードをご利用ください。\");\n          history.push('/tutorial');\n        } else {\n          setErrorMessage('通信でエラーが発生しました');\n        }\n      }).catch(error => {\n        if (error.statusCode >= 400) setErrorMessage('通信でエラーが発生しました');\n      }); //同期処理\n    } else {\n      setErrorMessage('新旧パスワードを入力してください');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: commonStyle.accountFormInner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: commonStyle.accountFormMain,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: commonStyle.accountFormWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: commonStyle.accountFormCardContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: commonStyle.accountFormTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\\u5909\\u66F4\"), errorMessage ? /*#__PURE__*/React.createElement(\"p\", {\n    className: commonStyle.accountFormError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 33\n    }\n  }, errorMessage) : null, /*#__PURE__*/React.createElement(\"form\", {\n    className: commonStyle.accountForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: commonStyle.accountFormContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"oldPassword\",\n    placeholder: \"\\u65E7\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\\u3092\\u5165\\u529B\" // value={oldPassword}\n    ,\n    onChange: e => setPreviousPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"newPassword\",\n    placeholder: \"\\u65B0\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\\u3092\\u5165\\u529B\" // value={newPassword}\n    ,\n    onChange: e => setProposePassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 23\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    className: commonStyle.accountFormButton,\n    onClick: e => passwordChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  }, \"\\u5909\\u66F4\\u3059\\u308B\"))))))) // <div className={classes.center_wrapper}>\n  //   {/* <p className={classes.title}>{title}</p> */}\n  //   <p className={classes.title}>パスワードを変更してください</p>\n  //   <div className={classes.buttonDesign}>\n  //     {/* <input\n  //       type=\"password\"\n  //       name=\"oldPassword\"\n  //       placeholder=\"旧パスワードを入力\"\n  //     // value={oldPassword}\n  //     // onChange={e => setOldPassword(e.target.value)}\n  //     /> */}\n  //     <div></div>\n  //     <form  noValidate autoComplete=\"off\">\n  //       <TextField \n  //       id=\"standard-basic\" \n  //       label=\"旧パスワードを入力\" \n  //       type=\"password\"\n  //       fullWidth\n  //       onChange={e => setPreviousPassword(e.target.value)}\n  //       />\n  //       <div></div>\n  //        <TextField \n  //       id=\"standard-basic\" \n  //       label=\"新パスワードを入力（確認用）\" \n  //       type=\"password\"\n  //       fullWidth\n  //       onChange={e => setProposePassword(e.target.value)}\n  //       />\n  //     </form>\n  //     {/* <input\n  //       type=\"password\"\n  //       name=\"newPassword\"\n  //       placeholder=\"新パスワードを入力\"\n  //       // value={newPassword}\n  //       onChange={e => setPreviousPassword(e.target.value)}\n  //     />\n  //     <input\n  //       type=\"password\"\n  //       name=\"newPassworVerify\"\n  //       placeholder=\"新パスワードを入力（確認用）\"\n  //       // value={newPassworVerify}\n  //       onChange={e => setProposePassword(e.target.value)}\n  //     /> */}\n  //     <div></div>\n  //     <button\n  //       onClick={(e) => passwordChange(e)}\n  //     >\n  //       送信\n  //     </button>\n  //   </div>\n  //   <div></div>\n  //   8文字以上。大文字・小文字英数字・記号を１つ以上\n  //   <div className={classes.startText}> パスワードをお忘れの方はこちらにメールアドレスを入力し、送信ボタンを押してください</div>\n  // </div>\n  ;\n};\n\nexport default PasswordChange;","map":{"version":3,"sources":["/Users/rei.kawasato/Desktop/travel/src/pages/passwordChange.tsx"],"names":["React","useState","useReactRouter","useDispatch","commonStyle","makeStyles","Frame","require","useStyles","startText","backgroundColor","fontSize","color","width","height","marginTop","marginLeft","zIndex","position","fontFamily","textAlign","paddingBottom","buttonDesign","toStart","borderBottom","title","alignItems","border","borderColor","center_wrapper","frameDesign","display","justifyContent","padding","PasswordChange","classes","email","setEmail","password","setPassword","previousPassword","setPreviousPassword","proposePassword","setProposePassword","history","dispatch","securityCode","setSecurityCode","errorMessage","setErrorMessage","jwt","JSON","parse","localStorage","getItem","Authorization","Accesstoken","passwordChange","event","console","log","fetch","method","headers","body","stringify","then","res","status","window","alert","push","catch","error","statusCode","accountFormInner","accountFormMain","accountFormWrapper","accountFormCardContainer","accountFormTitle","accountFormError","accountForm","accountFormContent","e","target","value","accountFormButton"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport useReactRouter from 'use-react-router';\nimport { useDispatch } from \"react-redux\";\nimport pageActionModule, { usePageAction } from \"../modules/pageActionModule\";\nimport { login } from '../modules/api';\nimport commonStyle from './accountCommon.module.css';\nimport { Typography, makeStyles, TextField,Grid, Box, Button } from '@material-ui/core'\nconst Frame = require('../assets/decorativeframe2.png');\n\nconst useStyles = makeStyles({\n  startText: {\n    // borderBottom: \"1px solid #4575B4\",\n    backgroundColor: \"#EFEDE9\",\n    fontSize: \"15px\",\n    color: \"#4575B4\",\n    width: \"60%\",\n    height: \"5%\",\n    marginTop: \"-70%\",\n    marginLeft: \"20%\",\n    zIndex: 2,\n    position: 'absolute',\n    // letterSpacing: \"6px\",\n    fontFamily: \"メイリオ\",\n    textAlign: \"center\",\n    // lineHeight: \"50px\",\n    paddingBottom: \"1px\",\n  },\n  buttonDesign: {\n    // borderBottom: \"1px solid #4575B4\",\n    backgroundColor: \"#EFEDE9\",\n    fontSize: \"15px\",\n    color: \"#4575B4\",\n    width: \"60%\",\n    height: \"5%\",\n    marginTop: \"20%\",\n    marginLeft: \"20%\",\n    zIndex: 2,\n    position: 'absolute',\n    // letterSpacing: \"6px\",\n    fontFamily: \"メイリオ\",\n    textAlign: \"center\",\n    // lineHeight: \"50px\",\n    paddingBottom: \"1px\",\n  },\n  toStart: {\n    color: 'blue',\n    zIndex: 2,\n    borderBottom: '1px solid blue'\n  },\n  title: {\n    textAlign: 'center',\n    zIndex: 2,\n    alignItems: 'top'\n  },\n  border: {\n    marginLeft: 125,\n    textAlign: 'center',\n    border: '1px solid',\n    borderColor: 'blue',\n    zIndex: 2,\n  },\n  center_wrapper: {\n    zIndex: 2,\n    textAlign: 'center',\n  },\n  frameDesign: {\n    zIndex: 500,\n    width: \"90%\",\n    height: \"70%\",\n    display: 'flex',\n    alignItems: 'top',//縦\n    marginTop: \"10%\",\n    justifyContent: 'center',\n    marginLeft: '3%',\n    padding: 10,\n  }\n})\n\nconst PasswordChange: React.FC = () => {\n  const classes = useStyles()\n  const title = \"選択式ミステリー旅行\"\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [previousPassword, setPreviousPassword] = useState('');\n  const [proposePassword, setProposePassword] = useState('');\n  const { history } = useReactRouter();\n  const dispatch = useDispatch();\n  const [securityCode, setSecurityCode] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const jwt = JSON.parse(localStorage.getItem('jwt') as string)\n  const { Authorization, Accesstoken } = jwt\n  const passwordChange = async (event: React.MouseEvent<HTMLElement>) => {\n    console.log(localStorage.getItem('jwt'))\n    if (previousPassword && proposePassword) {\n      fetch(\"https://jtb-prd.two-choices.jp/api/change_password/\", {//非同期処理\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': Authorization,\n          'accesstoken': Accesstoken\n        },\n        body: JSON.stringify({ previousPassword: previousPassword, proposePassword: proposePassword })\n\n      }).then(async (res: any) => {\n        if (res.status === 200) {\n          console.log(res.status,typeof res.status)\n          window.alert(\"パスワード変更完了しました。次回ログイン時は新規パスワードをご利用ください。\")\n          history.push('/tutorial')\n        } else {\n\n          setErrorMessage('通信でエラーが発生しました')\n        }\n\n      })\n        .catch(error => { if (error.statusCode >= 400) setErrorMessage('通信でエラーが発生しました') })//同期処理\n\n\n    } else {\n      setErrorMessage('新旧パスワードを入力してください');\n    }\n\n  }\n\n  return (\n    <div className={commonStyle.accountFormInner}>\n        <div className={commonStyle.accountFormMain}>\n          <div className={commonStyle.accountFormWrapper}>\n              <div className={commonStyle.accountFormCardContainer}>\n                <h1 className={commonStyle.accountFormTitle}>\n                  パスワード変更\n                </h1>\n                {errorMessage ? <p className={commonStyle.accountFormError}>{errorMessage}</p> : null}\n                <form className={commonStyle.accountForm}>\n                  <div className={commonStyle.accountFormContent}>\n                    <p>\n                      <input\n                        type=\"password\"\n                        name=\"oldPassword\"\n                        placeholder=\"旧パスワードを入力\"\n                        // value={oldPassword}\n                        onChange={e => setPreviousPassword(e.target.value)}\n                      />\n                    </p>\n                    <p>\n                      <input\n                        type=\"password\"\n                        name=\"newPassword\"\n                        placeholder=\"新パスワードを入力\"\n                        // value={newPassword}\n                        onChange={e => setProposePassword(e.target.value)}\n                      />\n                    </p>\n                  </div>\n                  <button\n                    className={commonStyle.accountFormButton}\n                    onClick={e => passwordChange(e)}\n                  >\n                    <span\n                      // className={`${commonStyle.accountFormButtonLink} ${hover? commonStyle.buttonLinkHover: \"\"}`}\n                      // onMouseEnter={() => setHover(true)}\n                      // onMouseLeave={() => setHover(false)}\n                    >\n                      変更する\n                    </span>\n                  </button>\n                </form>\n              </div>\n          </div>\n        </div>\n      </div>\n    // <div className={classes.center_wrapper}>\n    //   {/* <p className={classes.title}>{title}</p> */}\n    //   <p className={classes.title}>パスワードを変更してください</p>\n    //   <div className={classes.buttonDesign}>\n    //     {/* <input\n    //       type=\"password\"\n    //       name=\"oldPassword\"\n    //       placeholder=\"旧パスワードを入力\"\n    //     // value={oldPassword}\n    //     // onChange={e => setOldPassword(e.target.value)}\n    //     /> */}\n    //     <div></div>\n    //     <form  noValidate autoComplete=\"off\">\n    //       <TextField \n    //       id=\"standard-basic\" \n    //       label=\"旧パスワードを入力\" \n    //       type=\"password\"\n    //       fullWidth\n    //       onChange={e => setPreviousPassword(e.target.value)}\n    //       />\n    //       <div></div>\n    //        <TextField \n    //       id=\"standard-basic\" \n    //       label=\"新パスワードを入力（確認用）\" \n    //       type=\"password\"\n    //       fullWidth\n    //       onChange={e => setProposePassword(e.target.value)}\n    //       />\n    //     </form>\n    //     {/* <input\n    //       type=\"password\"\n    //       name=\"newPassword\"\n    //       placeholder=\"新パスワードを入力\"\n    //       // value={newPassword}\n    //       onChange={e => setPreviousPassword(e.target.value)}\n    //     />\n    //     <input\n    //       type=\"password\"\n    //       name=\"newPassworVerify\"\n    //       placeholder=\"新パスワードを入力（確認用）\"\n    //       // value={newPassworVerify}\n    //       onChange={e => setProposePassword(e.target.value)}\n    //     /> */}\n    //     <div></div>\n    //     <button\n    //       onClick={(e) => passwordChange(e)}\n    //     >\n    //       送信\n    //     </button>\n\n    //   </div>\n    //   <div></div>\n    //   8文字以上。大文字・小文字英数字・記号を１つ以上\n    //   <div className={classes.startText}> パスワードをお忘れの方はこちらにメールアドレスを入力し、送信ボタンを押してください</div>\n\n    // </div>\n  )\n}\n\n\nexport default PasswordChange;"]},"metadata":{},"sourceType":"module"}