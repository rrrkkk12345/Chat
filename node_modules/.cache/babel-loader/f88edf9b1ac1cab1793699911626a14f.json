{"ast":null,"code":"var _jsxFileName = \"/Users/rei.kawasato/Desktop/travel/src/pages/chat.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles, ListItemAvatar, Avatar, List } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem'; // import classes from '*.module.css';\n\nimport HeaderChat from './headerChat';\nimport Footer from './footer';\nimport userIcon from '../assets/test.png';\n\nconst UserIcon = require('../assets/test.png');\n\nconst useStyles = makeStyles(theme => ({\n  chatDesign: {\n    position: \"fixed\",\n    width: \"100%\",\n    backgroundColor: \"orange\",\n    top: \"10%\",\n    bottom: \"25%\",\n    overflow: \"scroll\"\n  },\n  buttonDesign: {\n    bottom: \"30%\",\n    position: \"fixed\",\n    borderRadius: \"50%\",\n    backgroundColor: \"blue\",\n    color: \"white\",\n    // zIndex:100,\n    marginLeft: \"50%\",\n    fontFamily: 'メイリオ'\n  },\n  selectButton: {\n    width: \"100%\",\n    minHeight: '10%',\n    justifyItems: 'center',\n    textAlign: 'center',\n    padding: '30px 0',\n    position: 'fixed',\n    bottom: '10%',\n    backgroundColor: 'blue' // zIndex:\"500\",\n\n  },\n  narrator: {\n    fontFamily: 'メイリオ',\n    // fontSize: 20,\n    display: 'flex',\n    alignItems: 'top',\n    //縦\n    textAlign: 'start',\n    //横\n    color: \"#994C00\",\n    backgroundColor: '#EEB57D',\n    borderRadius: 16,\n    height: 60,\n    width: '70%',\n    marginTop: 20,\n    alignSelf: '',\n    justifyContent: 'flex-start',\n    marginLeft: '15%',\n    padding: 10 // position:'relative',\n\n  },\n  yuka: {\n    fontFamily: 'メイリオ',\n    width: '100%',\n    maxWidth: '25ch',\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: 20,\n    borderColor: 'blue',\n    padding: 10\n  },\n  yuka_label: {\n    fontSize: 15,\n    marginBottom: '0%',\n    marginLeft: '20%',\n    marginTop: '5%'\n  },\n  syujiinko: {\n    fontFamily: 'メイリオ',\n    border: 'solid',\n    color: '#7088b1',\n    borderRadius: 20,\n    borderColor: '#bfc8d5',\n    backgroundColor: '#e2e3e4',\n    width: '100%',\n    maxWidth: '30ch',\n    marginLeft: '40%',\n    padding: 10\n  },\n  avatar: {\n    // padding: 10,\n    marginLeft: 50\n  },\n  square: {\n    width: \"100%\",\n    height: \"900px\",\n    // margin:'0',\n    backgroundColor: \"#eeedea\"\n  }\n}));\nconst currentSentenceIdInit = \"0\";\nconst genderInit = \"0\";\nconst spotIdInit = \"A\";\nconst spotNameInit = \"大谷資料館\";\nconst scenarioListInit = [{\n  sentenceId: \"0\",\n  nextSentenceId: \"1\",\n  personName: \"優花\",\n  sentence: {\n    plane: \"初期値消したい\",\n    button: [{\n      buttonLabel: \"海外強度料理にしよう\",\n      nextSentenceId: \"21\"\n    }, {\n      buttonLabel: \"お蕎麦屋さんにしよう\",\n      nextSentenceId: \"22\"\n    }] // important: [\n    //     { \"海外強度料理にしよう\": \"B\" },\n    //     { \"お蕎麦屋さんにしよう\": \"C\" }\n    // ]\n\n  }\n}]; // const travelApi = axios.create({\n//     baseURL: \"http://localhost:3001/posts\",\n//     timeout: 30000,\n//     headers: { 'Content-Type': 'application/json' },\n//     responseType:'json',\n//   });\n// const sampleInit = [\n//     {\n//         name: \"yuka\",\n//         text: \"大谷石の採掘場だから、石ならではの温度なんだよね\"\n//     },\n// ]\n// const isButtonInit = false \n// const isButtonInit = { sentenceId: \"0\", isDisp: false }\n\nconst isButtonInit = false;\nconst isBtnLabelInit_1 = \"\";\nconst isBtnLabelInit_2 = \"\";\nconst isBtnScenarioIdInit_1 = \"\";\nconst isBtnScenarioIdInit_2 = \"\";\nvar btn1 = \"\";\n\nconst Chat = () => {\n  const classes = useStyles();\n  const [jsonData, setJsonData] = useState();\n  const [scenarioList, setScenarioList] = useState();\n  const [currentSentenceId, setCurrentSentenceId] = useState(currentSentenceIdInit);\n  const [isButton, setIsButton] = useState(isButtonInit);\n  const [btnLabel_1, setBtnLabel_1] = useState(isBtnLabelInit_1);\n  const [btnLabel_2, setBtnLabel_2] = useState(isBtnLabelInit_2);\n  const [btnScenarioId_1, setBtnScenarioId_1] = useState(isBtnScenarioIdInit_1);\n  const [btnScenarioId_2, setBtnScenarioId_2] = useState(isBtnScenarioIdInit_2);\n  const [btnText, setBtnText] = useState(\"\");\n  useEffect(() => {}, [currentSentenceId]);\n\n  const buttonClicked = () => {\n    setCurrentSentenceId(btnScenarioId_1); // console.log(btnScenarioId_1)\n    // console.log(currentSentenceId)\n\n    processScenario();\n  };\n\n  const passBtn = (a, b, c, d) => {\n    setBtnScenarioId_1(a);\n    setBtnScenarioId_2(b);\n    setBtnLabel_1(c);\n    setBtnLabel_2(d);\n  };\n\n  const processScenario = async () => {\n    setIsButton(false);\n    fetch(\"http://localhost:3001/posts\").then(response => response.json()).then(jData => {\n      setJsonData(jData);\n      jData.map(scenario => {\n        if (scenario.sentenceId === currentSentenceId) {\n          //上書き\n          scenarioList ? setScenarioList([...scenarioList, {\n            sentenceId: scenario.sentenceId,\n            nextSentenceId: scenario.nextSentenceId,\n            personName: scenario.personName,\n            sentence: {\n              plane: scenario.sentence.plane,\n              button: [{\n                buttonLabel: scenario.sentence.button[0].buttonLabel,\n                nextSentenceId: scenario.sentence.button[0].nextSentenceId\n              }, {\n                buttonLabel: scenario.sentence.button[1].buttonLabel,\n                nextSentenceId: scenario.sentence.button[1].nextSentenceId\n              }]\n            }\n          }]) : //新規\n          setScenarioList([{\n            sentenceId: scenario.sentenceId,\n            nextSentenceId: scenario.nextSentenceId,\n            personName: scenario.personName,\n            sentence: {\n              plane: scenario.sentence.plane,\n              button: [{\n                buttonLabel: scenario.sentence.button[0].buttonLabel,\n                nextSentenceId: scenario.sentence.button[0].nextSentenceId\n              }, {\n                buttonLabel: scenario.sentence.button[1].buttonLabel,\n                nextSentenceId: scenario.sentence.button[1].nextSentenceId\n              }]\n            }\n          }]); //現在のnextSentenceIdに値が入っている場合\n\n          if (scenario.nextSentenceId != \"\") {\n            console.log(\"ID\");\n            setCurrentSentenceId(scenario.nextSentenceId);\n            console.log(currentSentenceId);\n          } //現在のsentenceにボタンが入っている場合\n\n\n          if (scenario.sentence.button[0].buttonLabel != \"\") {\n            setIsButton(true);\n            passBtn(scenario.sentence.button[0].nextSentenceId, scenario.sentence.button[1].nextSentenceId, scenario.sentence.button[0].buttonLabel, scenario.sentence.button[1].buttonLabel);\n            console.log(\"BTN\");\n            console.log(btnScenarioId_1);\n            console.log(btnLabel_1);\n          }\n        }\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(HeaderChat, {\n    title: \"\\u30C1\\u30E3\\u30C3\\u30C8\\u753B\\u9762\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.chatDesign,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 13\n    }\n  }, scenarioList && scenarioList.map(scenario => scenario.personName == \"優花\" ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.yuka_label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 25\n    }\n  }, \"\\u512A\\u82B1\"), /*#__PURE__*/React.createElement(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    alt: \"icon\",\n    src: userIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(List, {\n    className: classes.yuka,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 29\n    }\n  }, scenario.sentence.plane))) : scenario.personName == \"主人公\" ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    className: classes.syujiinko,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 33\n    }\n  }, scenario.sentence.plane))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    className: classes.narrator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 33\n    }\n  }, scenario.sentence.plane)))), isButton == true ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.selectButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      console.log(\"return\" + btnScenarioId_1);\n      setCurrentSentenceId(btn1);\n      buttonClicked();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 25\n    }\n  }, btnLabel_1), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => processScenario(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 25\n    }\n  }, btnLabel_2)) : isButton == false && /*#__PURE__*/React.createElement(\"button\", {\n    className: classes.buttonDesign,\n    onClick: () => {\n      processScenario();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 21\n    }\n  }, \"\\u2191\")), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Chat;","map":{"version":3,"sources":["/Users/rei.kawasato/Desktop/travel/src/pages/chat.tsx"],"names":["React","useEffect","useState","makeStyles","ListItemAvatar","Avatar","List","ListItem","HeaderChat","Footer","userIcon","UserIcon","require","useStyles","theme","chatDesign","position","width","backgroundColor","top","bottom","overflow","buttonDesign","borderRadius","color","marginLeft","fontFamily","selectButton","minHeight","justifyItems","textAlign","padding","narrator","display","alignItems","height","marginTop","alignSelf","justifyContent","yuka","maxWidth","palette","background","paper","borderColor","yuka_label","fontSize","marginBottom","syujiinko","border","avatar","square","currentSentenceIdInit","genderInit","spotIdInit","spotNameInit","scenarioListInit","sentenceId","nextSentenceId","personName","sentence","plane","button","buttonLabel","isButtonInit","isBtnLabelInit_1","isBtnLabelInit_2","isBtnScenarioIdInit_1","isBtnScenarioIdInit_2","btn1","Chat","classes","jsonData","setJsonData","scenarioList","setScenarioList","currentSentenceId","setCurrentSentenceId","isButton","setIsButton","btnLabel_1","setBtnLabel_1","btnLabel_2","setBtnLabel_2","btnScenarioId_1","setBtnScenarioId_1","btnScenarioId_2","setBtnScenarioId_2","btnText","setBtnText","buttonClicked","processScenario","passBtn","a","b","c","d","fetch","then","response","json","jData","map","scenario","console","log"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Typography, makeStyles, Grid, Box, Button, ListItemAvatar, Avatar, List } from '@material-ui/core'\nimport ListItem from '@material-ui/core/ListItem';\n// import classes from '*.module.css';\nimport Header from './header';\nimport HeaderChat from './headerChat';\nimport Footer from './footer';\nimport SelectInput from '@material-ui/core/Select/SelectInput';\nimport axios, { AxiosResponse } from 'axios';\nimport { Data } from '@react-google-maps/api';\nimport userIcon from '../assets/test.png';\nconst UserIcon = require('../assets/test.png');\n\n\nconst useStyles = makeStyles((theme) => ({\n    chatDesign: {\n        position: \"fixed\",\n        width: \"100%\",\n        backgroundColor: \"orange\",\n        top: \"10%\",\n        bottom: \"25%\",\n        overflow: \"scroll\"\n\n    },\n    buttonDesign: {\n        bottom: \"30%\",\n        position: \"fixed\",\n        borderRadius: \"50%\",\n        backgroundColor: \"blue\",\n        color: \"white\",\n        // zIndex:100,\n        marginLeft: \"50%\",\n        fontFamily: 'メイリオ',\n    },\n    selectButton: {\n        width: \"100%\",\n        minHeight: '10%',\n        justifyItems: 'center',\n        textAlign: 'center',\n        padding: '30px 0',\n        position: 'fixed',\n        bottom: '10%',\n        backgroundColor: 'blue',\n        // zIndex:\"500\",\n    },\n    narrator: {\n        fontFamily: 'メイリオ',\n        // fontSize: 20,\n        display: 'flex',\n        alignItems: 'top',//縦\n        textAlign: 'start',//横\n        color: \"#994C00\",\n        backgroundColor: '#EEB57D',\n        borderRadius: 16,\n        height: 60,\n        width: '70%',\n        marginTop: 20,\n        alignSelf: '',\n        justifyContent: 'flex-start',\n        marginLeft: '15%',\n        padding: 10,\n        // position:'relative',\n    },\n    yuka: {\n        fontFamily: 'メイリオ',\n        width: '100%',\n        maxWidth: '25ch',\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: 20,\n        borderColor: 'blue',\n        padding: 10,\n    },\n    yuka_label: {\n        fontSize: 15,\n        marginBottom: '0%',\n        marginLeft: '20%',\n        marginTop: '5%',\n    },\n    syujiinko: {\n        fontFamily: 'メイリオ',\n        border: 'solid',\n        color: '#7088b1',\n        borderRadius: 20,\n        borderColor: '#bfc8d5',\n        backgroundColor: '#e2e3e4',\n        width: '100%',\n        maxWidth: '30ch',\n        marginLeft: '40%',\n        padding: 10,\n    },\n    avatar: {\n        // padding: 10,\n        marginLeft: 50,\n    },\n    square: {\n        width: \"100%\",\n        height: \"900px\",\n        // margin:'0',\n        backgroundColor: \"#eeedea\",\n    }\n}))\n\ntype JsonData = {\n    sentenceId: string\n    nextSentenceId: string\n    personName: string\n    sentence: {\n        plane: string,\n        button: Array<{\n            buttonLabel: string,\n            nextSentenceId: string\n        }>\n        // important:Array<{[key:string]:string}>[]\n    }\n}\n\n\nconst currentSentenceIdInit: string = \"0\"\nconst genderInit: string = \"0\"\nconst spotIdInit: string = \"A\"\nconst spotNameInit: string = \"大谷資料館\"\nconst scenarioListInit = [\n    {\n        sentenceId: \"0\",\n        nextSentenceId: \"1\",\n        personName: \"優花\",\n        sentence: {\n            plane: \"初期値消したい\",\n            button: [\n                {\n                    buttonLabel: \"海外強度料理にしよう\",\n                    nextSentenceId: \"21\"\n                },\n                {\n                    buttonLabel: \"お蕎麦屋さんにしよう\",\n                    nextSentenceId: \"22\"\n                }\n            ],\n            // important: [\n            //     { \"海外強度料理にしよう\": \"B\" },\n            //     { \"お蕎麦屋さんにしよう\": \"C\" }\n            // ]\n        }\n\n    }\n]\n\n// const travelApi = axios.create({\n//     baseURL: \"http://localhost:3001/posts\",\n//     timeout: 30000,\n//     headers: { 'Content-Type': 'application/json' },\n//     responseType:'json',\n//   });\n\n// const sampleInit = [\n//     {\n//         name: \"yuka\",\n//         text: \"大谷石の採掘場だから、石ならではの温度なんだよね\"\n//     },\n// ]\n\n// const isButtonInit = false \n// const isButtonInit = { sentenceId: \"0\", isDisp: false }\nconst isButtonInit = false\nconst isBtnLabelInit_1 = \"\"\nconst isBtnLabelInit_2 = \"\"\nconst isBtnScenarioIdInit_1 = \"\"\nconst isBtnScenarioIdInit_2 = \"\"\n\nvar btn1: string = \"\"\n\nconst Chat: React.FC = () => {\n    const classes = useStyles()\n    const [jsonData, setJsonData] = useState<JsonData[]>()\n    const [scenarioList, setScenarioList] = useState<JsonData[]>()\n    const [currentSentenceId, setCurrentSentenceId] = useState(currentSentenceIdInit);\n    const [isButton, setIsButton] = useState(isButtonInit)\n    const [btnLabel_1, setBtnLabel_1] = useState(isBtnLabelInit_1)\n    const [btnLabel_2, setBtnLabel_2] = useState(isBtnLabelInit_2)\n    const [btnScenarioId_1, setBtnScenarioId_1] = useState(isBtnScenarioIdInit_1)\n    const [btnScenarioId_2, setBtnScenarioId_2] = useState(isBtnScenarioIdInit_2)\n    const [btnText, setBtnText] = useState(\"\")\n\n    useEffect(() => {\n        \n    },[currentSentenceId])\n\n    const buttonClicked = () => {\n        setCurrentSentenceId(btnScenarioId_1)\n        // console.log(btnScenarioId_1)\n        // console.log(currentSentenceId)\n\n        processScenario()\n\n\n\n    }\n\n    const passBtn = (a:string,b:string,c:string,d:string) => {\n        setBtnScenarioId_1(a)\n        setBtnScenarioId_2(b)\n        setBtnLabel_1(c)\n        setBtnLabel_2(d)\n    }\n\n    const processScenario = async () => {\n        setIsButton(false)\n\n        fetch(\"http://localhost:3001/posts\")\n            .then(response => response.json())\n            .then(jData => {\n                setJsonData(jData)\n\n                jData.map((scenario: any) => {\n                    if (scenario.sentenceId === currentSentenceId) {\n                        //上書き\n                        scenarioList ? setScenarioList([...scenarioList, {\n                            sentenceId: scenario.sentenceId,\n                            nextSentenceId: scenario.nextSentenceId,\n                            personName: scenario.personName,\n                            sentence: {\n                                plane: scenario.sentence.plane,\n                                button: [\n                                    {\n                                        buttonLabel: scenario.sentence.button[0].buttonLabel,\n                                        nextSentenceId: scenario.sentence.button[0].nextSentenceId\n                                    },\n                                    {\n                                        buttonLabel: scenario.sentence.button[1].buttonLabel,\n                                        nextSentenceId: scenario.sentence.button[1].nextSentenceId\n                                    }\n                                ]\n                            }\n                        }]) :\n                            //新規\n                            setScenarioList([{\n                                sentenceId: scenario.sentenceId,\n                                nextSentenceId: scenario.nextSentenceId,\n                                personName: scenario.personName,\n                                sentence: {\n                                    plane: scenario.sentence.plane,\n                                    button: [\n                                        {\n                                            buttonLabel: scenario.sentence.button[0].buttonLabel,\n                                            nextSentenceId: scenario.sentence.button[0].nextSentenceId\n                                        },\n                                        {\n                                            buttonLabel: scenario.sentence.button[1].buttonLabel,\n                                            nextSentenceId: scenario.sentence.button[1].nextSentenceId\n                                        }\n                                    ]\n\n                                }\n                            }])\n                        //現在のnextSentenceIdに値が入っている場合\n                        if (scenario.nextSentenceId != \"\") {\n                            console.log(\"ID\")\n                            setCurrentSentenceId(scenario.nextSentenceId)\n                            console.log(currentSentenceId)\n                        }\n                        //現在のsentenceにボタンが入っている場合\n                        if (scenario.sentence.button[0].buttonLabel != \"\") {\n                            setIsButton(true)\n                            passBtn(scenario.sentence.button[0].nextSentenceId,scenario.sentence.button[1].nextSentenceId,scenario.sentence.button[0].buttonLabel,scenario.sentence.button[1].buttonLabel)\n                            console.log(\"BTN\")\n                            console.log(btnScenarioId_1)\n                            console.log(btnLabel_1)\n\n                        }\n                    }\n                })\n            })\n\n    }\n\n\n    return (\n        <div>\n\n            <HeaderChat title=\"チャット画面\" />\n\n            <div className={classes.chatDesign}>\n\n                {scenarioList && scenarioList.map((scenario: any) => scenario.personName == \"優花\" ?\n                    <div>\n                        <div className={classes.yuka_label}>優花</div>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar alt=\"icon\" src={userIcon} />\n                            </ListItemAvatar>\n\n                            <List className={classes.yuka}>{scenario.sentence.plane}</List>\n                        </ListItem>\n                    </div>\n                    : scenario.personName == \"主人公\" ?\n                        <div>\n                            <ListItem>\n                                <List className={classes.syujiinko}>{scenario.sentence.plane}</List>\n                            </ListItem>\n                        </div>\n                        :\n                        <div>\n                            <ListItem>\n                                <List className={classes.narrator}>{scenario.sentence.plane}</List>\n                            </ListItem>\n                        </div>\n                )}\n\n                {isButton == true ?\n                    <div className={classes.selectButton}>\n                        <button onClick={() => {\n                            console.log(\"return\"+btnScenarioId_1)\n                            setCurrentSentenceId(btn1)\n                            buttonClicked()\n\n                        }}>{btnLabel_1}</button>\n                        <button onClick={() => processScenario()}>{btnLabel_2}</button>\n                    </div>\n                    : isButton == false &&\n                    <button className={classes.buttonDesign} onClick={() => { processScenario() }}>↑</button>\n                }\n\n\n\n            </div>\n            <Footer />\n        </div>\n    )\n}\n\n\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}