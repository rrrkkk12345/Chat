{"ast":null,"code":"import _regeneratorRuntime from\"/Users/rei.kawasato/Desktop/travel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/rei.kawasato/Desktop/travel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/rei.kawasato/Desktop/travel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import useReactRouter from'use-react-router';import{useDispatch}from\"react-redux\";import commonStyle from'./accountCommon.module.css';import{makeStyles}from'@material-ui/core';var Frame=require('../assets/decorativeframe2.png');var baseFontColor='#4575b4';var useStyles=makeStyles({startText:{// borderBottom: \"1px solid #4575B4\",\nbackgroundColor:\"#EFEDE9\",fontSize:\"15px\",color:\"#4575B4\",width:\"60%\",height:\"5%\",marginTop:\"-70%\",marginLeft:\"20%\",zIndex:2,position:'absolute',// letterSpacing: \"6px\",\nfontFamily:\"メイリオ\",textAlign:\"center\",// lineHeight: \"50px\",\npaddingBottom:\"1px\"},buttonDesign:{// borderBottom: \"1px solid #4575B4\",\nbackgroundColor:\"#EFEDE9\",fontSize:\"15px\",color:\"#4575B4\",width:\"60%\",height:\"5%\",marginTop:\"20%\",marginLeft:\"20%\",zIndex:2,position:'absolute',// letterSpacing: \"6px\",\nfontFamily:\"メイリオ\",textAlign:\"center\",// lineHeight: \"50px\",\npaddingBottom:\"1px\"},toStart:{color:'blue',zIndex:2,borderBottom:'1px solid blue'},title:{textAlign:'center',zIndex:2,alignItems:'top'},border:{marginLeft:125,textAlign:'center',border:'1px solid',borderColor:'blue',zIndex:2},center_wrapper:{zIndex:2,textAlign:'center'},frameDesign:{zIndex:500,width:\"90%\",height:\"70%\",display:'flex',alignItems:'top',//縦\nmarginTop:\"10%\",justifyContent:'center',marginLeft:'3%',padding:10},loginButtonWrapper:{marginBottom:'1rem',position:'relative',width:'100%','& .MuiButton-disableElevation':{width:'100%',height:'50px',backgroundColor:baseFontColor,fontWeight:'bold',fontSize:'17px',color:'#ffffff',borderRadius:8}}});var PasswordChange=function PasswordChange(){var classes=useStyles();var title=\"選択式ミステリー旅行\";var _useState=useState(''),_useState2=_slicedToArray(_useState,2),email=_useState2[0],setEmail=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),previousPassword=_useState6[0],setPreviousPassword=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),proposePassword=_useState8[0],setProposePassword=_useState8[1];var _useReactRouter=useReactRouter(),history=_useReactRouter.history;var dispatch=useDispatch();var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),securityCode=_useState10[0],setSecurityCode=_useState10[1];var _useState11=useState(''),_useState12=_slicedToArray(_useState11,2),errorMessage=_useState12[0],setErrorMessage=_useState12[1];var jwt=JSON.parse(localStorage.getItem('jwt'));var Authorization=jwt.Authorization,Accesstoken=jwt.Accesstoken;var passwordChange=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:// console.log(localStorage.getItem('jwt'))\nif(previousPassword&&proposePassword){fetch(\"https://jtb-prd.two-choices.jp/api/change_password/\",{//非同期処理\nmethod:'POST',headers:{'Content-Type':'application/json','Authorization':Authorization,'accesstoken':Accesstoken},body:JSON.stringify({previousPassword:previousPassword,proposePassword:proposePassword})}).then(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(res){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(res.status===200){// console.log(res.status, typeof res.status)\nwindow.alert(\"パスワード変更完了しました。次回ログイン時は新規パスワードをご利用ください。\");history.push('/tutorial');}else{setErrorMessage('通信でエラーが発生しました');}case 1:case\"end\":return _context.stop();}}},_callee);}));return function(_x2){return _ref2.apply(this,arguments);};}()).catch(function(error){if(error.statusCode>=400)setErrorMessage('通信でエラーが発生しました');});//同期処理\n}else{setErrorMessage('新旧パスワードを入力してください');}case 1:case\"end\":return _context2.stop();}}},_callee2);}));return function passwordChange(_x){return _ref.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(\"div\",{className:commonStyle.accountFormInner},/*#__PURE__*/React.createElement(\"div\",{className:commonStyle.accountFormMain},/*#__PURE__*/React.createElement(\"div\",{className:commonStyle.accountFormWrapper},/*#__PURE__*/React.createElement(\"div\",{className:commonStyle.accountFormCardContainer},/*#__PURE__*/React.createElement(\"h1\",{className:commonStyle.accountFormTitle},\"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\\u5909\\u66F4\"),errorMessage?/*#__PURE__*/React.createElement(\"p\",{className:commonStyle.accountFormError},errorMessage):null,/*#__PURE__*/React.createElement(\"form\",{className:commonStyle.accountForm},/*#__PURE__*/React.createElement(\"div\",{className:commonStyle.accountFormContent},/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"input\",{type:\"password\"// name=\"oldPassword\"\n,placeholder:\"\\u65E7\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\\u3092\\u5165\\u529B\"// value={oldPassword}\n,onChange:function onChange(e){return setPreviousPassword(e.target.value);}})),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"input\",{type:\"password\"// name=\"newPassword\"\n,placeholder:\"\\u65B0\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\\u3092\\u5165\\u529B\"// value={newPassword}\n,onChange:function onChange(e){return setProposePassword(e.target.value);}}))),/*#__PURE__*/React.createElement(\"p\",null,\"\\u203B8\\u6587\\u5B57\\u4EE5\\u4E0A\\u3002\\u5927\\u6587\\u5B57\\u30FB\\u5C0F\\u6587\\u5B57\\u82F1\\u6570\\u5B57\\u30FB\\u8A18\\u53F7\\u3092\\uFF11\\u3064\\u4EE5\\u4E0A\")),/*#__PURE__*/React.createElement(\"div\",{className:classes.loginButtonWrapper},/*#__PURE__*/React.createElement(\"button\",{className:commonStyle.accountFormButton,onClick:function onClick(e){return passwordChange(e);}},\"\\u5909\\u66F4\\u3059\\u308B\"))))))// <div className={classes.center_wrapper}>\n//   {/* <p className={classes.title}>{title}</p> */}\n//   <p className={classes.title}>パスワードを変更してください</p>\n//   <div className={classes.buttonDesign}>\n//     {/* <input\n//       type=\"password\"\n//       name=\"oldPassword\"\n//       placeholder=\"旧パスワードを入力\"\n//     // value={oldPassword}\n//     // onChange={e => setOldPassword(e.target.value)}\n//     /> */}\n//     <div></div>\n//     <form  noValidate autoComplete=\"off\">\n//       <TextField \n//       id=\"standard-basic\" \n//       label=\"旧パスワードを入力\" \n//       type=\"password\"\n//       fullWidth\n//       onChange={e => setPreviousPassword(e.target.value)}\n//       />\n//       <div></div>\n//        <TextField \n//       id=\"standard-basic\" \n//       label=\"新パスワードを入力（確認用）\" \n//       type=\"password\"\n//       fullWidth\n//       onChange={e => setProposePassword(e.target.value)}\n//       />\n//     </form>\n//     {/* <input\n//       type=\"password\"\n//       name=\"newPassword\"\n//       placeholder=\"新パスワードを入力\"\n//       // value={newPassword}\n//       onChange={e => setPreviousPassword(e.target.value)}\n//     />\n//     <input\n//       type=\"password\"\n//       name=\"newPassworVerify\"\n//       placeholder=\"新パスワードを入力（確認用）\"\n//       // value={newPassworVerify}\n//       onChange={e => setProposePassword(e.target.value)}\n//     /> */}\n//     <div></div>\n//     <button\n//       onClick={(e) => passwordChange(e)}\n//     >\n//       送信\n//     </button>\n//   </div>\n//   <div></div>\n//   8文字以上。大文字・小文字英数字・記号を１つ以上\n//   <div className={classes.startText}> パスワードをお忘れの方はこちらにメールアドレスを入力し、送信ボタンを押してください</div>\n// </div>\n;};export default PasswordChange;","map":{"version":3,"sources":["/Users/rei.kawasato/Desktop/travel/src/pages/passwordChange.tsx"],"names":["React","useState","useReactRouter","useDispatch","commonStyle","makeStyles","Frame","require","baseFontColor","useStyles","startText","backgroundColor","fontSize","color","width","height","marginTop","marginLeft","zIndex","position","fontFamily","textAlign","paddingBottom","buttonDesign","toStart","borderBottom","title","alignItems","border","borderColor","center_wrapper","frameDesign","display","justifyContent","padding","loginButtonWrapper","marginBottom","fontWeight","borderRadius","PasswordChange","classes","email","setEmail","password","setPassword","previousPassword","setPreviousPassword","proposePassword","setProposePassword","history","dispatch","securityCode","setSecurityCode","errorMessage","setErrorMessage","jwt","JSON","parse","localStorage","getItem","Authorization","Accesstoken","passwordChange","event","fetch","method","headers","body","stringify","then","res","status","window","alert","push","catch","error","statusCode","accountFormInner","accountFormMain","accountFormWrapper","accountFormCardContainer","accountFormTitle","accountFormError","accountForm","accountFormContent","e","target","value","accountFormButton"],"mappings":"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K,SAAS,CAAEhF,WAAW,CAACiF,kBAA5B,eACE,0CACE,6BACE,IAAI,CAAC,UACL;AAFF,CAGE,WAAW,CAAC,wDACZ;AAJF,CAKE,QAAQ,CAAE,kBAACC,CAAD,QAAOxC,CAAAA,mBAAmB,CAACwC,CAAC,CAACC,MAAF,CAASC,KAAV,CAA1B,EALZ,EADF,CADF,cAWE,0CACE,6BACE,IAAI,CAAC,UACL;AAFF,CAGE,WAAW,CAAC,wDACZ;AAJF,CAKE,QAAQ,CAAE,kBAACF,CAAD,QAAOtC,CAAAA,kBAAkB,CAACsC,CAAC,CAACC,MAAF,CAASC,KAAV,CAAzB,EALZ,EADF,CAXF,CADF,cAsBE,iLAtBF,CALF,cA6BE,2BAAK,SAAS,CAAEhD,OAAO,CAACL,kBAAxB,eACE,8BACE,SAAS,CAAE/B,WAAW,CAACqF,iBADzB,CAEE,OAAO,CAAE,iBAACH,CAAD,QAAOxB,CAAAA,cAAc,CAACwB,CAAD,CAArB,EAFX,6BADF,CA7BF,CADF,CADF,CADF,CAmDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AA3GF,CA6GD,CA3JD,CA8JA,cAAe/C,CAAAA,cAAf","sourcesContent":["import React, { useState } from 'react';\nimport useReactRouter from 'use-react-router';\nimport { useDispatch } from \"react-redux\";\nimport pageActionModule, { usePageAction } from \"../modules/pageActionModule\";\nimport { login } from '../modules/api';\nimport commonStyle from './accountCommon.module.css';\nimport { Typography, makeStyles, TextField, Grid, Box, Button } from '@material-ui/core'\nconst Frame = require('../assets/decorativeframe2.png');\nconst baseFontColor = '#4575b4';\nconst useStyles = makeStyles({\n  startText: {\n    // borderBottom: \"1px solid #4575B4\",\n    backgroundColor: \"#EFEDE9\",\n    fontSize: \"15px\",\n    color: \"#4575B4\",\n    width: \"60%\",\n    height: \"5%\",\n    marginTop: \"-70%\",\n    marginLeft: \"20%\",\n    zIndex: 2,\n    position: 'absolute',\n    // letterSpacing: \"6px\",\n    fontFamily: \"メイリオ\",\n    textAlign: \"center\",\n    // lineHeight: \"50px\",\n    paddingBottom: \"1px\",\n  },\n  buttonDesign: {\n    // borderBottom: \"1px solid #4575B4\",\n    backgroundColor: \"#EFEDE9\",\n    fontSize: \"15px\",\n    color: \"#4575B4\",\n    width: \"60%\",\n    height: \"5%\",\n    marginTop: \"20%\",\n    marginLeft: \"20%\",\n    zIndex: 2,\n    position: 'absolute',\n    // letterSpacing: \"6px\",\n    fontFamily: \"メイリオ\",\n    textAlign: \"center\",\n    // lineHeight: \"50px\",\n    paddingBottom: \"1px\",\n  },\n  toStart: {\n    color: 'blue',\n    zIndex: 2,\n    borderBottom: '1px solid blue'\n  },\n  title: {\n    textAlign: 'center',\n    zIndex: 2,\n    alignItems: 'top'\n  },\n  border: {\n    marginLeft: 125,\n    textAlign: 'center',\n    border: '1px solid',\n    borderColor: 'blue',\n    zIndex: 2,\n  },\n  center_wrapper: {\n    zIndex: 2,\n    textAlign: 'center',\n  },\n  frameDesign: {\n    zIndex: 500,\n    width: \"90%\",\n    height: \"70%\",\n    display: 'flex',\n    alignItems: 'top',//縦\n    marginTop: \"10%\",\n    justifyContent: 'center',\n    marginLeft: '3%',\n    padding: 10,\n  },\n  loginButtonWrapper: {\n    marginBottom: '1rem',\n    position: 'relative',\n    width: '100%',\n    '& .MuiButton-disableElevation': {\n      width: '100%',\n      height: '50px',\n      backgroundColor: baseFontColor,\n      fontWeight: 'bold',\n      fontSize: '17px',\n      color: '#ffffff',\n      borderRadius: 8,\n    },\n  },\n})\n\nconst PasswordChange: React.FC = () => {\n  const classes = useStyles()\n  const title = \"選択式ミステリー旅行\"\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [previousPassword, setPreviousPassword] = useState('');\n  const [proposePassword, setProposePassword] = useState('');\n  const { history } = useReactRouter();\n  const dispatch = useDispatch();\n  const [securityCode, setSecurityCode] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const jwt = JSON.parse(localStorage.getItem('jwt') as string)\n  const { Authorization, Accesstoken } = jwt\n\n  const passwordChange = async (event: React.MouseEvent<HTMLElement>) => {\n    // console.log(localStorage.getItem('jwt'))\n    if (previousPassword && proposePassword) {\n      fetch(\"https://jtb-prd.two-choices.jp/api/change_password/\", {//非同期処理\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': Authorization,\n          'accesstoken': Accesstoken\n        },\n        body: JSON.stringify({ previousPassword: previousPassword, proposePassword: proposePassword })\n\n      }).then(async (res: any) => {\n        if (res.status === 200) {\n          // console.log(res.status, typeof res.status)\n          window.alert(\"パスワード変更完了しました。次回ログイン時は新規パスワードをご利用ください。\")\n          history.push('/tutorial')\n        } else {\n\n          setErrorMessage('通信でエラーが発生しました')\n        }\n\n      })\n        .catch(error => { if (error.statusCode >= 400) setErrorMessage('通信でエラーが発生しました') })//同期処理\n\n\n    } else {\n      setErrorMessage('新旧パスワードを入力してください');\n    }\n\n  }\n\n  return (\n    <div className={commonStyle.accountFormInner}>\n      <div className={commonStyle.accountFormMain}>\n        <div className={commonStyle.accountFormWrapper}>\n          <div className={commonStyle.accountFormCardContainer}>\n            <h1 className={commonStyle.accountFormTitle}>\n              パスワード変更\n                </h1>\n            {errorMessage ? <p className={commonStyle.accountFormError}>{errorMessage}</p> : null}\n            <form className={commonStyle.accountForm}>\n              <div className={commonStyle.accountFormContent}>\n                <p>\n                  <input\n                    type=\"password\"\n                    // name=\"oldPassword\"\n                    placeholder=\"旧パスワードを入力\"\n                    // value={oldPassword}\n                    onChange={(e) => setPreviousPassword(e.target.value)}\n                  />\n                </p>\n\n                <p>\n                  <input\n                    type=\"password\"\n                    // name=\"newPassword\"\n                    placeholder=\"新パスワードを入力\"\n                    // value={newPassword}\n                    onChange={(e) => setProposePassword(e.target.value)}\n                  />\n                </p>\n              </div>\n              <p>※8文字以上。大文字・小文字英数字・記号を１つ以上</p>\n            </form>\n            <div className={classes.loginButtonWrapper}>\n              <button\n                className={commonStyle.accountFormButton}\n                onClick={(e) => passwordChange(e)}\n              >変更する\n                </button>\n\n            </div>\n            {/* <span\n                // className={`${commonStyle.accountFormButtonLink} ${hover? commonStyle.buttonLinkHover: \"\"}`}\n                // onMouseEnter={() => setHover(true)}\n                // onMouseLeave={() => setHover(false)}\n                >\n                  変更する\n                    </span> */}\n          </div>\n        </div>\n      </div>\n    </div>\n    // <div className={classes.center_wrapper}>\n    //   {/* <p className={classes.title}>{title}</p> */}\n    //   <p className={classes.title}>パスワードを変更してください</p>\n    //   <div className={classes.buttonDesign}>\n    //     {/* <input\n    //       type=\"password\"\n    //       name=\"oldPassword\"\n    //       placeholder=\"旧パスワードを入力\"\n    //     // value={oldPassword}\n    //     // onChange={e => setOldPassword(e.target.value)}\n    //     /> */}\n    //     <div></div>\n    //     <form  noValidate autoComplete=\"off\">\n    //       <TextField \n    //       id=\"standard-basic\" \n    //       label=\"旧パスワードを入力\" \n    //       type=\"password\"\n    //       fullWidth\n    //       onChange={e => setPreviousPassword(e.target.value)}\n    //       />\n    //       <div></div>\n    //        <TextField \n    //       id=\"standard-basic\" \n    //       label=\"新パスワードを入力（確認用）\" \n    //       type=\"password\"\n    //       fullWidth\n    //       onChange={e => setProposePassword(e.target.value)}\n    //       />\n    //     </form>\n    //     {/* <input\n    //       type=\"password\"\n    //       name=\"newPassword\"\n    //       placeholder=\"新パスワードを入力\"\n    //       // value={newPassword}\n    //       onChange={e => setPreviousPassword(e.target.value)}\n    //     />\n    //     <input\n    //       type=\"password\"\n    //       name=\"newPassworVerify\"\n    //       placeholder=\"新パスワードを入力（確認用）\"\n    //       // value={newPassworVerify}\n    //       onChange={e => setProposePassword(e.target.value)}\n    //     /> */}\n    //     <div></div>\n    //     <button\n    //       onClick={(e) => passwordChange(e)}\n    //     >\n    //       送信\n    //     </button>\n\n    //   </div>\n    //   <div></div>\n    //   8文字以上。大文字・小文字英数字・記号を１つ以上\n    //   <div className={classes.startText}> パスワードをお忘れの方はこちらにメールアドレスを入力し、送信ボタンを押してください</div>\n\n    // </div>\n  )\n}\n\n\nexport default PasswordChange;"]},"metadata":{},"sourceType":"module"}