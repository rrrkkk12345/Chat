{"ast":null,"code":"var _jsxFileName = \"/Users/rei.kawasato/Desktop/travel/src/pages/chat.tsx\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport { makeStyles, ListItemAvatar, Avatar, List } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem'; // import classes from '*.module.css';\n\nimport HeaderChat from './headerChat';\nimport userIcon from '../assets/test.png';\n\nconst UserIcon = require('../assets/test.png');\n\nconst TabChatOn = require('../assets/TabChatOn.png');\n\nconst TabMapOff = require('../assets/TabMapOff.png');\n\nconst useStyles = makeStyles(theme => ({\n  chatDesign: {\n    position: \"fixed\",\n    width: \"100%\",\n    backgroundColor: \"#EFEDE9\",\n    top: \"10%\",\n    bottom: \"25%\",\n    overflow: \"auto\"\n  },\n  buttonDesign: {\n    bottom: \"30%\",\n    position: \"fixed\",\n    borderRadius: \"50%\",\n    backgroundColor: \"blue\",\n    color: \"white\",\n    // zIndex:100,\n    marginLeft: \"50%\",\n    fontFamily: 'メイリオ'\n  },\n  selectButton: {\n    width: \"100%\",\n    minHeight: '10%',\n    justifyItems: 'center',\n    textAlign: 'center',\n    padding: '30px 0',\n    position: 'fixed',\n    bottom: '10%',\n    backgroundColor: 'EFEDE9' // zIndex:\"500\",\n\n  },\n  narrator: {\n    fontFamily: 'メイリオ',\n    // fontSize: 20,\n    display: 'flex',\n    alignItems: 'top',\n    //縦\n    textAlign: 'start',\n    //横\n    color: \"#994C00\",\n    backgroundColor: '#EEB57D',\n    borderRadius: 16,\n    height: 60,\n    width: '70%',\n    marginTop: 20,\n    alignSelf: '',\n    justifyContent: 'flex-start',\n    marginLeft: '15%',\n    padding: 10 // position:'relative',\n\n  },\n  yuka: {\n    fontFamily: 'メイリオ',\n    width: '100%',\n    maxWidth: '25ch',\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: 20,\n    borderColor: 'blue',\n    padding: 10\n  },\n  yuka_label: {\n    fontSize: 15,\n    marginBottom: '0%',\n    marginLeft: '20%',\n    marginTop: '5%'\n  },\n  syujiinko: {\n    fontFamily: 'メイリオ',\n    border: 'solid',\n    color: '#7088b1',\n    borderRadius: 20,\n    borderColor: '#bfc8d5',\n    backgroundColor: '#e2e3e4',\n    width: '100%',\n    maxWidth: '30ch',\n    marginLeft: '40%',\n    padding: 10\n  },\n  avatar: {\n    // padding: 10,\n    marginLeft: 50\n  },\n  square: {\n    width: \"100%\",\n    height: \"900px\",\n    // margin:'0',\n    backgroundColor: \"#eeedea\"\n  },\n  bottomTab: {\n    position: \"fixed\",\n    bottom: \"0\",\n    height: \"10%\",\n    width: \"100%\",\n    backgroundColor: \"black\",\n    // justifyContent: \"space-evenly\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    textAlign: \"center\" // justifyContent:\"center\",\n\n  },\n  bottomChat: {\n    verticalAlign: \"middle\",\n    border: \"2px solid\",\n    borderColor: \"pink\",\n    height: \"100%\",\n    flex: 1\n  },\n  bottomMap: {\n    border: \"2px solid\",\n    borderColor: \"pink\",\n    height: \"100%\",\n    flex: 1\n  }\n}));\nconst currentSentenceIdInit = \"0\";\nconst genderInit = \"0\";\nconst spotIdInit = \"A\";\nconst spotNameInit = \"大谷資料館\";\nconst scenarioListInit = [{\n  sentenceId: \"0\",\n  nextSentenceId: \"1\",\n  personName: \"優花\",\n  sentence: {\n    plane: \"初期値消したい\",\n    button: [{\n      buttonLabel: \"海外強度料理にしよう\",\n      nextSentenceId: \"21\"\n    }, {\n      buttonLabel: \"お蕎麦屋さんにしよう\",\n      nextSentenceId: \"22\"\n    }] // important: [\n    //     { \"海外強度料理にしよう\": \"B\" },\n    //     { \"お蕎麦屋さんにしよう\": \"C\" }\n    // ]\n\n  },\n  reply: \"true\"\n}]; // const travelApi = axios.create({\n//     baseURL: \"http://localhost:3001/posts\",\n//     timeout: 30000,\n//     headers: { 'Content-Type': 'application/json' },\n//     responseType:'json',\n//   });\n// const sampleInit = [\n//     {\n//         name: \"yuka\",\n//         text: \"大谷石の採掘場だから、石ならではの温度なんだよね\"\n//     },\n// ]\n// const isButtonInit = false \n// const isButtonInit = { sentenceId: \"0\", isDisp: false }\n\nconst isButtonInit = false;\nconst isReplyInit = false;\nconst isBtnLabelInit_1 = \"\";\nconst isBtnLabelInit_2 = \"\";\nconst isBtnScenarioIdInit_1 = \"\";\nconst isBtnScenarioIdInit_2 = \"\";\n\nconst BottomTab = () => {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.bottomTab,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.bottomChat,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: TabChatOn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.bottomMap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: TabMapOff,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 17\n    }\n  })));\n};\n\nvar btn1 = \"\";\n\nconst Chat = () => {\n  const classes = useStyles();\n  const [jsonData, setJsonData] = useState();\n  const [scenarioList, setScenarioList] = useState();\n  const [currentSentenceId, setCurrentSentenceId] = useState(currentSentenceIdInit);\n  const [isButton, setIsButton] = useState(isButtonInit);\n  const [isReply, setIsReply] = useState(isReplyInit);\n  const [btnLabel_1, setBtnLabel_1] = useState(isBtnLabelInit_1);\n  const [btnLabel_2, setBtnLabel_2] = useState(isBtnLabelInit_2);\n  const [btnScenarioId_1, setBtnScenarioId_1] = useState(isBtnScenarioIdInit_1);\n  const [btnScenarioId_2, setBtnScenarioId_2] = useState(isBtnScenarioIdInit_2);\n  const [btnText, setBtnText] = useState(\"\");\n  const [reply, setReply] = useState(\"\");\n  const isFirstRender = useRef(false);\n  const ref = useRef(null);\n  useEffect(() => {\n    //prd \n    //npm run build\n    // ページが描画されたらリストの末尾までスクロール\n    scrollToBottomOfList();\n  }, [scenarioList]);\n  const scrollToBottomOfList = React.useCallback(() => {\n    ref.current.scrollIntoView({\n      behavior: 'smooth',\n      block: 'end'\n    });\n  }, [ref]);\n\n  const selectBtnText = (scenarioId, planeMessage) => {\n    scenarioList && setScenarioList([...scenarioList, {\n      sentenceId: \"\",\n      nextSentenceId: scenarioId,\n      personName: \"主人公\",\n      sentence: {\n        plane: planeMessage,\n        button: [{\n          buttonLabel: \"\",\n          nextSentenceId: \"\"\n        }, {\n          buttonLabel: \"\",\n          nextSentenceId: \"\"\n        }]\n      },\n      reply: \"false\"\n    }]);\n    setCurrentSentenceId(scenarioId); // scrollToBottomOfList()\n  };\n\n  const handleReplyChange = e => {\n    setReply(e.target.value);\n  };\n\n  const replyText = (id, planeMessage) => {\n    scenarioList && setScenarioList([...scenarioList, {\n      sentenceId: \"\",\n      nextSentenceId: \"\",\n      personName: \"主人公\",\n      sentence: {\n        plane: planeMessage,\n        button: [{\n          buttonLabel: \"\",\n          nextSentenceId: \"\"\n        }, {\n          buttonLabel: \"\",\n          nextSentenceId: \"\"\n        }]\n      },\n      reply: \"\"\n    }]);\n    setCurrentSentenceId(id); // scrollToBottomOfList()\n  };\n\n  const processScenario = async (btnId, btnLabel) => {\n    setIsButton(false);\n    setIsReply(false);\n\n    if (btnId != \"\") {} else {\n      //genderはバックエンドでやるのでAccessTokenとAuthorization\n      fetch(\"http://localhost:3001/posts\").then(response => response.json()).then(jData => {\n        setJsonData(jData);\n        jData.map(scenario => {\n          if (scenario.sentenceId === currentSentenceId) {\n            //Filtterつかえる\n            //上書き\n            scenarioList ? setScenarioList([...scenarioList, { ...scenario\n            }]) : //新規\n            setScenarioList([{ ...scenario\n            }]); //現在のnextSentenceIdに値が入っている場合\n\n            if (scenario.nextSentenceId != \"\") {\n              setCurrentSentenceId(scenario.nextSentenceId);\n            } //現在のsentenceにボタンが入っている場合\n\n\n            if (scenario.sentence.button[0].buttonLabel != \"\") {\n              setIsButton(true);\n              setBtnScenarioId_1(scenario.sentence.button[0].nextSentenceId);\n              setBtnScenarioId_2(scenario.sentence.button[1].nextSentenceId);\n              setBtnLabel_1(scenario.sentence.button[0].buttonLabel);\n              setBtnLabel_2(scenario.sentence.button[1].buttonLabel);\n            } //返信がテキストで必要な場合\n\n\n            if (scenario.reply === \"true\") {\n              setIsReply(true);\n            }\n          }\n        });\n      });\n    } // scrollToBottomOfList()\n\n  }; // const scrollToBottom = () => {\n  //     messagesEnd.scrollIntoView({ behavior: \"smooth\" });\n  //   }\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(HeaderChat, {\n    title: \"\\u30C1\\u30E3\\u30C3\\u30C8\\u753B\\u9762\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.chatDesign,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 13\n    }\n  }, scenarioList && scenarioList.map(scenario => scenario.personName == \"優花\" ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.yuka_label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 25\n    }\n  }, \"\\u512A\\u82B1\"), /*#__PURE__*/React.createElement(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    alt: \"icon\",\n    src: userIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(List, {\n    className: classes.yuka,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 29\n    }\n  }, scenario.sentence.plane))) : scenario.personName == \"主人公\" ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    className: classes.syujiinko,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 33\n    }\n  }, scenario.sentence.plane))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    className: classes.narrator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 33\n    }\n  }, scenario.sentence.plane)))), isButton == true ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.selectButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      selectBtnText(btnScenarioId_1, btnLabel_1);\n      processScenario(btnScenarioId_1, btnLabel_1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 25\n    }\n  }, btnScenarioId_1 + btnLabel_1), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      selectBtnText(btnScenarioId_2, btnLabel_2);\n      processScenario(btnScenarioId_2, btnLabel_2);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 25\n    }\n  }, btnLabel_2)) : isReply == true ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.selectButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"replyText\",\n    type: \"input\",\n    name: \"reply\",\n    placeholder: \"\\u3053\\u3053\\u306B\\u5165\\u529B\\u3057\\u3066\\u9001\\u4FE1\\u30DC\\u30BF\\u30F3\\u3092\\u62BC\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\",\n    onChange: e => handleReplyChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      replyText(currentSentenceId, reply);\n      processScenario(btnScenarioId_1, \"0\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 29\n    }\n  }, \"send\")) : /*#__PURE__*/React.createElement(\"button\", {\n    className: classes.buttonDesign,\n    onClick: () => {\n      processScenario(\"\", \"\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 25\n    }\n  }, \"\\u2191\"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"bottom-of-list\",\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(BottomTab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Chat;","map":{"version":3,"sources":["/Users/rei.kawasato/Desktop/travel/src/pages/chat.tsx"],"names":["React","useEffect","useState","useRef","makeStyles","ListItemAvatar","Avatar","List","ListItem","HeaderChat","userIcon","UserIcon","require","TabChatOn","TabMapOff","useStyles","theme","chatDesign","position","width","backgroundColor","top","bottom","overflow","buttonDesign","borderRadius","color","marginLeft","fontFamily","selectButton","minHeight","justifyItems","textAlign","padding","narrator","display","alignItems","height","marginTop","alignSelf","justifyContent","yuka","maxWidth","palette","background","paper","borderColor","yuka_label","fontSize","marginBottom","syujiinko","border","avatar","square","bottomTab","flexDirection","bottomChat","verticalAlign","flex","bottomMap","currentSentenceIdInit","genderInit","spotIdInit","spotNameInit","scenarioListInit","sentenceId","nextSentenceId","personName","sentence","plane","button","buttonLabel","reply","isButtonInit","isReplyInit","isBtnLabelInit_1","isBtnLabelInit_2","isBtnScenarioIdInit_1","isBtnScenarioIdInit_2","BottomTab","classes","btn1","Chat","jsonData","setJsonData","scenarioList","setScenarioList","currentSentenceId","setCurrentSentenceId","isButton","setIsButton","isReply","setIsReply","btnLabel_1","setBtnLabel_1","btnLabel_2","setBtnLabel_2","btnScenarioId_1","setBtnScenarioId_1","btnScenarioId_2","setBtnScenarioId_2","btnText","setBtnText","setReply","isFirstRender","ref","scrollToBottomOfList","useCallback","current","scrollIntoView","behavior","block","selectBtnText","scenarioId","planeMessage","handleReplyChange","e","target","value","replyText","id","processScenario","btnId","btnLabel","fetch","then","response","json","jData","map","scenario"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react'\nimport { Typography, makeStyles, Grid, Box, Button, ListItemAvatar, Avatar, List } from '@material-ui/core'\nimport ListItem from '@material-ui/core/ListItem';\n// import classes from '*.module.css';\nimport Header from './header';\nimport HeaderChat from './headerChat';\nimport Footer from './footer';\nimport SelectInput from '@material-ui/core/Select/SelectInput';\nimport axios, { AxiosResponse } from 'axios';\nimport { Data } from '@react-google-maps/api';\nimport userIcon from '../assets/test.png';\nconst UserIcon = require('../assets/test.png');\nconst TabChatOn = require('../assets/TabChatOn.png');\nconst TabMapOff = require('../assets/TabMapOff.png');\n\n\nconst useStyles = makeStyles((theme) => ({\n    chatDesign: {\n        position: \"fixed\",\n        width: \"100%\",\n        backgroundColor: \"#EFEDE9\",\n        top: \"10%\",\n        bottom: \"25%\",\n        overflow: \"auto\"\n\n    },\n    buttonDesign: {\n        bottom: \"30%\",\n        position: \"fixed\",\n        borderRadius: \"50%\",\n        backgroundColor: \"blue\",\n        color: \"white\",\n        // zIndex:100,\n        marginLeft: \"50%\",\n        fontFamily: 'メイリオ',\n    },\n    selectButton: {\n        width: \"100%\",\n        minHeight: '10%',\n        justifyItems: 'center',\n        textAlign: 'center',\n        padding: '30px 0',\n        position: 'fixed',\n        bottom: '10%',\n        backgroundColor: 'EFEDE9',\n        // zIndex:\"500\",\n    },\n    narrator: {\n        fontFamily: 'メイリオ',\n        // fontSize: 20,\n        display: 'flex',\n        alignItems: 'top',//縦\n        textAlign: 'start',//横\n        color: \"#994C00\",\n        backgroundColor: '#EEB57D',\n        borderRadius: 16,\n        height: 60,\n        width: '70%',\n        marginTop: 20,\n        alignSelf: '',\n        justifyContent: 'flex-start',\n        marginLeft: '15%',\n        padding: 10,\n        // position:'relative',\n    },\n    yuka: {\n        fontFamily: 'メイリオ',\n        width: '100%',\n        maxWidth: '25ch',\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: 20,\n        borderColor: 'blue',\n        padding: 10,\n    },\n    yuka_label: {\n        fontSize: 15,\n        marginBottom: '0%',\n        marginLeft: '20%',\n        marginTop: '5%',\n    },\n    syujiinko: {\n        fontFamily: 'メイリオ',\n        border: 'solid',\n        color: '#7088b1',\n        borderRadius: 20,\n        borderColor: '#bfc8d5',\n        backgroundColor: '#e2e3e4',\n        width: '100%',\n        maxWidth: '30ch',\n        marginLeft: '40%',\n        padding: 10,\n    },\n    avatar: {\n        // padding: 10,\n        marginLeft: 50,\n    },\n    square: {\n        width: \"100%\",\n        height: \"900px\",\n        // margin:'0',\n        backgroundColor: \"#eeedea\",\n    },\n    bottomTab: {\n        position: \"fixed\",\n        bottom: \"0\",\n        height: \"10%\",\n        width: \"100%\",\n        backgroundColor: \"black\",\n        // justifyContent: \"space-evenly\",\n        display: \"flex\",\n        flexDirection:\"row\",\n        textAlign:\"center\",\n        // justifyContent:\"center\",\n    },\n    bottomChat: {\n        verticalAlign:\"middle\",\n        border: \"2px solid\",\n        borderColor: \"pink\",\n        height:\"100%\",\n        flex:1,\n        \n    },\n    bottomMap: {\n        border: \"2px solid\",\n        borderColor: \"pink\",\n        height:\"100%\",\n        flex:1,\n        \n\n    }\n}))\n\ntype JsonData = {\n    sentenceId: string\n    nextSentenceId: string\n    personName: string\n    sentence: {\n        plane: string,\n        button: Array<{\n            buttonLabel: string,\n            nextSentenceId: string\n        }>\n    }\n    reply: string\n}\n\n\n\nconst currentSentenceIdInit: string = \"0\"\nconst genderInit: string = \"0\"\nconst spotIdInit: string = \"A\"\nconst spotNameInit: string = \"大谷資料館\"\nconst scenarioListInit = [\n    {\n        sentenceId: \"0\",\n        nextSentenceId: \"1\",\n        personName: \"優花\",\n        sentence: {\n            plane: \"初期値消したい\",\n            button: [\n                {\n                    buttonLabel: \"海外強度料理にしよう\",\n                    nextSentenceId: \"21\"\n                },\n                {\n                    buttonLabel: \"お蕎麦屋さんにしよう\",\n                    nextSentenceId: \"22\"\n                }\n            ],\n            // important: [\n            //     { \"海外強度料理にしよう\": \"B\" },\n            //     { \"お蕎麦屋さんにしよう\": \"C\" }\n            // ]\n        },\n        reply: \"true\"\n    }\n]\n\n// const travelApi = axios.create({\n//     baseURL: \"http://localhost:3001/posts\",\n//     timeout: 30000,\n//     headers: { 'Content-Type': 'application/json' },\n//     responseType:'json',\n//   });\n\n// const sampleInit = [\n//     {\n//         name: \"yuka\",\n//         text: \"大谷石の採掘場だから、石ならではの温度なんだよね\"\n//     },\n// ]\n\n// const isButtonInit = false \n// const isButtonInit = { sentenceId: \"0\", isDisp: false }\nconst isButtonInit = false\nconst isReplyInit = false\nconst isBtnLabelInit_1 = \"\"\nconst isBtnLabelInit_2 = \"\"\nconst isBtnScenarioIdInit_1 = \"\"\nconst isBtnScenarioIdInit_2 = \"\"\n\nconst BottomTab: React.FC = () => {\n    const classes = useStyles()\n    return (\n\n        <div className={classes.bottomTab}>\n            <div className={classes.bottomChat}>\n\n                <img  src={TabChatOn} />\n            </div>\n            <div className={classes.bottomMap}>\n\n                <img  src={TabMapOff} />\n            </div>\n        </div>\n    )\n}\n\nvar btn1: string = \"\"\nconst Chat: React.FC = () => {\n    const classes = useStyles()\n    const [jsonData, setJsonData] = useState<JsonData[]>()\n    const [scenarioList, setScenarioList] = useState<JsonData[]>()\n    const [currentSentenceId, setCurrentSentenceId] = useState(currentSentenceIdInit);\n    const [isButton, setIsButton] = useState(isButtonInit)\n    const [isReply, setIsReply] = useState(isReplyInit)\n    const [btnLabel_1, setBtnLabel_1] = useState(isBtnLabelInit_1)\n    const [btnLabel_2, setBtnLabel_2] = useState(isBtnLabelInit_2)\n    const [btnScenarioId_1, setBtnScenarioId_1] = useState(isBtnScenarioIdInit_1)\n    const [btnScenarioId_2, setBtnScenarioId_2] = useState(isBtnScenarioIdInit_2)\n    const [btnText, setBtnText] = useState(\"\")\n    const [reply, setReply] = useState(\"\")\n    const isFirstRender = useRef(false)\n\n    const ref = useRef<any>(null)\n\n    useEffect(() => {\n        //prd \n        //npm run build\n        // ページが描画されたらリストの末尾までスクロール\n        scrollToBottomOfList()\n    }, [scenarioList])\n\n    const scrollToBottomOfList = React.useCallback(() => {\n        ref!.current!.scrollIntoView({\n            behavior: 'smooth',\n            block: 'end',\n        })\n    }, [ref])\n\n    const selectBtnText = (scenarioId: string, planeMessage: string) => {\n        scenarioList && setScenarioList([...scenarioList, {\n            sentenceId: \"\",\n            nextSentenceId: scenarioId,\n            personName: \"主人公\",\n            sentence: {\n                plane: planeMessage,\n                button: [\n                    {\n                        buttonLabel: \"\",\n                        nextSentenceId: \"\"\n                    },\n                    {\n                        buttonLabel: \"\",\n                        nextSentenceId: \"\"\n                    }\n                ]\n            },\n            reply: \"false\"\n        }])\n        setCurrentSentenceId(scenarioId)\n        // scrollToBottomOfList()\n    }\n\n\n    const handleReplyChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setReply(e.target.value)\n    }\n\n    const replyText = (id: string, planeMessage: string) => {\n\n        scenarioList && setScenarioList([...scenarioList, {\n            sentenceId: \"\",\n            nextSentenceId: \"\",\n            personName: \"主人公\",\n            sentence: {\n                plane: planeMessage,\n                button: [\n                    {\n                        buttonLabel: \"\",\n                        nextSentenceId: \"\"\n                    },\n                    {\n                        buttonLabel: \"\",\n                        nextSentenceId: \"\"\n                    }\n                ]\n            },\n            reply: \"\"\n        }])\n        setCurrentSentenceId(id)\n        // scrollToBottomOfList()\n    }\n\n    const processScenario = async (btnId: string, btnLabel: string) => {\n\n        setIsButton(false)\n        setIsReply(false)\n        if (btnId != \"\") {\n\n        } else {\n            //genderはバックエンドでやるのでAccessTokenとAuthorization\n            fetch(\"http://localhost:3001/posts\")\n                .then(response => response.json())\n                .then(jData => {\n                    setJsonData(jData)\n                    jData.map((scenario: any) => {\n                        if (scenario.sentenceId === currentSentenceId) { //Filtterつかえる\n                            //上書き\n                            scenarioList ? setScenarioList([...scenarioList,\n                            { ...scenario }\n                            ]) :\n                                //新規\n                                setScenarioList([\n                                    { ...scenario }\n\n                                ])\n                            //現在のnextSentenceIdに値が入っている場合\n                            if (scenario.nextSentenceId != \"\") {\n                                setCurrentSentenceId(scenario.nextSentenceId)\n                            }\n                            //現在のsentenceにボタンが入っている場合\n                            if (scenario.sentence.button[0].buttonLabel != \"\") {\n                                setIsButton(true)\n                                setBtnScenarioId_1(scenario.sentence.button[0].nextSentenceId)\n                                setBtnScenarioId_2(scenario.sentence.button[1].nextSentenceId)\n                                setBtnLabel_1(scenario.sentence.button[0].buttonLabel)\n                                setBtnLabel_2(scenario.sentence.button[1].buttonLabel)\n                            }\n                            //返信がテキストで必要な場合\n                            if (scenario.reply === \"true\") {\n                                setIsReply(true)\n                            }\n                        }\n                    })\n                })\n        }\n        // scrollToBottomOfList()\n\n\n    }\n\n    // const scrollToBottom = () => {\n    //     messagesEnd.scrollIntoView({ behavior: \"smooth\" });\n    //   }\n\n    return (\n        <div>\n\n            <HeaderChat title=\"チャット画面\" />\n\n            <div className={classes.chatDesign}>\n\n                {scenarioList && scenarioList.map((scenario: any) => scenario.personName == \"優花\" ?\n                    <div>\n                        <div className={classes.yuka_label}>優花</div>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar alt=\"icon\" src={userIcon} />\n                            </ListItemAvatar>\n                            <List className={classes.yuka}>{scenario.sentence.plane}</List>\n                        </ListItem>\n                    </div>\n                    : scenario.personName == \"主人公\" ?\n                        <div>\n                            <ListItem>\n                                <List className={classes.syujiinko}>{scenario.sentence.plane}</List>\n                            </ListItem>\n                        </div>\n                        :\n                        <div>\n                            <ListItem>\n                                <List className={classes.narrator}>{scenario.sentence.plane}</List>\n                            </ListItem>\n                        </div>\n                )}\n\n                {isButton == true ?\n                    <div className={classes.selectButton}>\n                        <button onClick={() => {\n                            selectBtnText(btnScenarioId_1, btnLabel_1)\n                            processScenario(btnScenarioId_1, btnLabel_1)\n                        }}>{btnScenarioId_1 + btnLabel_1}</button>\n                        <button onClick={() => {\n                            selectBtnText(btnScenarioId_2, btnLabel_2)\n                            processScenario(btnScenarioId_2, btnLabel_2)\n                        }}>{btnLabel_2}</button>\n                    </div>\n                    : isReply == true ?\n                        <div className={classes.selectButton}>\n                            <input\n                                id=\"replyText\"\n                                type=\"input\"\n                                name=\"reply\"\n                                placeholder=\"ここに入力して送信ボタンを押してください\"\n                                onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                                    handleReplyChange(e)\n                                }\n                            />\n                            <button onClick={() => {\n\n                                replyText(currentSentenceId, reply)\n                                processScenario(btnScenarioId_1, \"0\")\n                            }}>send</button>\n                        </div>\n                        :\n                        <button className={classes.buttonDesign} onClick={() => { processScenario(\"\", \"\") }}>↑</button>\n\n                }\n                <div id=\"bottom-of-list\" ref={ref} />\n                {/* {ScrollDemo()} */}\n                {/* <div style={{ float: \"left\", clear: \"both\" }}\n                    ref={(el) => { messagesEnd = el; }}>\n                </div> */}\n            </div>\n            <BottomTab />\n            {/* <Footer /> */}\n        </div>\n    )\n}\n\n\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}