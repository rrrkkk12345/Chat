{"ast":null,"code":"import _slicedToArray from\"/Users/rei.kawasato/Desktop/travel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{GoogleMap,useLoadScript,Marker,Circle}from\"@react-google-maps/api\";import useReactRouter from'use-react-router';import{makeStyles,Button}from'@material-ui/core';var TabChatOff=require('../assets/TabChatOff.png');var TabMapOn=require('../assets/TabMapOn.png');var baseFontColor='#4575b4';var useStyles=makeStyles(function(theme){return{bottomTab:{position:\"fixed\",bottom:\"0\",height:\"10%\",width:\"100%\",backgroundColor:\"#eeedea\",display:\"flex\",flexDirection:\"row\",textAlign:\"center\",justifyContent:\"center\",alignItems:\"center\"},bottomChat:{// border: \"2px solid\",\n// borderColor: \"pink\",\nflex:1},bottomMap:{// border: \"2px solid\",\n// borderColor: \"pink\",\nflex:1},mapWrapper:{width:\"100%\",hight:\"100%\",position:\"fixed\"// borderRadius: \"50%\",\n// backgroundColor: \"blue\",\n// zIndex:100,\n// marginLeft: \"40%\",\n// fontFamily: 'メイリオ',\n// cursor: \"pointer\",\n},checkIn:{position:\"fixed\",bottom:\"15%\",left:\"33%\",color:'#ffffff',backgroundColor:baseFontColor}};});var mapContainerStyle={width:\"100vw\",height:\"100vh\"};var options={disableDefaultUI:true,zoomControl:true};var BottomTab=function BottomTab(){var _useReactRouter=useReactRouter(),history=_useReactRouter.history;var classes=useStyles();return/*#__PURE__*/React.createElement(\"div\",{className:classes.bottomTab},/*#__PURE__*/React.createElement(\"div\",{className:classes.bottomChat},/*#__PURE__*/React.createElement(\"img\",{src:TabChatOff,onClick:function onClick(){return history.push(\"/chat\");}}),/*#__PURE__*/React.createElement(\"div\",null,\"\\u30C1\\u30E3\\u30C3\\u30C8\")),/*#__PURE__*/React.createElement(\"div\",{className:classes.bottomMap},/*#__PURE__*/React.createElement(\"img\",{src:TabMapOn}),/*#__PURE__*/React.createElement(\"div\",null,\"\\u30DE\\u30C3\\u30D7\")));};var libraries=[\"places\",\"geometry\"];var GoogleMapAPI=function GoogleMapAPI(props){var _useState=useState(35.681215917748915),_useState2=_slicedToArray(_useState,2),centerLat=_useState2[0],setCenterLat=_useState2[1];var _useState3=useState(139.76707964692983),_useState4=_slicedToArray(_useState3,2),centerLng=_useState4[0],setCenterLng=_useState4[1];var center={lat:centerLat,lng:centerLng};var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),tokyoShow=_useState6[0],setTokyoShow=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),oyaShow=_useState8[0],setOyaShow=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),oyaderaShow=_useState10[0],setOyaderaShow=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),kurirujuShow=_useState12[0],setKurirujuShow=_useState12[1];var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),mogamijayaShow=_useState14[0],setMogamijayaShow=_useState14[1];var _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),utsunomiyaZooShow=_useState16[0],setUtsunomiyaZooShow=_useState16[1];var _useState17=useState(false),_useState18=_slicedToArray(_useState17,2),wakatakeShow=_useState18[0],setWakatakeShow=_useState18[1];var _useState19=useState(false),_useState20=_slicedToArray(_useState19,2),utsunomiyaParkShow=_useState20[0],setUtsunomiyaParkShow=_useState20[1];var _useState21=useState(false),_useState22=_slicedToArray(_useState21,2),kurasseShow=_useState22[0],setKurasseShow=_useState22[1];var _useState23=useState(false),_useState24=_slicedToArray(_useState23,2),utsunomiyaTowerShow=_useState24[0],setUtsunomiyaTowerShow=_useState24[1];var _useState25=useState(false),_useState26=_slicedToArray(_useState25,2),selectCafeShow=_useState26[0],setSelectCafeShow=_useState26[1];var _useState27=useState(false),_useState28=_slicedToArray(_useState27,2),futarayamaShow=_useState28[0],setFutarayamaShow=_useState28[1];var classes=useStyles();useEffect(function(){var jwt=JSON.parse(localStorage.getItem('jwt'));var Authorization=jwt.Authorization,Accesstoken=jwt.Accesstoken;// const scenarioHist: Array<{ nextSentenceId: string, personName: string, plane: string }> = JSON.parse(localStorage.getItem('scenarioHist') as string)\nvar scenarioHistString=localStorage.getItem('scenarioHist');// const scenarioHist: string<{ nextSentenceId: string, personName: string, plane: string }> = localStorage.getItem('scenarioHist')\n// const { personName, plane } = scenarioHist\nconsole.log(scenarioHistString);if(scenarioHistString){console.log(\"Localstorage\");var scenarioHist=JSON.parse(scenarioHistString);if(scenarioHist.length>0){if(scenarioHist.slice(-1)[0].nextSentenceId===\"5\"){setTokyoShow(true);setCenterLat(35.681215917748915);setCenterLng(139.76707964692983);}if(scenarioHist.slice(-1)[0].nextSentenceId===\"68\"){setOyaShow(true);setCenterLat(36.5999734);setCenterLng(139.824739);}if(scenarioHist.slice(-1)[0].nextSentenceId===\"125\"){setKurirujuShow(true);setCenterLat(36.631208);setCenterLng(139.827650);}if(scenarioHist.slice(-1)[0].nextSentenceId===\"165\"){setWakatakeShow(true);setCenterLat(36.6162505);setCenterLng(139.8501882);}if(scenarioHist.slice(-1)[0].nextSentenceId===\"216\"){setFutarayamaShow(true);setCenterLat(36.5621935);setCenterLng(139.8858675);}if(scenarioHist.slice(-1)[0].nextSentenceId===\"308\"){setUtsunomiyaTowerShow(true);setCenterLat(36.5715866);setCenterLng(139.8876343);}if(scenarioHist.slice(-1)[0].nextSentenceId===\"410\"){setUtsunomiyaZooShow(true);setCenterLat(36.6328899);setCenterLng(139.8532834);}if(scenarioHist.slice(-1)[0].nextSentenceId===\"464\"){setKurasseShow(true);setCenterLat(36.5611947);setCenterLng(139.8854799);}if(scenarioHist.slice(-1)[0].nextSentenceId===\"546\"){setSelectCafeShow(true);setCenterLat(36.559957);setCenterLng(139.9022182);}if(scenarioHist.slice(-1)[0].nextSentenceId===\"625\"){setMogamijayaShow(true);setCenterLat(36.617913);setCenterLng(139.820958);}if(scenarioHist.slice(-1)[0].nextSentenceId===\"672\"){setUtsunomiyaParkShow(true);setCenterLat(36.61892);setCenterLng(139.7901353);}if(scenarioHist.slice(-1)[0].nextSentenceId===\"730\"){setOyaderaShow(true);setCenterLat(36.5962531);setCenterLng(139.8206917);}}}else{console.log(\"DB\");//id削除\nfetch(\"https://jtb-prd.two-choices.jp/api/scenario/log/\",{method:'GET',headers:{'Content-Type':'application/json','Authorization':Authorization,'accesstoken':Accesstoken}}).then(function(res){return res.json();}).then(function(data){if(data.scenarioHistory.length<=0){localStorage.setItem('scenarioHist',JSON.stringify([]));return;}var localHistory=localStorage.setItem('scenarioHist',JSON.stringify(data.ScenarioHistory));var scenarioGet=JSON.parse(localStorage.getItem('scenarioHist'));console.log(scenarioGet);});}},[]);var _useState29=useState(),_useState30=_slicedToArray(_useState29,2),position=_useState30[0],setPosition=_useState30[1];//-----------------------------------------------------------\nvar googleMapsApiKey=process.env.REACT_APP_GOOGLE_MAPS_API_KEY;var _useLoadScript=useLoadScript({googleMapsApiKey:googleMapsApiKey,libraries:libraries}),isLoaded=_useLoadScript.isLoaded,loadError=_useLoadScript.loadError;if(loadError)return/*#__PURE__*/React.createElement(\"h1\",null,\"\\\"Error loading maps\\\"\");//returnあとにusestate入れるとだめ\nif(!isLoaded)return/*#__PURE__*/React.createElement(\"h1\",null,\"Loading maps\");//-----------------------------------------------------------\n//-----------------------------------------------------------\n// const utsunomiya = new google.maps.LatLng(36.559707, 139.898472) //宇都宮駅\n// const utsunomiya = new google.maps.LatLng(35.75098387956675, 139.7615640423288) //小台\nvar utsunomiya=new google.maps.LatLng(36.2048239999999995,138.252924);//PC\nvar tokyo=new google.maps.LatLng(35.681215917748915,139.76707964692983);//東京駅\nvar oyashiryokan=new google.maps.LatLng(36.5999734,139.824739);//大谷資料館\nvar oyadera=new google.maps.LatLng(36.5962531,139.8206917);//大谷寺\nvar kuriruju=new google.maps.LatLng(36.631208,139.827650);//クーリ・ルージュ\nvar mogamijaya=new google.maps.LatLng(36.617913,139.820958);//最上茶屋\nvar wakatake=new google.maps.LatLng(36.616712,139.849803);//若竹の社\nvar futarayama=new google.maps.LatLng(36.5621935,139.8858675);//二荒山\nvar utsunomiyaZoo=new google.maps.LatLng(36.632781,139.853577);//宇都宮動物園\nvar utsunomiyaPark=new google.maps.LatLng(36.61892,139.7901353);//宇都宮森林公園\nvar kurasse=new google.maps.LatLng(36.5611947,139.8854799);//来らっせ\nvar utsunomiyaTower=new google.maps.LatLng(36.5715866,139.8876343);//宇都宮タワー\nvar selectCafe=new google.maps.LatLng(36.559957,139.9022182);//SELECT\nvar test=new google.maps.LatLng(36.204823999,138.272924);//テスト\n//-----------------------------------------------------------\n// const res = google.maps.geometry.spherical.computeDistanceBetween(oyasiryokan, utsunomiya) \n// console.log(res)\nvar tokyoArea=new google.maps.Circle({//範囲情報\nstrokeColor:'#FF0000',strokeOpacity:0.5,strokeWeight:2,fillColor:'#FF0000',fillOpacity:0.2,// map: map,\ncenter:tokyo,radius:500});// const utsunomiyaArea = new google.maps.Circle({ //範囲情報\n//     strokeColor: '#FF0000',\n//     strokeOpacity: 0.5,\n//     strokeWeight: 2,\n//     fillColor: '#FF0000',\n//     fillOpacity: 0.2,\n//     // map: map,\n//     center: utsunomiya,\n//     radius: 100\n// });\nvar oyashiryokanArea=new google.maps.Circle({//範囲情報\nstrokeColor:'#FF0000',strokeOpacity:0.5,strokeWeight:2,fillColor:'#FF0000',fillOpacity:0.2,// map: map,\ncenter:oyashiryokan,radius:1000});var oyaderaArea=new google.maps.Circle({//範囲情報\nstrokeColor:'#FF0000',strokeOpacity:0.5,strokeWeight:2,fillColor:'#FF0000',fillOpacity:0.2,// map: map,\ncenter:oyadera,radius:500});var kurirujuArea=new google.maps.Circle({//範囲情報\nstrokeColor:'#FF0000',strokeOpacity:0.5,strokeWeight:2,fillColor:'#FF0000',fillOpacity:0.2,// map: map,\ncenter:kuriruju,radius:500});var mogamijayaArea=new google.maps.Circle({//範囲情報\nstrokeColor:'#FF0000',strokeOpacity:0.5,strokeWeight:2,fillColor:'#FF0000',fillOpacity:0.2,// map: map,\ncenter:mogamijaya,radius:350});var wakatakeArea=new google.maps.Circle({//範囲情報\nstrokeColor:'#FF0000',strokeOpacity:0.5,strokeWeight:2,fillColor:'#FF0000',fillOpacity:0.2,// map: map,\ncenter:wakatake,radius:500});var utsunomiyaZooArea=new google.maps.Circle({//範囲情報\nstrokeColor:'#FF0000',strokeOpacity:0.5,strokeWeight:2,fillColor:'#FF0000',fillOpacity:0.2,// map: map,\ncenter:utsunomiyaZoo,radius:300});var utsunomiyaParkArea=new google.maps.Circle({//範囲情報\nstrokeColor:'#FF0000',strokeOpacity:0.5,strokeWeight:2,fillColor:'#FF0000',fillOpacity:0.2,// map: map,\ncenter:utsunomiyaPark,radius:1000});var kurasseArea=new google.maps.Circle({//範囲情報\nstrokeColor:'#FF0000',strokeOpacity:0.5,strokeWeight:2,fillColor:'#FF0000',fillOpacity:0.2,// map: map,\ncenter:kurasse,radius:350});var utsunomiyaTowerArea=new google.maps.Circle({//範囲情報\nstrokeColor:'#FF0000',strokeOpacity:0.5,strokeWeight:2,fillColor:'#FF0000',fillOpacity:0.2,// map: map,\ncenter:utsunomiyaTower,radius:500});var selectCafeArea=new google.maps.Circle({//範囲情報\nstrokeColor:'#FF0000',strokeOpacity:0.5,strokeWeight:2,fillColor:'#FF0000',fillOpacity:0.2,// map: map,\ncenter:selectCafe,radius:300});var futarayamaArea=new google.maps.Circle({//範囲情報\nstrokeColor:'#FF0000',strokeOpacity:0.5,strokeWeight:2,fillColor:'#FF0000',fillOpacity:0.2,// map: map,\ncenter:futarayama,radius:500});var testArea=new google.maps.Circle({//範囲情報\nstrokeColor:'#FF0000',strokeOpacity:0.5,strokeWeight:2,fillColor:'#FF0000',fillOpacity:0.2,// map: map,\ncenter:test,radius:100});//-----------------------------------------------------------\nfunction error(error){var errorMessage={0:\"原因不明のエラーが発生しました…。\",1:\"位置情報の取得が許可されませんでした…。\",2:\"電波状況などで位置情報が取得できませんでした…。\",3:\"位置情報の取得に時間がかかり過ぎてタイムアウトしました…。\"};console.log(errorMessage[error.code]);//getccurentpotion\n}var getCurrentPosition=function getCurrentPosition(){navigator.geolocation.getCurrentPosition(function(position){var data=position.coords;var lat=data.latitude;var lng=data.longitude;var latlng=new google.maps.LatLng(lat,lng);setPosition({latitude:lat,longitude:lng});setCenterLat(lat);setCenterLng(lng);var markerOptions={// map: map,\nposition:latlng,draggable:true,visible:true};new google.maps.Marker(markerOptions);if(tokyoShow===true){console.log(\"tokyo\");//東京駅\nif(google.maps.geometry.spherical.computeDistanceBetween(latlng,tokyoArea.getCenter())<=tokyoArea.getRadius()){//領域判定\nconsole.log(\"東京駅範囲内\");var jwt=JSON.parse(localStorage.getItem('jwt'));var Authorization=jwt.Authorization,Accesstoken=jwt.Accesstoken;var scenarioHist=JSON.parse(localStorage.getItem('scenarioHist'));console.log(\"Localstorage\");var tmpArray=JSON.parse(localStorage.getItem('scenarioHist'));console.log(\"tmpArray:\",tmpArray);tmpArray.push({nextSentenceId:\"6\",personName:\"ナレーター\",plane:\"チェックインできました。\"});// localStorage.setItem('scenarioHist', JSON.stringify({ personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId }))\nlocalStorage.setItem('scenarioHist',JSON.stringify(tmpArray));console.log(\"DB\");//ログから会話履歴をもってくる\nfetch(\"https://jtb-prd.two-choices.jp/api/scenario/log/\",{method:'POST',headers:{'Content-Type':'application/json','Authorization':Authorization,'accesstoken':Accesstoken},// body: JSON.stringify({ scenario: { personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId } })\nbody:JSON.stringify({scenario:{nextSentenceId:\"6\",personName:\"ナレーター\",plane:\"チェックインできました。\"}})});window.alert(\"チェックインできました。チャット画面に戻ってシナリオを進めてください。\");}else{console.log(\"東京駅範囲外\");}}if(oyaShow===true){//大谷資料館\nif(google.maps.geometry.spherical.computeDistanceBetween(latlng,oyashiryokanArea.getCenter())<=oyashiryokanArea.getRadius()){//領域判定\nconsole.log(\"大谷資料館範囲内\");var _jwt=JSON.parse(localStorage.getItem('jwt'));var _Authorization=_jwt.Authorization,_Accesstoken=_jwt.Accesstoken;var _scenarioHist=JSON.parse(localStorage.getItem('scenarioHist'));console.log(\"Localstorage\");var _tmpArray=JSON.parse(localStorage.getItem('scenarioHist'));console.log(\"tmpArray:\",_tmpArray);_tmpArray.push({nextSentenceId:\"69\",personName:\"ナレーター\",plane:\"チェックインできました。\"});// localStorage.setItem('scenarioHist', JSON.stringify({ personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId }))\nlocalStorage.setItem('scenarioHist',JSON.stringify(_tmpArray));console.log(\"DB\");//ログから会話履歴をもってくる\nfetch(\"https://jtb-prd.two-choices.jp/api/scenario/log/\",{method:'POST',headers:{'Content-Type':'application/json','Authorization':_Authorization,'accesstoken':_Accesstoken},// body: JSON.stringify({ scenario: { personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId } })\nbody:JSON.stringify({scenario:{nextSentenceId:\"69\",personName:\"ナレーター\",plane:\"チェックインできました。\"}})});window.alert(\"チェックインできました。チャット画面に戻ってシナリオを進めてください。\");// alert(\"大谷資料館範囲内\")\n}else{console.log(\"大谷資料館範囲外\");window.alert(\"チェックインできませんでした。目的地付近に近づいて再度チェックインしてください\");// alert(\"大谷資料館範囲外\")\n}}if(oyaderaShow===true){//大谷寺\nif(google.maps.geometry.spherical.computeDistanceBetween(latlng,oyaderaArea.getCenter())<=oyaderaArea.getRadius()){//領域判定\nconsole.log(\"二荒山範囲内\");var _jwt2=JSON.parse(localStorage.getItem('jwt'));var _Authorization2=_jwt2.Authorization,_Accesstoken2=_jwt2.Accesstoken;var _scenarioHist2=JSON.parse(localStorage.getItem('scenarioHist'));console.log(\"Localstorage\");var _tmpArray2=JSON.parse(localStorage.getItem('scenarioHist'));console.log(\"tmpArray:\",_tmpArray2);_tmpArray2.push({nextSentenceId:\"731\",personName:\"ナレーター\",plane:\"チェックインできました。\"});localStorage.setItem('scenarioHist',JSON.stringify(_tmpArray2));console.log(\"DB\");//ログから会話履歴をもってくる\nfetch(\"https://jtb-prd.two-choices.jp/api/scenario/log/\",{method:'POST',headers:{'Content-Type':'application/json','Authorization':_Authorization2,'accesstoken':_Accesstoken2},body:JSON.stringify({scenario:{nextSentenceId:\"731\",personName:\"ナレーター\",plane:\"チェックインできました。\"}})});window.alert(\"チェックインできました。チャット画面に戻ってシナリオを進めてください。\");// alert(\"大谷寺範囲内\")\n}else{console.log(\"大谷寺範囲外\");window.alert(\"チェックインできませんでした。再度チェックインしてください。\");// alert(\"大谷寺範囲外\")\n}}if(futarayamaShow===true){//二荒山神社\nif(google.maps.geometry.spherical.computeDistanceBetween(latlng,futarayamaArea.getCenter())<=futarayamaArea.getRadius()){//領域判定\nconsole.log(\"二荒山範囲内\");var _jwt3=JSON.parse(localStorage.getItem('jwt'));var _Authorization3=_jwt3.Authorization,_Accesstoken3=_jwt3.Accesstoken;var _scenarioHist3=JSON.parse(localStorage.getItem('scenarioHist'));console.log(\"Localstorage\");var _tmpArray3=JSON.parse(localStorage.getItem('scenarioHist'));console.log(\"tmpArray:\",_tmpArray3);_tmpArray3.push({nextSentenceId:\"217\",personName:\"ナレーター\",plane:\"チェックインできました。\"});localStorage.setItem('scenarioHist',JSON.stringify(_tmpArray3));console.log(\"DB\");//ログから会話履歴をもってくる\nfetch(\"https://jtb-prd.two-choices.jp/api/scenario/log/\",{method:'POST',headers:{'Content-Type':'application/json','Authorization':_Authorization3,'accesstoken':_Accesstoken3},body:JSON.stringify({scenario:{nextSentenceId:\"217\",personName:\"ナレーター\",plane:\"チェックインできました。\"}})});window.alert(\"チェックインできました。チャット画面に戻ってシナリオを進めてください。\");}else{console.log(\"二荒山範囲外\");window.alert(\"チェックインできませんでした。再度チェックインしてください。\");}}if(kurirujuShow===true){//クーリ・ルージュ\nif(google.maps.geometry.spherical.computeDistanceBetween(latlng,kurirujuArea.getCenter())<=kurirujuArea.getRadius()){//領域判定\nconsole.log(\"クーリ・ルージュ範囲内\");var _jwt4=JSON.parse(localStorage.getItem('jwt'));var _Authorization4=_jwt4.Authorization,_Accesstoken4=_jwt4.Accesstoken;var _scenarioHist4=JSON.parse(localStorage.getItem('scenarioHist'));console.log(\"Localstorage\");var _tmpArray4=JSON.parse(localStorage.getItem('scenarioHist'));console.log(\"tmpArray:\",_tmpArray4);_tmpArray4.push({nextSentenceId:\"126\",personName:\"ナレーター\",plane:\"チェックインできました。\"});// localStorage.setItem('scenarioHist', JSON.stringify({ personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId }))\nlocalStorage.setItem('scenarioHist',JSON.stringify(_tmpArray4));console.log(\"DB\");//ログから会話履歴をもってくる\nfetch(\"https://jtb-prd.two-choices.jp/api/scenario/log/\",{method:'POST',headers:{'Content-Type':'application/json','Authorization':_Authorization4,'accesstoken':_Accesstoken4},// body: JSON.stringify({ scenario: { personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId } })\nbody:JSON.stringify({scenario:{nextSentenceId:\"126\",personName:\"ナレーター\",plane:\"チェックインできました。入店してシナリオを進めましょう\"}})});window.alert(\"チェックインできました。チャット画面に戻ってシナリオを進めてください。\");// alert(\"クーリ・ルージュ範囲内\")\n}else{console.log(\"クーリ・ルージュ範囲外\");window.alert(\"チェックインできませんでした。再度チェックインしてください。\");// alert(\"クーリ・ルージュ範囲外\")\n}}if(mogamijayaShow===true){//最上茶屋\nif(google.maps.geometry.spherical.computeDistanceBetween(latlng,mogamijayaArea.getCenter())<=mogamijayaArea.getRadius()){//領域判定\nvar _jwt5=JSON.parse(localStorage.getItem('jwt'));var _Authorization5=_jwt5.Authorization,_Accesstoken5=_jwt5.Accesstoken;var _scenarioHist5=JSON.parse(localStorage.getItem('scenarioHist'));console.log(\"Localstorage\");var _tmpArray5=JSON.parse(localStorage.getItem('scenarioHist'));console.log(\"tmpArray:\",_tmpArray5);_tmpArray5.push({nextSentenceId:\"626\",personName:\"ナレーター\",plane:\"チェックインできました。\"});// localStorage.setItem('scenarioHist', JSON.stringify({ personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId }))\nlocalStorage.setItem('scenarioHist',JSON.stringify(_tmpArray5));console.log(\"DB\");//ログから会話履歴をもってくる\nfetch(\"https://jtb-prd.two-choices.jp/api/scenario/log/\",{method:'POST',headers:{'Content-Type':'application/json','Authorization':_Authorization5,'accesstoken':_Accesstoken5},// body: JSON.stringify({ scenario: { personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId } })\nbody:JSON.stringify({scenario:{nextSentenceId:\"626\",personName:\"ナレーター\",plane:\"チェックインできました。入店してシナリオを進めましょう\"}})});window.alert(\"チェックインできました。チャット画面に戻ってシナリオを進めてください。\");// alert(\"最上茶屋範囲内\")\n}else{console.log(\"最上茶屋範囲外\");window.alert(\"チェックインできませんでした。再度チェックインしてください。\");// alert(\"最上茶屋範囲外\")\n}}if(wakatakeShow===true){//若竹\nif(google.maps.geometry.spherical.computeDistanceBetween(latlng,wakatakeArea.getCenter())<=wakatakeArea.getRadius()){//領域判定\nconsole.log(\"若竹範囲内\");var _jwt6=JSON.parse(localStorage.getItem('jwt'));var _Authorization6=_jwt6.Authorization,_Accesstoken6=_jwt6.Accesstoken;var _scenarioHist6=JSON.parse(localStorage.getItem('scenarioHist'));console.log(\"Localstorage\");var _tmpArray6=JSON.parse(localStorage.getItem('scenarioHist'));console.log(\"tmpArray:\",_tmpArray6);_tmpArray6.push({nextSentenceId:\"166\",personName:\"ナレーター\",plane:\"チェックインできました。\"});// localStorage.setItem('scenarioHist', JSON.stringify({ personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId }))\nlocalStorage.setItem('scenarioHist',JSON.stringify(_tmpArray6));console.log(\"DB\");//ログから会話履歴をもってくる\nfetch(\"https://jtb-prd.two-choices.jp/api/scenario/log/\",{method:'POST',headers:{'Content-Type':'application/json','Authorization':_Authorization6,'accesstoken':_Accesstoken6},// body: JSON.stringify({ scenario: { personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId } })\nbody:JSON.stringify({scenario:{nextSentenceId:\"166\",personName:\"ナレーター\",plane:\"チェックインできました。\"}})});window.alert(\"チェックインできました。チャット画面に戻ってシナリオを進めてください。\");// alert(\"大谷資料館範囲内\")\n}else{console.log(\"若竹範囲外\");window.alert(\"チェックインできませんでした。再度チェックインしてください。\");// alert(\"若竹範囲外\")\n}}if(utsunomiyaParkShow===true){//動物園\nif(google.maps.geometry.spherical.computeDistanceBetween(latlng,utsunomiyaZooArea.getCenter())<=utsunomiyaZooArea.getRadius()){//領域判定\nvar _jwt7=JSON.parse(localStorage.getItem('jwt'));var _Authorization7=_jwt7.Authorization,_Accesstoken7=_jwt7.Accesstoken;var _scenarioHist7=JSON.parse(localStorage.getItem('scenarioHist'));console.log(\"Localstorage\");var _tmpArray7=JSON.parse(localStorage.getItem('scenarioHist'));console.log(\"tmpArray:\",_tmpArray7);_tmpArray7.push({nextSentenceId:\"673\",personName:\"ナレーター\",plane:\"チェックインできました。\"});// localStorage.setItem('scenarioHist', JSON.stringify({ personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId }))\nlocalStorage.setItem('scenarioHist',JSON.stringify(_tmpArray7));console.log(\"DB\");//ログから会話履歴をもってくる\nfetch(\"https://jtb-prd.two-choices.jp/api/scenario/log/\",{method:'POST',headers:{'Content-Type':'application/json','Authorization':_Authorization7,'accesstoken':_Accesstoken7},// body: JSON.stringify({ scenario: { personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId } })\nbody:JSON.stringify({scenario:{nextSentenceId:\"673\",personName:\"ナレーター\",plane:\"チェックインできました。シナリオを進めてください\"}})});window.alert(\"チェックインできました。チャット画面に戻ってシナリオを進めてください。\");// alert(\"動物園範囲内\")\n}else{console.log(\"動物園範囲外\");window.alert(\"チェックインできませんでした。再度チェックインしてください。\");// alert(\"動物園範囲外\")\n}}if(utsunomiyaZooShow===true){//公園\nif(google.maps.geometry.spherical.computeDistanceBetween(latlng,utsunomiyaParkArea.getCenter())<=utsunomiyaParkArea.getRadius()){//領域判定\nvar _jwt8=JSON.parse(localStorage.getItem('jwt'));var _Authorization8=_jwt8.Authorization,_Accesstoken8=_jwt8.Accesstoken;var _scenarioHist8=JSON.parse(localStorage.getItem('scenarioHist'));console.log(\"Localstorage\");var _tmpArray8=JSON.parse(localStorage.getItem('scenarioHist'));console.log(\"tmpArray:\",_tmpArray8);_tmpArray8.push({nextSentenceId:\"411\",personName:\"ナレーター\",plane:\"チェックインできました。\"});// localStorage.setItem('scenarioHist', JSON.stringify({ personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId }))\nlocalStorage.setItem('scenarioHist',JSON.stringify(_tmpArray8));console.log(\"DB\");//ログから会話履歴をもってくる\nfetch(\"https://jtb-prd.two-choices.jp/api/scenario/log/\",{method:'POST',headers:{'Content-Type':'application/json','Authorization':_Authorization8,'accesstoken':_Accesstoken8},// body: JSON.stringify({ scenario: { personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId } })\nbody:JSON.stringify({scenario:{nextSentenceId:\"411\",personName:\"ナレーター\",plane:\"チェックインできました。\"}})});window.alert(\"チェックインできました。チャット画面に戻ってシナリオを進めてください。\");// alert(\"公園範囲内\")\n}else{console.log(\"公園範囲外\");window.alert(\"チェックインできませんでした。再度チェックインしてください。\");// alert(\"公園範囲外\")\n}}if(kurasseShow===true){//くらっせ\nif(google.maps.geometry.spherical.computeDistanceBetween(latlng,kurasseArea.getCenter())<=kurasseArea.getRadius()){//領域判定\nvar _jwt9=JSON.parse(localStorage.getItem('jwt'));var _Authorization9=_jwt9.Authorization,_Accesstoken9=_jwt9.Accesstoken;var _scenarioHist9=JSON.parse(localStorage.getItem('scenarioHist'));console.log(\"Localstorage\");var _tmpArray9=JSON.parse(localStorage.getItem('scenarioHist'));console.log(\"tmpArray:\",_tmpArray9);_tmpArray9.push({nextSentenceId:\"465\",personName:\"ナレーター\",plane:\"チェックインできました。\"});// localStorage.setItem('scenarioHist', JSON.stringify({ personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId }))\nlocalStorage.setItem('scenarioHist',JSON.stringify(_tmpArray9));console.log(\"DB\");//ログから会話履歴をもってくる\nfetch(\"https://jtb-prd.two-choices.jp/api/scenario/log/\",{method:'POST',headers:{'Content-Type':'application/json','Authorization':_Authorization9,'accesstoken':_Accesstoken9},// body: JSON.stringify({ scenario: { personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId } })\nbody:JSON.stringify({scenario:{nextSentenceId:\"465\",personName:\"ナレーター\",plane:\"チェックインできました。\"}})});window.alert(\"チェックインできました。チャット画面に戻ってシナリオを進めてください。\");// alert(\"くらっせ範囲内\")\n}else{console.log(\"くらっせ範囲外\");window.alert(\"チェックインできませんでした。再度チェックインしてください。\");// alert(\"くらっせ範囲外\")\n}}if(utsunomiyaTowerShow===true){//宇都宮タワー\nif(google.maps.geometry.spherical.computeDistanceBetween(latlng,utsunomiyaTowerArea.getCenter())<=utsunomiyaTowerArea.getRadius()){//領域判定\nvar _jwt10=JSON.parse(localStorage.getItem('jwt'));var _Authorization10=_jwt10.Authorization,_Accesstoken10=_jwt10.Accesstoken;var _scenarioHist10=JSON.parse(localStorage.getItem('scenarioHist'));console.log(\"Localstorage\");var _tmpArray10=JSON.parse(localStorage.getItem('scenarioHist'));console.log(\"tmpArray:\",_tmpArray10);_tmpArray10.push({nextSentenceId:\"309\",personName:\"ナレーター\",plane:\"チェックインできました。\"});// localStorage.setItem('scenarioHist', JSON.stringify({ personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId }))\nlocalStorage.setItem('scenarioHist',JSON.stringify(_tmpArray10));console.log(\"DB\");//ログから会話履歴をもってくる\nfetch(\"https://jtb-prd.two-choices.jp/api/scenario/log/\",{method:'POST',headers:{'Content-Type':'application/json','Authorization':_Authorization10,'accesstoken':_Accesstoken10},// body: JSON.stringify({ scenario: { personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId } })\nbody:JSON.stringify({scenario:{nextSentenceId:\"309\",personName:\"ナレーター\",plane:\"チェックインできました。\"}})});window.alert(\"チェックインできました。チャット画面に戻ってシナリオを進めてください。\");// alert(\"大谷資料館範囲内\")\n}else{console.log(\"宇都宮タワー範囲外\");window.alert(\"チェックインできませんでした。再度チェックインしてください。\");// alert(\"宇都宮タワー範囲外\")\n}}if(selectCafeShow===true){//SELECT\nif(google.maps.geometry.spherical.computeDistanceBetween(latlng,selectCafeArea.getCenter())<=selectCafeArea.getRadius()){//領域判定\nvar _jwt11=JSON.parse(localStorage.getItem('jwt'));var _Authorization11=_jwt11.Authorization,_Accesstoken11=_jwt11.Accesstoken;var _scenarioHist11=JSON.parse(localStorage.getItem('scenarioHist'));console.log(\"Localstorage\");var _tmpArray11=JSON.parse(localStorage.getItem('scenarioHist'));console.log(\"tmpArray:\",_tmpArray11);_tmpArray11.push({nextSentenceId:\"547\",personName:\"ナレーター\",plane:\"チェックインできました。\"});localStorage.setItem('scenarioHist',JSON.stringify(_tmpArray11));console.log(\"DB\");//ログから会話履歴をもってくる\nfetch(\"https://jtb-prd.two-choices.jp/api/scenario/log/\",{method:'POST',headers:{'Content-Type':'application/json','Authorization':_Authorization11,'accesstoken':_Accesstoken11},body:JSON.stringify({scenario:{nextSentenceId:\"547\",personName:\"ナレーター\",plane:\"チェックインできました。\"}})});window.alert(\"チェックインできました。チャット画面に戻ってシナリオを進めてください。\");// alert(\"SELECT範囲内\")\n}else{console.log(\"SELECT範囲外\");window.alert(\"チェックインできませんでした。再度チェックインしてください。\");// alert(\"SELECT範囲外\")\n}}//test\nif(google.maps.geometry.spherical.computeDistanceBetween(latlng,testArea.getCenter())<=testArea.getRadius()){//領域判定\nconsole.log(\"test範囲内\");}else{console.log(\"test駅範囲外\");}},function(failure){if(failure.message.startsWith(\"Only secure origins are allowed\")){console.log(\"secure issuess\");}});};//------------\nreturn/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:classes.mapWrapper},/*#__PURE__*/React.createElement(GoogleMap,{mapContainerStyle:mapContainerStyle,zoom:15,center:center,options:options},(position===null||position===void 0?void 0:position.latitude)&&/*#__PURE__*/React.createElement(Marker,{position:new google.maps.LatLng(position===null||position===void 0?void 0:position.latitude,position===null||position===void 0?void 0:position.longitude)//値が入っていることを保証しないとエラー\n// icon={\"📝\"}\n// label={\"Marker！！\"}\n// visible={true}\n// onLoad={onLoad}\n}),tokyoShow===true?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Marker,{position:tokyoArea.getCenter()// icon={\"📝\"}\n// label={\"Marker！！\"}\n// visible={true}\n// onLoad={onLoad}\n}),/*#__PURE__*/React.createElement(Circle,{center:tokyoArea.getCenter(),radius:200,visible:true})):/*#__PURE__*/React.createElement(\"div\",null),oyaShow===true?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Marker,{position:oyashiryokanArea.getCenter()}),/*#__PURE__*/React.createElement(Circle,{center:oyashiryokanArea.getCenter(),radius:100,visible:true})):/*#__PURE__*/React.createElement(\"div\",null),oyaderaShow===true?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Marker,{position:oyaderaArea.getCenter()}),/*#__PURE__*/React.createElement(Circle,{center:oyaderaArea.getCenter(),radius:150,visible:true})):/*#__PURE__*/React.createElement(\"div\",null),kurirujuShow===true?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Marker,{position:kurirujuArea.getCenter()}),/*#__PURE__*/React.createElement(Circle,{center:kurirujuArea.getCenter(),radius:100,visible:true})):/*#__PURE__*/React.createElement(\"div\",null),mogamijayaShow===true?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Marker,{position:mogamijayaArea.getCenter()}),/*#__PURE__*/React.createElement(Circle,{center:mogamijayaArea.getCenter(),radius:100,visible:true})):/*#__PURE__*/React.createElement(\"div\",null),wakatakeShow===true?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Marker,{position:wakatakeArea.getCenter()}),/*#__PURE__*/React.createElement(Circle,{center:wakatakeArea.getCenter(),radius:100,visible:true})):/*#__PURE__*/React.createElement(\"div\",null),utsunomiyaZooShow===true?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Marker,{position:utsunomiyaZooArea.getCenter()}),/*#__PURE__*/React.createElement(Circle,{center:utsunomiyaZooArea.getCenter(),radius:100,visible:true})):/*#__PURE__*/React.createElement(\"div\",null),utsunomiyaTowerShow===true?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Marker,{position:utsunomiyaTowerArea.getCenter()}),/*#__PURE__*/React.createElement(Circle,{center:utsunomiyaTowerArea.getCenter(),radius:100,visible:true})):/*#__PURE__*/React.createElement(\"div\",null),kurasseShow===true?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Marker,{position:kurasseArea.getCenter()}),/*#__PURE__*/React.createElement(Circle,{center:kurasseArea.getCenter(),radius:100,visible:true})):/*#__PURE__*/React.createElement(\"div\",null),utsunomiyaParkShow===true?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Marker,{position:utsunomiyaParkArea.getCenter()}),/*#__PURE__*/React.createElement(Circle,{center:utsunomiyaParkArea.getCenter(),radius:150,visible:true})):/*#__PURE__*/React.createElement(\"div\",null),futarayamaShow===true?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Marker,{position:futarayamaArea.getCenter()}),/*#__PURE__*/React.createElement(Circle,{center:futarayamaArea.getCenter(),radius:100,visible:true})):/*#__PURE__*/React.createElement(\"div\",null),selectCafeShow===true?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Marker,{position:selectCafeArea.getCenter()}),/*#__PURE__*/React.createElement(Circle,{center:selectCafeArea.getCenter(),radius:100,visible:true})):/*#__PURE__*/React.createElement(\"div\",null),/*#__PURE__*/React.createElement(Button,{className:classes.checkIn,variant:\"contained\",disableElevation:true,onClick:function onClick(){getCurrentPosition();}},\"\\u30C1\\u30A7\\u30C3\\u30AF\\u30A4\\u30F3\"))),/*#__PURE__*/React.createElement(BottomTab,null));};export default GoogleMapAPI;","map":{"version":3,"sources":["/Users/rei.kawasato/Desktop/travel/src/utils/googleMapAPI.tsx"],"names":["React","useState","useEffect","GoogleMap","useLoadScript","Marker","Circle","useReactRouter","makeStyles","Button","TabChatOff","require","TabMapOn","baseFontColor","useStyles","theme","bottomTab","position","bottom","height","width","backgroundColor","display","flexDirection","textAlign","justifyContent","alignItems","bottomChat","flex","bottomMap","mapWrapper","hight","checkIn","left","color","mapContainerStyle","options","disableDefaultUI","zoomControl","BottomTab","history","classes","push","libraries","GoogleMapAPI","props","centerLat","setCenterLat","centerLng","setCenterLng","center","lat","lng","tokyoShow","setTokyoShow","oyaShow","setOyaShow","oyaderaShow","setOyaderaShow","kurirujuShow","setKurirujuShow","mogamijayaShow","setMogamijayaShow","utsunomiyaZooShow","setUtsunomiyaZooShow","wakatakeShow","setWakatakeShow","utsunomiyaParkShow","setUtsunomiyaParkShow","kurasseShow","setKurasseShow","utsunomiyaTowerShow","setUtsunomiyaTowerShow","selectCafeShow","setSelectCafeShow","futarayamaShow","setFutarayamaShow","jwt","JSON","parse","localStorage","getItem","Authorization","Accesstoken","scenarioHistString","console","log","scenarioHist","length","slice","nextSentenceId","fetch","method","headers","then","res","json","data","scenarioHistory","setItem","stringify","localHistory","ScenarioHistory","scenarioGet","setPosition","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","isLoaded","loadError","utsunomiya","google","maps","LatLng","tokyo","oyashiryokan","oyadera","kuriruju","mogamijaya","wakatake","futarayama","utsunomiyaZoo","utsunomiyaPark","kurasse","utsunomiyaTower","selectCafe","test","tokyoArea","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","radius","oyashiryokanArea","oyaderaArea","kurirujuArea","mogamijayaArea","wakatakeArea","utsunomiyaZooArea","utsunomiyaParkArea","kurasseArea","utsunomiyaTowerArea","selectCafeArea","futarayamaArea","testArea","error","errorMessage","code","getCurrentPosition","navigator","geolocation","coords","latitude","longitude","latlng","markerOptions","draggable","visible","geometry","spherical","computeDistanceBetween","getCenter","getRadius","tmpArray","personName","plane","body","scenario","window","alert","failure","message","startsWith"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, SetStateAction } from 'react'\nimport {\n    GoogleMap,\n    useLoadScript,\n    Marker,\n    Circle,\n} from \"@react-google-maps/api\"\nimport { Libraries } from '@react-google-maps/api/dist/utils/make-load-script-url';\nimport useReactRouter from 'use-react-router';\nimport { Typography, makeStyles, Grid, Box, Button, ListItemAvatar, Avatar, List } from '@material-ui/core'\nconst TabChatOff = require('../assets/TabChatOff.png');\nconst TabMapOn = require('../assets/TabMapOn.png');\n\nconst baseFontColor = '#4575b4';\nconst useStyles = makeStyles((theme) => ({\n\n    bottomTab: {\n        position: \"fixed\",\n        bottom: \"0\",\n        height: \"10%\",\n        width: \"100%\",\n        backgroundColor: \"#eeedea\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        textAlign: \"center\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    bottomChat: {\n        // border: \"2px solid\",\n        // borderColor: \"pink\",\n        flex: 1,\n    },\n    bottomMap: {\n        // border: \"2px solid\",\n        // borderColor: \"pink\",\n        flex: 1,\n    },\n    mapWrapper: {\n        width: \"100%\",\n        hight: \"100%\",\n        position: \"fixed\",\n        // borderRadius: \"50%\",\n        // backgroundColor: \"blue\",\n        // zIndex:100,\n        // marginLeft: \"40%\",\n        // fontFamily: 'メイリオ',\n        // cursor: \"pointer\",\n    },\n    checkIn: {\n        position: \"fixed\",\n        bottom: \"15%\",\n        left: \"33%\",\n        color: '#ffffff',\n        backgroundColor: baseFontColor,\n    }\n}))\nconst mapContainerStyle = {\n    width: \"100vw\",\n    height: \"100vh\",\n};\n\n\n\nconst options = {\n    disableDefaultUI: true,\n    zoomControl: true\n};\n\nconst BottomTab: React.FC = () => {\n    const { history } = useReactRouter();\n    const classes = useStyles()\n    return (\n\n        <div className={classes.bottomTab}>\n            <div className={classes.bottomChat}>\n\n                <img src={TabChatOff} onClick={() => history.push(\"/chat\")} />\n                <div>\n                    チャット\n                </div>\n            </div>\n            <div className={classes.bottomMap} >\n\n                <img src={TabMapOn} />\n                <div>\n                    マップ\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst libraries: Libraries = [\"places\", \"geometry\"]\n\nconst GoogleMapAPI: React.FC<{ a: string }> = (props) => {\n    const [centerLat, setCenterLat] = useState(35.681215917748915)\n    const [centerLng, setCenterLng] = useState(139.76707964692983)\n    const center = {\n        lat: centerLat,\n        lng: centerLng,\n    };\n    const [tokyoShow, setTokyoShow] = useState(false)\n    const [oyaShow, setOyaShow] = useState(false)\n    const [oyaderaShow, setOyaderaShow] = useState(false)\n    const [kurirujuShow, setKurirujuShow] = useState(false)\n    const [mogamijayaShow, setMogamijayaShow] = useState(false)\n    const [utsunomiyaZooShow, setUtsunomiyaZooShow] = useState(false)\n    const [wakatakeShow, setWakatakeShow] = useState(false)\n    const [utsunomiyaParkShow, setUtsunomiyaParkShow] = useState(false)\n    const [kurasseShow, setKurasseShow] = useState(false)\n    const [utsunomiyaTowerShow, setUtsunomiyaTowerShow] = useState(false)\n    const [selectCafeShow, setSelectCafeShow] = useState(false)\n    const [futarayamaShow, setFutarayamaShow] = useState(false)\n    const classes = useStyles()\n\n    useEffect(() => {\n        const jwt = JSON.parse(localStorage.getItem('jwt') as string)\n        const { Authorization, Accesstoken } = jwt\n        // const scenarioHist: Array<{ nextSentenceId: string, personName: string, plane: string }> = JSON.parse(localStorage.getItem('scenarioHist') as string)\n\n        const scenarioHistString: string | null = localStorage.getItem('scenarioHist')\n        // const scenarioHist: string<{ nextSentenceId: string, personName: string, plane: string }> = localStorage.getItem('scenarioHist')\n        // const { personName, plane } = scenarioHist\n\n        console.log(scenarioHistString)\n        if (scenarioHistString) {\n            console.log(\"Localstorage\")\n            const scenarioHist: Array<{ nextSentenceId: string, personName: string, plane: string }> = JSON.parse(scenarioHistString)\n            if (scenarioHist.length > 0) {\n                if ((scenarioHist.slice(-1)[0].nextSentenceId === \"5\")) {\n                    setTokyoShow(true)\n                    setCenterLat(35.681215917748915)\n                    setCenterLng(139.76707964692983)\n                }\n                if ((scenarioHist.slice(-1)[0].nextSentenceId === \"68\")) {\n                    setOyaShow(true)\n                    setCenterLat(36.5999734)\n                    setCenterLng(139.824739)\n                }\n                if ((scenarioHist.slice(-1)[0].nextSentenceId === \"125\")) {\n                    setKurirujuShow(true)\n                    setCenterLat(36.631208)\n                    setCenterLng(139.827650)\n                }\n                if ((scenarioHist.slice(-1)[0].nextSentenceId === \"165\")) {\n                    setWakatakeShow(true)\n                    setCenterLat(36.6162505)\n                    setCenterLng(139.8501882)\n                }\n                if ((scenarioHist.slice(-1)[0].nextSentenceId === \"216\")) {\n                    setFutarayamaShow(true)\n                    setCenterLat(36.5621935)\n                    setCenterLng(139.8858675)\n                }\n                if ((scenarioHist.slice(-1)[0].nextSentenceId === \"308\")) {\n                    setUtsunomiyaTowerShow(true)\n                    setCenterLat(36.5715866)\n                    setCenterLng(139.8876343)\n                }\n                if ((scenarioHist.slice(-1)[0].nextSentenceId === \"410\")) {\n                    setUtsunomiyaZooShow(true)\n                    setCenterLat(36.6328899)\n                    setCenterLng(139.8532834)\n                }\n                if ((scenarioHist.slice(-1)[0].nextSentenceId === \"464\")) {\n                    setKurasseShow(true)\n                    setCenterLat(36.5611947)\n                    setCenterLng(139.8854799)\n                }\n                if ((scenarioHist.slice(-1)[0].nextSentenceId === \"546\")) {\n                    setSelectCafeShow(true)\n                    setCenterLat(36.559957)\n                    setCenterLng(139.9022182)\n                }\n                if ((scenarioHist.slice(-1)[0].nextSentenceId === \"625\")) {\n                    setMogamijayaShow(true)\n                    setCenterLat(36.617913)\n                    setCenterLng(139.820958)\n                }\n                if ((scenarioHist.slice(-1)[0].nextSentenceId === \"672\")) {\n                    setUtsunomiyaParkShow(true)\n                    setCenterLat(36.61892)\n                    setCenterLng(139.7901353)\n                }\n                if ((scenarioHist.slice(-1)[0].nextSentenceId === \"730\")) {\n                    setOyaderaShow(true)\n                    setCenterLat(36.5962531)\n                    setCenterLng(139.8206917)\n                }\n            }\n\n        } else {\n            console.log(\"DB\")\n\n            //id削除\n            fetch(\"https://jtb-prd.two-choices.jp/api/scenario/log/\", {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': Authorization,\n                    'accesstoken': Accesstoken\n                },\n            }).then(res => res.json()).then(data => {\n                if (data.scenarioHistory.length <= 0) {\n\n                    localStorage.setItem('scenarioHist', JSON.stringify([]))\n                    return\n                }\n                const localHistory = localStorage.setItem('scenarioHist', JSON.stringify(data.ScenarioHistory))\n                const scenarioGet: Array<{ nextSentenceId: string, personName: string, plane: string }> = JSON.parse(localStorage.getItem('scenarioHist') as string)\n                console.log(scenarioGet)\n            })\n        }\n    }, [])\n    const [position, setPosition] = useState<{ latitude: number, longitude: number }>();\n    //-----------------------------------------------------------\n    const googleMapsApiKey = process.env.REACT_APP_GOOGLE_MAPS_API_KEY as string\n\n    const { isLoaded, loadError } = useLoadScript({\n        googleMapsApiKey,\n        libraries: libraries,\n    });\n\n    if (loadError) return <h1>\"Error loading maps\"</h1>//returnあとにusestate入れるとだめ\n    if (!isLoaded) return <h1>Loading maps</h1>\n    //-----------------------------------------------------------\n\n    //-----------------------------------------------------------\n    // const utsunomiya = new google.maps.LatLng(36.559707, 139.898472) //宇都宮駅\n    // const utsunomiya = new google.maps.LatLng(35.75098387956675, 139.7615640423288) //小台\n    const utsunomiya = new google.maps.LatLng(36.2048239999999995, 138.252924) //PC\n    const tokyo = new google.maps.LatLng(35.681215917748915, 139.76707964692983) //東京駅\n    const oyashiryokan = new google.maps.LatLng(36.5999734, 139.824739) //大谷資料館\n    const oyadera = new google.maps.LatLng(36.5962531, 139.8206917) //大谷寺\n    const kuriruju = new google.maps.LatLng(36.631208, 139.827650) //クーリ・ルージュ\n    const mogamijaya = new google.maps.LatLng(36.617913, 139.820958) //最上茶屋\n    const wakatake = new google.maps.LatLng(36.616712, 139.849803) //若竹の社\n    const futarayama = new google.maps.LatLng(36.5621935, 139.8858675) //二荒山\n    const utsunomiyaZoo = new google.maps.LatLng(36.632781, 139.853577) //宇都宮動物園\n    const utsunomiyaPark = new google.maps.LatLng(36.61892, 139.7901353) //宇都宮森林公園\n    const kurasse = new google.maps.LatLng(36.5611947, 139.8854799) //来らっせ\n    const utsunomiyaTower = new google.maps.LatLng(36.5715866, 139.8876343) //宇都宮タワー\n    const selectCafe = new google.maps.LatLng(36.559957, 139.9022182) //SELECT\n    const test = new google.maps.LatLng(36.204823999, 138.272924) //テスト\n    //-----------------------------------------------------------\n    // const res = google.maps.geometry.spherical.computeDistanceBetween(oyasiryokan, utsunomiya) \n    // console.log(res)\n\n    const tokyoArea = new google.maps.Circle({ //範囲情報\n        strokeColor: '#FF0000',\n        strokeOpacity: 0.5,\n        strokeWeight: 2,\n        fillColor: '#FF0000',\n        fillOpacity: 0.2,\n        // map: map,\n        center: tokyo,\n        radius: 500\n    });\n    // const utsunomiyaArea = new google.maps.Circle({ //範囲情報\n    //     strokeColor: '#FF0000',\n    //     strokeOpacity: 0.5,\n    //     strokeWeight: 2,\n    //     fillColor: '#FF0000',\n    //     fillOpacity: 0.2,\n    //     // map: map,\n    //     center: utsunomiya,\n    //     radius: 100\n    // });\n\n    const oyashiryokanArea = new google.maps.Circle({ //範囲情報\n        strokeColor: '#FF0000',\n        strokeOpacity: 0.5,\n        strokeWeight: 2,\n        fillColor: '#FF0000',\n        fillOpacity: 0.2,\n        // map: map,\n        center: oyashiryokan,\n        radius: 1000\n    });\n    const oyaderaArea = new google.maps.Circle({ //範囲情報\n        strokeColor: '#FF0000',\n        strokeOpacity: 0.5,\n        strokeWeight: 2,\n        fillColor: '#FF0000',\n        fillOpacity: 0.2,\n        // map: map,\n        center: oyadera,\n        radius: 500\n    });\n    const kurirujuArea = new google.maps.Circle({ //範囲情報\n        strokeColor: '#FF0000',\n        strokeOpacity: 0.5,\n        strokeWeight: 2,\n        fillColor: '#FF0000',\n        fillOpacity: 0.2,\n        // map: map,\n        center: kuriruju,\n        radius: 500\n    });\n    const mogamijayaArea = new google.maps.Circle({ //範囲情報\n        strokeColor: '#FF0000',\n        strokeOpacity: 0.5,\n        strokeWeight: 2,\n        fillColor: '#FF0000',\n        fillOpacity: 0.2,\n        // map: map,\n        center: mogamijaya,\n        radius: 350\n    });\n    const wakatakeArea = new google.maps.Circle({ //範囲情報\n        strokeColor: '#FF0000',\n        strokeOpacity: 0.5,\n        strokeWeight: 2,\n        fillColor: '#FF0000',\n        fillOpacity: 0.2,\n        // map: map,\n        center: wakatake,\n        radius: 500\n    });\n    const utsunomiyaZooArea = new google.maps.Circle({ //範囲情報\n        strokeColor: '#FF0000',\n        strokeOpacity: 0.5,\n        strokeWeight: 2,\n        fillColor: '#FF0000',\n        fillOpacity: 0.2,\n        // map: map,\n        center: utsunomiyaZoo,\n        radius: 300\n    });\n    const utsunomiyaParkArea = new google.maps.Circle({ //範囲情報\n        strokeColor: '#FF0000',\n        strokeOpacity: 0.5,\n        strokeWeight: 2,\n        fillColor: '#FF0000',\n        fillOpacity: 0.2,\n        // map: map,\n        center: utsunomiyaPark,\n        radius: 1000\n    });\n    const kurasseArea = new google.maps.Circle({ //範囲情報\n        strokeColor: '#FF0000',\n        strokeOpacity: 0.5,\n        strokeWeight: 2,\n        fillColor: '#FF0000',\n        fillOpacity: 0.2,\n        // map: map,\n        center: kurasse,\n        radius: 350\n    });\n    const utsunomiyaTowerArea = new google.maps.Circle({ //範囲情報\n        strokeColor: '#FF0000',\n        strokeOpacity: 0.5,\n        strokeWeight: 2,\n        fillColor: '#FF0000',\n        fillOpacity: 0.2,\n        // map: map,\n        center: utsunomiyaTower,\n        radius: 500\n    });\n    const selectCafeArea = new google.maps.Circle({ //範囲情報\n        strokeColor: '#FF0000',\n        strokeOpacity: 0.5,\n        strokeWeight: 2,\n        fillColor: '#FF0000',\n        fillOpacity: 0.2,\n        // map: map,\n        center: selectCafe,\n        radius: 300\n    });\n    const futarayamaArea = new google.maps.Circle({ //範囲情報\n        strokeColor: '#FF0000',\n        strokeOpacity: 0.5,\n        strokeWeight: 2,\n        fillColor: '#FF0000',\n        fillOpacity: 0.2,\n        // map: map,\n        center: futarayama,\n        radius: 500\n    });\n    const testArea = new google.maps.Circle({ //範囲情報\n        strokeColor: '#FF0000',\n        strokeOpacity: 0.5,\n        strokeWeight: 2,\n        fillColor: '#FF0000',\n        fillOpacity: 0.2,\n        // map: map,\n        center: test,\n        radius: 100\n    });\n\n\n\n    //-----------------------------------------------------------\n\n    function error(error: any) {\n        var errorMessage: any = {\n            0: \"原因不明のエラーが発生しました…。\",\n            1: \"位置情報の取得が許可されませんでした…。\",\n            2: \"電波状況などで位置情報が取得できませんでした…。\",\n            3: \"位置情報の取得に時間がかかり過ぎてタイムアウトしました…。\",\n        };\n        console.log(errorMessage[error.code]);//getccurentpotion\n    }\n\n    const getCurrentPosition = () => {\n        navigator.geolocation.getCurrentPosition((position: Position) => {\n            var data = position.coords;\n            var lat = data.latitude;\n            var lng = data.longitude;\n            var latlng = new google.maps.LatLng(lat, lng);\n\n            setPosition({ latitude: lat, longitude: lng });\n\n            setCenterLat(lat)\n            setCenterLng(lng)\n            var markerOptions = {\n                // map: map,\n                position: latlng,\n                draggable: true,\n                visible: true,\n            }\n            new google.maps.Marker(markerOptions);\n            if (tokyoShow === true) {\n                console.log(\"tokyo\")\n                //東京駅\n                if (google.maps.geometry.spherical.computeDistanceBetween(latlng, tokyoArea.getCenter()) <= tokyoArea.getRadius()) { //領域判定\n                    console.log(\"東京駅範囲内\")\n\n                    const jwt = JSON.parse(localStorage.getItem('jwt') as string)\n                    const { Authorization, Accesstoken } = jwt\n                    const scenarioHist: Array<{ nextSentenceId: string, personName: string, plane: string }> = JSON.parse(localStorage.getItem('scenarioHist') as string)\n                    console.log(\"Localstorage\")\n\n                    const tmpArray = JSON.parse(localStorage.getItem('scenarioHist') as string)\n                    console.log(\"tmpArray:\", tmpArray)\n                    tmpArray.push({ nextSentenceId: \"6\", personName: \"ナレーター\", plane: \"チェックインできました。\" })\n                    // localStorage.setItem('scenarioHist', JSON.stringify({ personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId }))\n                    localStorage.setItem('scenarioHist', JSON.stringify(tmpArray))\n                    console.log(\"DB\")\n\n                    //ログから会話履歴をもってくる\n\n                    fetch(\"https://jtb-prd.two-choices.jp/api/scenario/log/\", {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/json',\n                            'Authorization': Authorization,\n                            'accesstoken': Accesstoken\n                        },\n                        // body: JSON.stringify({ scenario: { personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId } })\n                        body: JSON.stringify({ scenario: { nextSentenceId: \"6\", personName: \"ナレーター\", plane: \"チェックインできました。\" } })\n                    })\n                    window.alert(\"チェックインできました。チャット画面に戻ってシナリオを進めてください。\")\n                } else {\n                    console.log(\"東京駅範囲外\")\n                }\n            }\n            if (oyaShow === true) {\n\n                //大谷資料館\n                if (google.maps.geometry.spherical.computeDistanceBetween(latlng, oyashiryokanArea.getCenter()) <= oyashiryokanArea.getRadius()) { //領域判定\n                    console.log(\"大谷資料館範囲内\")\n                    const jwt = JSON.parse(localStorage.getItem('jwt') as string)\n                    const { Authorization, Accesstoken } = jwt\n                    const scenarioHist: Array<{ nextSentenceId: string, personName: string, plane: string }> = JSON.parse(localStorage.getItem('scenarioHist') as string)\n                    console.log(\"Localstorage\")\n\n                    const tmpArray = JSON.parse(localStorage.getItem('scenarioHist') as string)\n                    console.log(\"tmpArray:\", tmpArray)\n                    tmpArray.push({ nextSentenceId: \"69\", personName: \"ナレーター\", plane: \"チェックインできました。\" })\n                    // localStorage.setItem('scenarioHist', JSON.stringify({ personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId }))\n                    localStorage.setItem('scenarioHist', JSON.stringify(tmpArray))\n                    console.log(\"DB\")\n\n                    //ログから会話履歴をもってくる\n\n                    fetch(\"https://jtb-prd.two-choices.jp/api/scenario/log/\", {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/json',\n                            'Authorization': Authorization,\n                            'accesstoken': Accesstoken\n                        },\n                        // body: JSON.stringify({ scenario: { personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId } })\n                        body: JSON.stringify({ scenario: { nextSentenceId: \"69\", personName: \"ナレーター\", plane: \"チェックインできました。\" } })\n                    })\n                    window.alert(\"チェックインできました。チャット画面に戻ってシナリオを進めてください。\")\n                    // alert(\"大谷資料館範囲内\")\n                } else {\n                    console.log(\"大谷資料館範囲外\")\n                    window.alert(\"チェックインできませんでした。目的地付近に近づいて再度チェックインしてください\")\n                    // alert(\"大谷資料館範囲外\")\n                }\n            }\n\n            if (oyaderaShow === true) {\n                //大谷寺\n                if (google.maps.geometry.spherical.computeDistanceBetween(latlng, oyaderaArea.getCenter()) <= oyaderaArea.getRadius()) { //領域判定\n                    console.log(\"二荒山範囲内\")\n                    const jwt = JSON.parse(localStorage.getItem('jwt') as string)\n                    const { Authorization, Accesstoken } = jwt\n                    const scenarioHist: Array<{ nextSentenceId: string, personName: string, plane: string }> = JSON.parse(localStorage.getItem('scenarioHist') as string)\n                    console.log(\"Localstorage\")\n\n                    const tmpArray = JSON.parse(localStorage.getItem('scenarioHist') as string)\n                    console.log(\"tmpArray:\", tmpArray)\n                    tmpArray.push({ nextSentenceId: \"731\", personName: \"ナレーター\", plane: \"チェックインできました。\" })\n                    localStorage.setItem('scenarioHist', JSON.stringify(tmpArray))\n                    console.log(\"DB\")\n\n                    //ログから会話履歴をもってくる\n\n                    fetch(\"https://jtb-prd.two-choices.jp/api/scenario/log/\", {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/json',\n                            'Authorization': Authorization,\n                            'accesstoken': Accesstoken\n                        },\n                        body: JSON.stringify({ scenario: { nextSentenceId: \"731\", personName: \"ナレーター\", plane: \"チェックインできました。\" } })\n                    })\n                    window.alert(\"チェックインできました。チャット画面に戻ってシナリオを進めてください。\")\n                    // alert(\"大谷寺範囲内\")\n                } else {\n                    console.log(\"大谷寺範囲外\")\n                    window.alert(\"チェックインできませんでした。再度チェックインしてください。\")\n                    // alert(\"大谷寺範囲外\")\n                }\n            }\n            if (futarayamaShow === true) {\n                //二荒山神社\n                if (google.maps.geometry.spherical.computeDistanceBetween(latlng, futarayamaArea.getCenter()) <= futarayamaArea.getRadius()) { //領域判定\n                    console.log(\"二荒山範囲内\")\n                    const jwt = JSON.parse(localStorage.getItem('jwt') as string)\n                    const { Authorization, Accesstoken } = jwt\n                    const scenarioHist: Array<{ nextSentenceId: string, personName: string, plane: string }> = JSON.parse(localStorage.getItem('scenarioHist') as string)\n                    console.log(\"Localstorage\")\n\n                    const tmpArray = JSON.parse(localStorage.getItem('scenarioHist') as string)\n                    console.log(\"tmpArray:\", tmpArray)\n                    tmpArray.push({ nextSentenceId: \"217\", personName: \"ナレーター\", plane: \"チェックインできました。\" })\n                    localStorage.setItem('scenarioHist', JSON.stringify(tmpArray))\n                    console.log(\"DB\")\n\n                    //ログから会話履歴をもってくる\n\n                    fetch(\"https://jtb-prd.two-choices.jp/api/scenario/log/\", {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/json',\n                            'Authorization': Authorization,\n                            'accesstoken': Accesstoken\n                        },\n                        body: JSON.stringify({ scenario: { nextSentenceId: \"217\", personName: \"ナレーター\", plane: \"チェックインできました。\" } })\n                    })\n                    window.alert(\"チェックインできました。チャット画面に戻ってシナリオを進めてください。\")\n                    \n                    \n                } else {\n                    console.log(\"二荒山範囲外\")\n                    window.alert(\"チェックインできませんでした。再度チェックインしてください。\")\n                }\n            }\n            if (kurirujuShow === true) {\n                //クーリ・ルージュ\n                if (google.maps.geometry.spherical.computeDistanceBetween(latlng, kurirujuArea.getCenter()) <= kurirujuArea.getRadius()) { //領域判定\n                    console.log(\"クーリ・ルージュ範囲内\")\n                    const jwt = JSON.parse(localStorage.getItem('jwt') as string)\n                    const { Authorization, Accesstoken } = jwt\n                    const scenarioHist: Array<{ nextSentenceId: string, personName: string, plane: string }> = JSON.parse(localStorage.getItem('scenarioHist') as string)\n                    console.log(\"Localstorage\")\n\n                    const tmpArray = JSON.parse(localStorage.getItem('scenarioHist') as string)\n                    console.log(\"tmpArray:\", tmpArray)\n                    tmpArray.push({ nextSentenceId: \"126\", personName: \"ナレーター\", plane: \"チェックインできました。\" })\n                    // localStorage.setItem('scenarioHist', JSON.stringify({ personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId }))\n                    localStorage.setItem('scenarioHist', JSON.stringify(tmpArray))\n                    console.log(\"DB\")\n\n                    //ログから会話履歴をもってくる\n\n                    fetch(\"https://jtb-prd.two-choices.jp/api/scenario/log/\", {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/json',\n                            'Authorization': Authorization,\n                            'accesstoken': Accesstoken\n                        },\n                        // body: JSON.stringify({ scenario: { personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId } })\n                        body: JSON.stringify({ scenario: { nextSentenceId: \"126\", personName: \"ナレーター\", plane: \"チェックインできました。入店してシナリオを進めましょう\" } })\n                    })\n                    window.alert(\"チェックインできました。チャット画面に戻ってシナリオを進めてください。\")\n                    // alert(\"クーリ・ルージュ範囲内\")\n                } else {\n                    console.log(\"クーリ・ルージュ範囲外\")\n                    window.alert(\"チェックインできませんでした。再度チェックインしてください。\")\n                    // alert(\"クーリ・ルージュ範囲外\")\n                }\n            }\n\n            if (mogamijayaShow === true) {\n\n                //最上茶屋\n                if (google.maps.geometry.spherical.computeDistanceBetween(latlng, mogamijayaArea.getCenter()) <= mogamijayaArea.getRadius()) { //領域判定\n\n                    const jwt = JSON.parse(localStorage.getItem('jwt') as string)\n                    const { Authorization, Accesstoken } = jwt\n                    const scenarioHist: Array<{ nextSentenceId: string, personName: string, plane: string }> = JSON.parse(localStorage.getItem('scenarioHist') as string)\n                    console.log(\"Localstorage\")\n\n                    const tmpArray = JSON.parse(localStorage.getItem('scenarioHist') as string)\n                    console.log(\"tmpArray:\", tmpArray)\n                    tmpArray.push({ nextSentenceId: \"626\", personName: \"ナレーター\", plane: \"チェックインできました。\" })\n                    // localStorage.setItem('scenarioHist', JSON.stringify({ personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId }))\n                    localStorage.setItem('scenarioHist', JSON.stringify(tmpArray))\n                    console.log(\"DB\")\n\n                    //ログから会話履歴をもってくる\n\n                    fetch(\"https://jtb-prd.two-choices.jp/api/scenario/log/\", {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/json',\n                            'Authorization': Authorization,\n                            'accesstoken': Accesstoken\n                        },\n                        // body: JSON.stringify({ scenario: { personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId } })\n                        body: JSON.stringify({ scenario: { nextSentenceId: \"626\", personName: \"ナレーター\", plane: \"チェックインできました。入店してシナリオを進めましょう\" } })\n                    })\n                    window.alert(\"チェックインできました。チャット画面に戻ってシナリオを進めてください。\")\n                    // alert(\"最上茶屋範囲内\")\n                } else {\n                    console.log(\"最上茶屋範囲外\")\n                    window.alert(\"チェックインできませんでした。再度チェックインしてください。\")\n                    // alert(\"最上茶屋範囲外\")\n                }\n            }\n\n            if (wakatakeShow === true) {\n                //若竹\n                if (google.maps.geometry.spherical.computeDistanceBetween(latlng, wakatakeArea.getCenter()) <= wakatakeArea.getRadius()) { //領域判定\n                    console.log(\"若竹範囲内\")\n                    const jwt = JSON.parse(localStorage.getItem('jwt') as string)\n                    const { Authorization, Accesstoken } = jwt\n                    const scenarioHist: Array<{ nextSentenceId: string, personName: string, plane: string }> = JSON.parse(localStorage.getItem('scenarioHist') as string)\n                    console.log(\"Localstorage\")\n\n                    const tmpArray = JSON.parse(localStorage.getItem('scenarioHist') as string)\n                    console.log(\"tmpArray:\", tmpArray)\n                    tmpArray.push({ nextSentenceId: \"166\", personName: \"ナレーター\", plane: \"チェックインできました。\" })\n                    // localStorage.setItem('scenarioHist', JSON.stringify({ personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId }))\n                    localStorage.setItem('scenarioHist', JSON.stringify(tmpArray))\n                    console.log(\"DB\")\n\n                    //ログから会話履歴をもってくる\n\n                    fetch(\"https://jtb-prd.two-choices.jp/api/scenario/log/\", {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/json',\n                            'Authorization': Authorization,\n                            'accesstoken': Accesstoken\n                        },\n                        // body: JSON.stringify({ scenario: { personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId } })\n                        body: JSON.stringify({ scenario: { nextSentenceId: \"166\", personName: \"ナレーター\", plane: \"チェックインできました。\" } })\n                    })\n                    window.alert(\"チェックインできました。チャット画面に戻ってシナリオを進めてください。\")\n                    // alert(\"大谷資料館範囲内\")\n                } else {\n                    console.log(\"若竹範囲外\")\n                    window.alert(\"チェックインできませんでした。再度チェックインしてください。\")\n                    // alert(\"若竹範囲外\")\n                }\n            }\n            if(utsunomiyaParkShow===true){\n\n                //動物園\n                if (google.maps.geometry.spherical.computeDistanceBetween(latlng, utsunomiyaZooArea.getCenter()) <= utsunomiyaZooArea.getRadius()) { //領域判定\n                    const jwt = JSON.parse(localStorage.getItem('jwt') as string)\n                    const { Authorization, Accesstoken } = jwt\n                    const scenarioHist: Array<{ nextSentenceId: string, personName: string, plane: string }> = JSON.parse(localStorage.getItem('scenarioHist') as string)\n                    console.log(\"Localstorage\")\n\n                    const tmpArray = JSON.parse(localStorage.getItem('scenarioHist') as string)\n                    console.log(\"tmpArray:\", tmpArray)\n                    tmpArray.push({ nextSentenceId: \"673\", personName: \"ナレーター\", plane: \"チェックインできました。\" })\n                    // localStorage.setItem('scenarioHist', JSON.stringify({ personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId }))\n                    localStorage.setItem('scenarioHist', JSON.stringify(tmpArray))\n                    console.log(\"DB\")\n\n                    //ログから会話履歴をもってくる\n\n                    fetch(\"https://jtb-prd.two-choices.jp/api/scenario/log/\", {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/json',\n                            'Authorization': Authorization,\n                            'accesstoken': Accesstoken\n                        },\n                        // body: JSON.stringify({ scenario: { personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId } })\n                        body: JSON.stringify({ scenario: { nextSentenceId: \"673\", personName: \"ナレーター\", plane: \"チェックインできました。シナリオを進めてください\" } })\n                    })\n                    window.alert(\"チェックインできました。チャット画面に戻ってシナリオを進めてください。\")\n                    // alert(\"動物園範囲内\")\n                } else {\n                    console.log(\"動物園範囲外\")\n                    window.alert(\"チェックインできませんでした。再度チェックインしてください。\")\n                    // alert(\"動物園範囲外\")\n                }\n            }\n\n            if(utsunomiyaZooShow===true){\n\n                //公園\n                if (google.maps.geometry.spherical.computeDistanceBetween(latlng, utsunomiyaParkArea.getCenter()) <= utsunomiyaParkArea.getRadius()) { //領域判定\n                    const jwt = JSON.parse(localStorage.getItem('jwt') as string)\n                    const { Authorization, Accesstoken } = jwt\n                    const scenarioHist: Array<{ nextSentenceId: string, personName: string, plane: string }> = JSON.parse(localStorage.getItem('scenarioHist') as string)\n                    console.log(\"Localstorage\")\n\n                    const tmpArray = JSON.parse(localStorage.getItem('scenarioHist') as string)\n                    console.log(\"tmpArray:\", tmpArray)\n                    tmpArray.push({ nextSentenceId: \"411\", personName: \"ナレーター\", plane: \"チェックインできました。\" })\n                    // localStorage.setItem('scenarioHist', JSON.stringify({ personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId }))\n                    localStorage.setItem('scenarioHist', JSON.stringify(tmpArray))\n                    console.log(\"DB\")\n\n                    //ログから会話履歴をもってくる\n\n                    fetch(\"https://jtb-prd.two-choices.jp/api/scenario/log/\", {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/json',\n                            'Authorization': Authorization,\n                            'accesstoken': Accesstoken\n                        },\n                        // body: JSON.stringify({ scenario: { personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId } })\n                        body: JSON.stringify({ scenario: { nextSentenceId: \"411\", personName: \"ナレーター\", plane: \"チェックインできました。\" } })\n                    })\n                    window.alert(\"チェックインできました。チャット画面に戻ってシナリオを進めてください。\")\n                    // alert(\"公園範囲内\")\n                } else {\n                    console.log(\"公園範囲外\")\n                    window.alert(\"チェックインできませんでした。再度チェックインしてください。\")\n                    // alert(\"公園範囲外\")\n                }\n            }\n\n            if(kurasseShow===true){\n\n                //くらっせ\n                if (google.maps.geometry.spherical.computeDistanceBetween(latlng, kurasseArea.getCenter()) <= kurasseArea.getRadius()) { //領域判定\n                    const jwt = JSON.parse(localStorage.getItem('jwt') as string)\n                    const { Authorization, Accesstoken } = jwt\n                    const scenarioHist: Array<{ nextSentenceId: string, personName: string, plane: string }> = JSON.parse(localStorage.getItem('scenarioHist') as string)\n                    console.log(\"Localstorage\")\n\n                    const tmpArray = JSON.parse(localStorage.getItem('scenarioHist') as string)\n                    console.log(\"tmpArray:\", tmpArray)\n                    tmpArray.push({ nextSentenceId: \"465\", personName: \"ナレーター\", plane: \"チェックインできました。\" })\n                    // localStorage.setItem('scenarioHist', JSON.stringify({ personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId }))\n                    localStorage.setItem('scenarioHist', JSON.stringify(tmpArray))\n                    console.log(\"DB\")\n\n                    //ログから会話履歴をもってくる\n\n                    fetch(\"https://jtb-prd.two-choices.jp/api/scenario/log/\", {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/json',\n                            'Authorization': Authorization,\n                            'accesstoken': Accesstoken\n                        },\n                        // body: JSON.stringify({ scenario: { personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId } })\n                        body: JSON.stringify({ scenario: { nextSentenceId: \"465\", personName: \"ナレーター\", plane: \"チェックインできました。\" } })\n                    })\n                    window.alert(\"チェックインできました。チャット画面に戻ってシナリオを進めてください。\")\n                    // alert(\"くらっせ範囲内\")\n                } else {\n                    console.log(\"くらっせ範囲外\")\n                    window.alert(\"チェックインできませんでした。再度チェックインしてください。\")\n                    // alert(\"くらっせ範囲外\")\n                }\n            }\n\n            if(utsunomiyaTowerShow===true){\n\n                //宇都宮タワー\n                if (google.maps.geometry.spherical.computeDistanceBetween(latlng, utsunomiyaTowerArea.getCenter()) <= utsunomiyaTowerArea.getRadius()) { //領域判定\n                        const jwt = JSON.parse(localStorage.getItem('jwt') as string)\n                        const { Authorization, Accesstoken } = jwt\n                        const scenarioHist: Array<{ nextSentenceId: string, personName: string, plane: string }> = JSON.parse(localStorage.getItem('scenarioHist') as string)\n                        console.log(\"Localstorage\")\n    \n                        const tmpArray = JSON.parse(localStorage.getItem('scenarioHist') as string)\n                        console.log(\"tmpArray:\", tmpArray)\n                        tmpArray.push({ nextSentenceId: \"309\", personName: \"ナレーター\", plane: \"チェックインできました。\" })\n                        // localStorage.setItem('scenarioHist', JSON.stringify({ personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId }))\n                        localStorage.setItem('scenarioHist', JSON.stringify(tmpArray))\n                        console.log(\"DB\")\n    \n                        //ログから会話履歴をもってくる\n    \n                        fetch(\"https://jtb-prd.two-choices.jp/api/scenario/log/\", {\n                            method: 'POST',\n                            headers: {\n                                'Content-Type': 'application/json',\n                                'Authorization': Authorization,\n                                'accesstoken': Accesstoken\n                            },\n                            // body: JSON.stringify({ scenario: { personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId } })\n                            body: JSON.stringify({ scenario: { nextSentenceId: \"309\", personName: \"ナレーター\", plane: \"チェックインできました。\" } })\n                        })\n                        window.alert(\"チェックインできました。チャット画面に戻ってシナリオを進めてください。\")\n                        // alert(\"大谷資料館範囲内\")\n                } else {\n                    console.log(\"宇都宮タワー範囲外\")\n                    window.alert(\"チェックインできませんでした。再度チェックインしてください。\")\n                    // alert(\"宇都宮タワー範囲外\")\n                }\n            }\n            if(selectCafeShow===true){\n\n                //SELECT\n                if (google.maps.geometry.spherical.computeDistanceBetween(latlng, selectCafeArea.getCenter()) <= selectCafeArea.getRadius()) { //領域判定\n                    const jwt = JSON.parse(localStorage.getItem('jwt') as string)\n                    const { Authorization, Accesstoken } = jwt\n                    const scenarioHist: Array<{ nextSentenceId: string, personName: string, plane: string }> = JSON.parse(localStorage.getItem('scenarioHist') as string)\n                    console.log(\"Localstorage\")\n\n                    const tmpArray = JSON.parse(localStorage.getItem('scenarioHist') as string)\n                    console.log(\"tmpArray:\", tmpArray)\n                    tmpArray.push({ nextSentenceId: \"547\", personName: \"ナレーター\", plane: \"チェックインできました。\" })\n                    localStorage.setItem('scenarioHist', JSON.stringify(tmpArray))\n                    console.log(\"DB\")\n\n                    //ログから会話履歴をもってくる\n\n                    fetch(\"https://jtb-prd.two-choices.jp/api/scenario/log/\", {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/json',\n                            'Authorization': Authorization,\n                            'accesstoken': Accesstoken\n                        },\n                        body: JSON.stringify({ scenario: { nextSentenceId: \"547\", personName: \"ナレーター\", plane: \"チェックインできました。\" } })\n                    })\n                    window.alert(\"チェックインできました。チャット画面に戻ってシナリオを進めてください。\")\n                    \n                    // alert(\"SELECT範囲内\")\n                } else {\n                    console.log(\"SELECT範囲外\")\n                    window.alert(\"チェックインできませんでした。再度チェックインしてください。\")\n                    // alert(\"SELECT範囲外\")\n                }\n            }\n            //test\n            if (google.maps.geometry.spherical.computeDistanceBetween(latlng, testArea.getCenter()) <= testArea.getRadius()) { //領域判定\n                console.log(\"test範囲内\")\n            } else {\n                console.log(\"test駅範囲外\")\n            }\n        }, failure => {\n            if (failure.message.startsWith(\"Only secure origins are allowed\")) {\n                console.log(\"secure issuess\")\n            }\n        });\n    }\n\n    //------------\n\n    return <div>\n        {/* <button onClick={() => getCurrentPosition()}>チェックイン</button> */}\n        {/* <input id=\"google\" type=\"text\"></input> */}\n        {/* <div>latitude:{position?.latitude}</div> */}\n        {/* <div>longtitude:{position?.longitude}</div> */}\n        <div className={classes.mapWrapper}>\n\n\n            <GoogleMap\n                mapContainerStyle={mapContainerStyle}\n                zoom={15}\n                center={center}\n                options={options}\n            >\n\n                {position?.latitude && <Marker\n                    position={new google.maps.LatLng(position?.latitude, position?.longitude)}//値が入っていることを保証しないとエラー\n                // icon={\"📝\"}\n                // label={\"Marker！！\"}\n                // visible={true}\n                // onLoad={onLoad}\n                />}\n                {tokyoShow === true ?\n                    <div>\n                        <Marker\n                            position={tokyoArea.getCenter()}\n                        // icon={\"📝\"}\n                        // label={\"Marker！！\"}\n                        // visible={true}\n                        // onLoad={onLoad}\n                        />\n                        <Circle\n                            center={tokyoArea.getCenter()}\n                            radius={200}\n                            visible={true}\n                        ></Circle>\n                    </div>\n\n                    :\n                    <div></div>\n                }\n\n                {oyaShow === true ?\n                    <div>\n                        <Marker\n                            position={oyashiryokanArea.getCenter()}\n                        />\n                        <Circle\n                            center={oyashiryokanArea.getCenter()}\n                            radius={100}\n                            visible={true}\n                        ></Circle>\n                    </div>\n                    :\n                    <div></div>\n                }\n                {oyaderaShow === true ?\n                    <div>\n                        <Marker\n                            position={oyaderaArea.getCenter()}\n                        />\n                        <Circle\n                            center={oyaderaArea.getCenter()}\n                            radius={150}\n                            visible={true}\n                        ></Circle>\n                    </div>\n                    :\n                    <div></div>\n                }\n                {kurirujuShow === true ?\n                    <div>\n                        <Marker\n                            position={kurirujuArea.getCenter()}\n                        />\n                        <Circle\n                            center={kurirujuArea.getCenter()}\n                            radius={100}\n                            visible={true}\n                        ></Circle>\n                    </div>\n                    :\n                    <div></div>\n                }\n                {mogamijayaShow === true ?\n                    <div>\n                        <Marker\n                            position={mogamijayaArea.getCenter()}\n                        />\n                        <Circle\n                            center={mogamijayaArea.getCenter()}\n                            radius={100}\n                            visible={true}\n                        ></Circle>\n                    </div>\n                    :\n                    <div></div>\n                }\n                {wakatakeShow === true ?\n                    <div>\n                        <Marker\n                            position={wakatakeArea.getCenter()}\n                        />\n                        <Circle\n                            center={wakatakeArea.getCenter()}\n                            radius={100}\n                            visible={true}\n                        ></Circle>\n                    </div>\n                    :\n                    <div></div>\n                }\n                {utsunomiyaZooShow === true ?\n                    <div>\n                        <Marker\n                            position={utsunomiyaZooArea.getCenter()}\n                        />\n                        <Circle\n                            center={utsunomiyaZooArea.getCenter()}\n                            radius={100}\n                            visible={true}\n                        ></Circle>\n                    </div>\n                    :\n                    <div></div>\n                }\n                {utsunomiyaTowerShow === true ?\n                    <div>\n                        <Marker\n                            position={utsunomiyaTowerArea.getCenter()}\n                        />\n                        <Circle\n                            center={utsunomiyaTowerArea.getCenter()}\n                            radius={100}\n                            visible={true}\n                        ></Circle>\n                    </div>\n                    :\n                    <div></div>\n                }\n                {kurasseShow === true ?\n                    <div>\n                        <Marker\n                            position={kurasseArea.getCenter()}\n                        />\n                        <Circle\n                            center={kurasseArea.getCenter()}\n                            radius={100}\n                            visible={true}\n                        ></Circle>\n                    </div>\n                    :\n                    <div></div>\n                }\n                {utsunomiyaParkShow === true ?\n                    <div>\n                        <Marker\n                            position={utsunomiyaParkArea.getCenter()}\n                        />\n                        <Circle\n                            center={utsunomiyaParkArea.getCenter()}\n                            radius={150}\n                            visible={true}\n                        ></Circle>\n                    </div>\n                    :\n                    <div></div>\n                }\n                {futarayamaShow === true ?\n                    <div>\n                        <Marker\n                            position={futarayamaArea.getCenter()}\n                        />\n                        <Circle\n                            center={futarayamaArea.getCenter()}\n                            radius={100}\n                            visible={true}\n                        ></Circle>\n                    </div>\n                    :\n                    <div></div>\n                }\n                {selectCafeShow === true ?\n                    <div>\n                        <Marker\n                            position={selectCafeArea.getCenter()}\n                        />\n                        <Circle\n                            center={selectCafeArea.getCenter()}\n                            radius={100}\n                            visible={true}\n                        ></Circle>\n                    </div>\n                    :\n                    <div></div>\n                }\n                <Button\n                    className={classes.checkIn}\n                    variant=\"contained\"\n                    disableElevation\n                    onClick={() => {\n                        getCurrentPosition()\n                    }}\n                >\n                    チェックイン\n        </Button>\n            </GoogleMap>\n        </div>\n\n        <BottomTab />\n    </div>\n}\n\n\n\n\n\n\n\nexport default GoogleMapAPI;"]},"metadata":{},"sourceType":"module"}