{"ast":null,"code":"var _jsxFileName = \"/Users/rei.kawasato/Desktop/travel/src/pages/chat.tsx\";\nimport React, { useState, useRef } from 'react';\nimport { makeStyles, ListItemAvatar, Avatar, List } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem'; // import classes from '*.module.css';\n\nimport HeaderChat from './headerChat';\nimport Footer from './footer';\nimport userIcon from '../assets/test.png';\n\nconst UserIcon = require('../assets/test.png');\n\nconst useStyles = makeStyles(theme => ({\n  buttonDesign: {\n    top: \"70%\",\n    position: \"absolute\",\n    borderRadius: \"50%\",\n    backgroundColor: \"blue\",\n    color: \"white\",\n    // zIndex:100,\n    marginLeft: \"50%\",\n    fontFamily: 'メイリオ'\n  },\n  narrator: {\n    fontFamily: 'メイリオ',\n    // fontSize: 20,\n    display: 'flex',\n    alignItems: 'top',\n    //縦\n    textAlign: 'start',\n    //横\n    color: \"#994C00\",\n    backgroundColor: '#EEB57D',\n    borderRadius: 16,\n    height: 60,\n    width: '70%',\n    marginTop: 20,\n    alignSelf: '',\n    justifyContent: 'flex-start',\n    marginLeft: '15%',\n    padding: 10 // position:'relative',\n\n  },\n  yuka: {\n    fontFamily: 'メイリオ',\n    width: '100%',\n    maxWidth: '25ch',\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: 20,\n    borderColor: 'blue',\n    padding: 10\n  },\n  yuka_label: {\n    fontSize: 15,\n    marginBottom: '0%',\n    marginLeft: '20%',\n    marginTop: '5%'\n  },\n  syujiinko: {\n    fontFamily: 'メイリオ',\n    border: 'solid',\n    color: '#7088b1',\n    borderRadius: 20,\n    borderColor: '#bfc8d5',\n    backgroundColor: '#e2e3e4',\n    width: '100%',\n    maxWidth: '30ch',\n    marginLeft: '40%',\n    padding: 10\n  },\n  avatar: {\n    // padding: 10,\n    marginLeft: 50\n  },\n  square: {\n    width: \"100%\",\n    height: \"900px\",\n    // margin:'0',\n    backgroundColor: \"#eeedea\"\n  }\n}));\nconst currentSentenceIdInit = \"0\";\nconst genderInit = \"0\";\nconst spotIdInit = \"A\";\nconst spotNameInit = \"大谷資料館\";\nconst scenarioListInit = [{\n  sentenceId: \"0\",\n  nextSentenceId: \"1\",\n  personName: \"優花\",\n  sentence: {\n    plane: \"初期値消したい\",\n    button: [{\n      buttonLabel: \"海外強度料理にしよう\",\n      nextSentenceId: \"21\"\n    }, {\n      buttonLabel: \"お蕎麦屋さんにしよう\",\n      nextSentenceId: \"22\"\n    }] // important: [\n    //     { \"海外強度料理にしよう\": \"B\" },\n    //     { \"お蕎麦屋さんにしよう\": \"C\" }\n    // ]\n\n  }\n}]; // const travelApi = axios.create({\n//     baseURL: \"http://localhost:3001/posts\",\n//     timeout: 30000,\n//     headers: { 'Content-Type': 'application/json' },\n//     responseType:'json',\n//   });\n// const sampleInit = [\n//     {\n//         name: \"yuka\",\n//         text: \"大谷石の採掘場だから、石ならではの温度なんだよね\"\n//     },\n// ]\n// const isButtonInit = false \n// const isButtonInit = { sentenceId: \"0\", isDisp: false }\n\nconst isButtonInit = false;\nvar buttonLabel_1;\nvar buttonLabel_2;\n\nconst selectButton = (button1, button2) => {\n  console.log(button1);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, button1), \"fdasssssss\");\n};\n\nconst Chat = () => {\n  const classes = useStyles();\n  const persistState = localStorage.getItem('scenario'); // const persistGenderState = localStorage.getItem('gender')\n  // const [gender, setGender] = useState(persistGenderState ? JSON.parse(persistGenderState) : genderInit);\n\n  const persistScenarioListState = localStorage.getItem('scenarioList'); // const [sample, setSample] = useState(persistState ? JSON.parse(persistState) : sampleInit);\n\n  const [jsonData, setJsonData] = useState(); // const [scenarioList, setScenarioList] = useState(persistScenarioListState ? JSON.parse(persistScenarioListState) : scenarioListInit);\n\n  const [scenarioList, setScenarioList] = useState();\n  const [currentSentenceId, setCurrentSentenceId] = useState(currentSentenceIdInit);\n  const [isButton, setIsButton] = useRef(isButtonInit); // useEffect(() => localStorage.setItem('scenarioList', JSON.stringify(scenarioList)), [scenarioList])\n  // useEffect(() => {\n  //     console.log({ scenarioList });\n  // }, [scenarioList]);\n\n  const conversation = async () => {\n    setIsButton(false);\n\n    function delay(ms) {\n      return new Promise(resolve => setTimeout(resolve, ms));\n    }\n\n    fetch(\"http://localhost:3001/posts\").then(response => response.json()).then(jsonData => {\n      setJsonData(jsonData);\n      console.log(jsonData);\n      jsonData.map(scenario => {\n        if (scenario.sentenceId === currentSentenceId) {\n          //上書き\n          scenarioList ? setScenarioList([...scenarioList, {\n            sentenceId: scenario.sentenceId,\n            nextSentenceId: scenario.nextSentenceId,\n            personName: scenario.personName,\n            sentence: {\n              plane: scenario.sentence.plane,\n              button: [{\n                buttonLabel: scenario.sentence.button[0].buttonLabel,\n                nextSentenceId: scenario.sentence.button[0].nextSentenceId\n              }, {\n                buttonLabel: scenario.sentence.button[1].buttonLabel,\n                nextSentenceId: scenario.sentence.button[1].nextSentenceId\n              }]\n            }\n          }]) : //新規\n          setScenarioList([{\n            sentenceId: scenario.sentenceId,\n            nextSentenceId: scenario.nextSentenceId,\n            personName: scenario.personName,\n            sentence: {\n              plane: scenario.sentence.plane,\n              button: [{\n                buttonLabel: scenario.sentence.button[0].buttonLabel,\n                nextSentenceId: scenario.sentence.button[0].nextSentenceId\n              }, {\n                buttonLabel: scenario.sentence.button[1].buttonLabel,\n                nextSentenceId: scenario.sentence.button[1].nextSentenceId\n              }]\n            }\n          }]); //現在のnextSentenceIdに値が入っている場合\n\n          if (scenario.nextSentenceId != \"\") {\n            setCurrentSentenceId(scenario.nextSentenceId); // console.log(scenario.sentence.button[0].buttonLabel)\n\n            console.log(scenario.sentence.button.buttonLabel);\n            console.log(scenario.sentence.button.nextSentenceId); // console.log(\"------\")\n            // console.log(scenario)\n            // console.log(\"------\")\n            // console.log(isButton)\n          } //現在のsentenceにボタンが入っている場合\n\n\n          if (scenario.sentence.button[0].buttonLabel != \"\") {\n            setIsButton(true);\n            selectButton(\"aa\", \"bb\");\n            buttonLabel_1 = scenario.sentence.button[0].buttonLabel;\n            buttonLabel_2 = scenario.sentence.button[1].buttonLabel;\n          }\n        }\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(HeaderChat, {\n    title: \"\\u30C1\\u30E3\\u30C3\\u30C8\\u753B\\u9762\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 13\n    }\n  }), scenarioList && scenarioList.map(scenario => scenario.personName == \"優花\" ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.yuka_label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 21\n    }\n  }, \"\\u512A\\u82B1\"), /*#__PURE__*/React.createElement(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    alt: \"icon\",\n    src: userIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(List, {\n    className: classes.yuka,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 25\n    }\n  }, scenario.sentence.plane))) : scenario.personName == \"主人公\" ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    className: classes.syujiinko,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 29\n    }\n  }, scenario.sentence.plane))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    className: classes.narrator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 29\n    }\n  }, scenario.sentence.plane)))), isButton == true ? scenarioList && scenarioList.map(scenario => scenario.sentence.button[0].buttonLabel != \"\" && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 21\n    }\n  }, console.log(buttonLabel_2), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 25\n    }\n  }, buttonLabel_2))) : isButton == false && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 17\n    }\n  }, \"false\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: classes.buttonDesign,\n    onClick: () => {\n      conversation();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 13\n    }\n  }, \"\\u2191\"), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Chat;","map":{"version":3,"sources":["/Users/rei.kawasato/Desktop/travel/src/pages/chat.tsx"],"names":["React","useState","useRef","makeStyles","ListItemAvatar","Avatar","List","ListItem","HeaderChat","Footer","userIcon","UserIcon","require","useStyles","theme","buttonDesign","top","position","borderRadius","backgroundColor","color","marginLeft","fontFamily","narrator","display","alignItems","textAlign","height","width","marginTop","alignSelf","justifyContent","padding","yuka","maxWidth","palette","background","paper","borderColor","yuka_label","fontSize","marginBottom","syujiinko","border","avatar","square","currentSentenceIdInit","genderInit","spotIdInit","spotNameInit","scenarioListInit","sentenceId","nextSentenceId","personName","sentence","plane","button","buttonLabel","isButtonInit","buttonLabel_1","buttonLabel_2","selectButton","button1","button2","console","log","Chat","classes","persistState","localStorage","getItem","persistScenarioListState","jsonData","setJsonData","scenarioList","setScenarioList","currentSentenceId","setCurrentSentenceId","isButton","setIsButton","conversation","delay","ms","Promise","resolve","setTimeout","fetch","then","response","json","map","scenario"],"mappings":"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","sourcesContent":["import React, { useEffect, useState,useRef } from 'react'\nimport { Typography, makeStyles, Grid, Box, Button, ListItemAvatar, Avatar, List } from '@material-ui/core'\nimport ListItem from '@material-ui/core/ListItem';\n// import classes from '*.module.css';\nimport Header from './header';\nimport HeaderChat from './headerChat';\nimport Footer from './footer';\nimport SelectInput from '@material-ui/core/Select/SelectInput';\nimport axios, { AxiosResponse } from 'axios';\nimport { Data } from '@react-google-maps/api';\nimport userIcon from '../assets/test.png';\nconst UserIcon = require('../assets/test.png');\n\n\nconst useStyles = makeStyles((theme) => ({\n    buttonDesign: {\n        top: \"70%\",\n        position: \"absolute\",\n        borderRadius: \"50%\",\n        backgroundColor: \"blue\",\n        color: \"white\",\n        // zIndex:100,\n        marginLeft: \"50%\",\n        fontFamily: 'メイリオ',\n    },\n    narrator: {\n        fontFamily: 'メイリオ',\n        // fontSize: 20,\n        display: 'flex',\n        alignItems: 'top',//縦\n        textAlign: 'start',//横\n        color: \"#994C00\",\n        backgroundColor: '#EEB57D',\n        borderRadius: 16,\n        height: 60,\n        width: '70%',\n        marginTop: 20,\n        alignSelf: '',\n        justifyContent: 'flex-start',\n        marginLeft: '15%',\n        padding: 10,\n        // position:'relative',\n    },\n    yuka: {\n        fontFamily: 'メイリオ',\n        width: '100%',\n        maxWidth: '25ch',\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: 20,\n        borderColor: 'blue',\n        padding: 10,\n    },\n    yuka_label: {\n        fontSize: 15,\n        marginBottom: '0%',\n        marginLeft: '20%',\n        marginTop: '5%',\n    },\n    syujiinko: {\n        fontFamily: 'メイリオ',\n        border: 'solid',\n        color: '#7088b1',\n        borderRadius: 20,\n        borderColor: '#bfc8d5',\n        backgroundColor: '#e2e3e4',\n        width: '100%',\n        maxWidth: '30ch',\n        marginLeft: '40%',\n        padding: 10,\n    },\n    avatar: {\n        // padding: 10,\n        marginLeft: 50,\n    },\n    square: {\n        width: \"100%\",\n        height: \"900px\",\n        // margin:'0',\n        backgroundColor: \"#eeedea\",\n    }\n}))\n\ntype JsonData = {\n    sentenceId: string\n    nextSentenceId: string\n    personName: string\n    sentence: {\n        plane: string,\n        button: Array<{\n            buttonLabel: string,\n            nextSentenceId: string\n        }>\n        // important:Array<{[key:string]:string}>[]\n    }\n}\n\n\nconst currentSentenceIdInit: string = \"0\"\nconst genderInit: string = \"0\"\nconst spotIdInit: string = \"A\"\nconst spotNameInit: string = \"大谷資料館\"\nconst scenarioListInit = [\n    {\n        sentenceId: \"0\",\n        nextSentenceId: \"1\",\n        personName: \"優花\",\n        sentence: {\n            plane: \"初期値消したい\",\n            button: [\n                {\n                    buttonLabel: \"海外強度料理にしよう\",\n                    nextSentenceId: \"21\"\n                },\n                {\n                    buttonLabel: \"お蕎麦屋さんにしよう\",\n                    nextSentenceId: \"22\"\n                }\n            ],\n            // important: [\n            //     { \"海外強度料理にしよう\": \"B\" },\n            //     { \"お蕎麦屋さんにしよう\": \"C\" }\n            // ]\n        }\n\n    }\n]\n\n// const travelApi = axios.create({\n//     baseURL: \"http://localhost:3001/posts\",\n//     timeout: 30000,\n//     headers: { 'Content-Type': 'application/json' },\n//     responseType:'json',\n//   });\n\n// const sampleInit = [\n//     {\n//         name: \"yuka\",\n//         text: \"大谷石の採掘場だから、石ならではの温度なんだよね\"\n//     },\n// ]\n\n// const isButtonInit = false \n// const isButtonInit = { sentenceId: \"0\", isDisp: false }\nconst isButtonInit = false\nvar buttonLabel_1:string\nvar buttonLabel_2:string\n\nconst selectButton = (button1:string,button2:string) => {\n\n    console.log(button1)\n    return(\n        <div>\n            <button>{button1}</button>\n            fdasssssss\n        </div>\n    )\n}\n\nconst Chat: React.FC = () => {\n    const classes = useStyles()\n    const persistState = localStorage.getItem('scenario')\n    // const persistGenderState = localStorage.getItem('gender')\n    // const [gender, setGender] = useState(persistGenderState ? JSON.parse(persistGenderState) : genderInit);\n    const persistScenarioListState = localStorage.getItem('scenarioList')\n    // const [sample, setSample] = useState(persistState ? JSON.parse(persistState) : sampleInit);\n    const [jsonData, setJsonData] = useState<JsonData[]>()\n    // const [scenarioList, setScenarioList] = useState(persistScenarioListState ? JSON.parse(persistScenarioListState) : scenarioListInit);\n    const [scenarioList, setScenarioList] = useState<JsonData[]>()\n    const [currentSentenceId, setCurrentSentenceId] = useState(currentSentenceIdInit);\n    const [isButton, setIsButton] = useRef(isButtonInit)\n    // useEffect(() => localStorage.setItem('scenarioList', JSON.stringify(scenarioList)), [scenarioList])\n\n    // useEffect(() => {\n    //     console.log({ scenarioList });\n    // }, [scenarioList]);\n\n\n    const conversation = async () => {\n\n        setIsButton(false)\n        function delay(ms: number) {\n            return new Promise(resolve => setTimeout(resolve, ms));\n        }\n\n        fetch(\"http://localhost:3001/posts\")\n            .then(response => response.json())\n            .then(jsonData => {\n                setJsonData(jsonData)\n                console.log(jsonData)\n\n                jsonData.map((scenario: any) => {\n\n                    if (scenario.sentenceId === currentSentenceId) {\n                        //上書き\n                        scenarioList ? setScenarioList([...scenarioList, {\n                            sentenceId: scenario.sentenceId,\n                            nextSentenceId: scenario.nextSentenceId,\n                            personName: scenario.personName,\n                            sentence: {\n                                plane: scenario.sentence.plane,\n                                button: [\n                                    {\n                                        buttonLabel: scenario.sentence.button[0].buttonLabel,\n                                        nextSentenceId: scenario.sentence.button[0].nextSentenceId\n                                    },\n                                    {\n                                        buttonLabel: scenario.sentence.button[1].buttonLabel,\n                                        nextSentenceId: scenario.sentence.button[1].nextSentenceId\n                                    }\n                                ]\n\n                            }\n\n\n                        }]) :\n                            //新規\n                            setScenarioList([{\n                                sentenceId: scenario.sentenceId,\n                                nextSentenceId: scenario.nextSentenceId,\n                                personName: scenario.personName,\n                                sentence: {\n                                    plane: scenario.sentence.plane,\n                                    button: [\n                                        {\n                                            buttonLabel: scenario.sentence.button[0].buttonLabel,\n                                            nextSentenceId: scenario.sentence.button[0].nextSentenceId\n                                        },\n                                        {\n                                            buttonLabel: scenario.sentence.button[1].buttonLabel,\n                                            nextSentenceId: scenario.sentence.button[1].nextSentenceId\n                                        }\n                                    ]\n\n                                }\n\n\n                            }])\n                        //現在のnextSentenceIdに値が入っている場合\n                        if (scenario.nextSentenceId != \"\") {\n                            setCurrentSentenceId(scenario.nextSentenceId)\n                            // console.log(scenario.sentence.button[0].buttonLabel)\n                            console.log(scenario.sentence.button.buttonLabel)\n                            console.log(scenario.sentence.button.nextSentenceId)\n                            // console.log(\"------\")\n                            // console.log(scenario)\n                            // console.log(\"------\")\n                            // console.log(isButton)\n                        }\n                        //現在のsentenceにボタンが入っている場合\n                        if (scenario.sentence.button[0].buttonLabel != \"\") {\n                            setIsButton(true)\n                            selectButton(\"aa\",\"bb\")\n                            buttonLabel_1=scenario.sentence.button[0].buttonLabel\n                            buttonLabel_2=scenario.sentence.button[1].buttonLabel\n                        }\n                    }\n                })\n            })\n\n    }\n\n\n\n\n    return (\n        <div>\n            <HeaderChat title=\"チャット画面\" />\n\n            {scenarioList && scenarioList.map((scenario: any) => scenario.personName == \"優花\" ?\n                <div>\n                    <div className={classes.yuka_label}>優花</div>\n                    <ListItem>\n                        <ListItemAvatar>\n                            <Avatar alt=\"icon\" src={userIcon} />\n                        </ListItemAvatar>\n                        <List className={classes.yuka}>{scenario.sentence.plane}</List>\n                    </ListItem>\n                </div>\n                : scenario.personName == \"主人公\" ?\n                    <div>\n                        <ListItem>\n                            <List className={classes.syujiinko}>{scenario.sentence.plane}</List>\n                        </ListItem>\n                    </div>\n                    :\n                    <div>\n                        <ListItem>\n                            <List className={classes.narrator}>{scenario.sentence.plane}</List>\n                        </ListItem>\n                    </div>\n            )}\n            {isButton == true ?\n\n                scenarioList && scenarioList.map((scenario: any) => scenario.sentence.button[0].buttonLabel != \"\" &&\n                    <div>\n                        {console.log(buttonLabel_2)}\n                        <button>{buttonLabel_2}</button>\n                        {/* {scenario.sentence.button && scenario.sentence.button.map((button: any) =>\n                            <ListItem>\n                                <List><button>{button.buttonLabel}</button></List>\n                            </ListItem>\n                        )} */}\n                    </div>\n                )\n                : isButton == false &&\n                <div>false</div>\n\n            }\n\n\n            <button className={classes.buttonDesign} onClick={() => { conversation() }}>↑</button>\n\n\n            <Footer />\n        </div>\n    )\n}\n\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}