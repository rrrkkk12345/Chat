{"ast":null,"code":"var _jsxFileName = \"/Users/rei.kawasato/Desktop/travel/src/pages/chat.tsx\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport { makeStyles, Grid, Button, ListItemAvatar, Avatar, List } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport useReactRouter from 'use-react-router'; // import classes from '*.module.css';\n\nimport HeaderChat from './headerChat';\nimport userIcon from '../assets/avatarWomen.png';\nimport jsonDataMale from '../utils/db2.json';\nimport jsonDataFemale from '../utils/db_f.json';\nimport InputBase from \"@material-ui/core/InputBase\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ForwardIcon from '@material-ui/icons/Forward';\n\nconst UserIcon = require('../assets/test.png');\n\nconst TabChatOn = require('../assets/TabChatOn.png');\n\nconst TabMapOff = require('../assets/TabMapOff.png');\n\nconst Tap = require('../assets/Tap.png');\n\nconst headerHeight = '44px';\nconst ContentBodyHeight = `calc(100vh - ${headerHeight})`;\nconst selectButtonRadius = '18px';\nconst baseFontColor = '#4575b4';\nconst textInputBgColor = '#fefffe';\nconst useStyles = makeStyles(theme => ({\n  chatDesignContainer: {\n    display: \"flex\",\n    position: \"relative\",\n    width: \"100%\",\n    // height: '100vh',\n    // height: 'calc(100vh - 200px)',\n    height: ContentBodyHeight,\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    paddingTop: headerHeight,\n    paddingBottom: '156px' // paddingBottom: isButton ? '156px' : 'calc(10% + 1rem)',\n    // paddingBottom: 'calc(20% + 1rem)',\n\n  },\n  chatDesign: {\n    display: 'flex',\n    justifyContent: 'center',\n    position: \"relative\",\n    width: \"100%\",\n    backgroundColor: \"#EFEDE9\",\n    // top: \"10%\",\n    // paddingTop: headerHeight,\n    paddingBottom: \"291px\",\n    overflow: \"auto\",\n    '& .MuiList-padding': {\n      display: 'flex',\n      justifyContent: 'center',\n      padding: '0.5rem 1rem'\n    }\n  },\n  chatDesignInner: {\n    position: \"relative\",\n    width: \"100%\",\n    maxWidth: '390px',\n    height: ContentBodyHeight\n  },\n  buttonDesign: {\n    bottom: \"30%\",\n    position: \"fixed\",\n    borderRadius: \"50%\",\n    // backgroundColor: \"blue\",\n    color: \"white\",\n    // zIndex:100,\n    // marginLeft: \"40%\",\n    fontFamily: 'メイリオ' // cursor: \"pointer\",\n\n  },\n  selectButton: {\n    width: \"100%\",\n    minHeight: '10%',\n    // height: '10%',\n    justifyItems: 'center',\n    textAlign: 'center',\n    padding: '0.5rem 0',\n    position: 'fixed',\n    bottom: \"10%\",\n    backgroundColor: '#EFEDE9',\n    boxShadow: 'inset 0 -0.5px 0 0 rgba(0, 0, 0, 0.2)',\n    '& .MuiButton-label': {\n      color: baseFontColor\n    },\n    '& .MuiButton-disableElevation': {\n      width: '100%',\n      maxWidth: '326px',\n      height: '100%',\n      minHeight: headerHeight,\n      border: '1px solid #cdcdcd',\n      backgroundColor: '#FFFFFF'\n    },\n    '& .MuiGrid-grid-xs-12:nth-of-type(1)': {\n      '& button': {\n        borderTopLeftRadius: selectButtonRadius,\n        borderTopRightRadius: selectButtonRadius\n      }\n    },\n    '& .MuiGrid-grid-xs-12:nth-of-type(2)': {\n      '& button': {\n        borderBottomLeftRadius: selectButtonRadius,\n        borderBottomRightRadius: selectButtonRadius\n      }\n    }\n  },\n  narrator: {\n    fontFamily: 'メイリオ',\n    // fontSize: 20,\n    display: 'flex',\n    alignItems: 'flex-start',\n    //縦\n    textAlign: 'left',\n    //横\n    backgroundColor: '#efdcc9',\n    color: \"#994C00\",\n    borderRadius: 16,\n    width: '100%',\n    maxWidth: '390px',\n    marginTop: 20,\n    justifyContent: 'flex-start',\n    // marginLeft: '15%',\n    padding: '1rem' // position:'relative',\n\n  },\n  yukaWrapper: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    alignItems: 'flex-start',\n    '& .MuiListItemAvatar-root': {\n      minWidth: '40px'\n    },\n    '& .MuiAvatar-root': {\n      width: '31px',\n      height: '31px'\n    }\n  },\n  yuka: {\n    fontFamily: 'メイリオ',\n    width: '100%',\n    maxWidth: '25ch',\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: 17.5,\n    borderColor: 'blue',\n    padding: 10\n  },\n  yuka_label: {\n    fontSize: 15,\n    marginBottom: '0%',\n    marginLeft: '15%',\n    marginTop: '0.5rem'\n  },\n  syujiinkoWrapper: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    alignItems: 'flex-end'\n  },\n  syujiinko: {\n    fontFamily: 'メイリオ',\n    border: '1px solid #bfc8d5',\n    color: '#7088b1',\n    borderRadius: 17.5,\n    backgroundColor: '#e2e3e4',\n    width: 'auto',\n    maxWidth: '27ch',\n    padding: 10\n  },\n  avatar: {\n    // padding: 10,\n    marginLeft: 50\n  },\n  square: {\n    width: \"100%\",\n    height: \"900px\",\n    // margin:'0',\n    backgroundColor: \"#eeedea\"\n  },\n  bottomTab: {\n    position: \"fixed\",\n    bottom: \"0\",\n    height: \"10%\",\n    width: \"100%\",\n    backgroundColor: \"#eeedea\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    textAlign: \"center\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  bottomChat: {\n    // border: \"2px solid\",\n    // borderColor: \"pink\",\n    flex: 1\n  },\n  bottomMap: {\n    // border: \"2px solid\",\n    // borderColor: \"pink\",\n    flex: 1\n  },\n  mapLabel: {\n    color: baseFontColor,\n    fontWeight: 'bold',\n    fontSize: '14px',\n    letterSpacing: '-0.32px',\n    textAlign: 'center',\n    bottom: \"13%\",\n    position: \"fixed\",\n    borderRadius: \"50%\",\n    // backgroundColor: \"blue\",\n    // zIndex:100,\n    // marginLeft: \"40%\",\n    fontFamily: 'メイリオ' // cursor: \"pointer\",\n\n  },\n  sendButtonContainer: {\n    display: 'flex',\n    justifyContent: \"center\",\n    alignItems: 'center',\n    width: '100%',\n    padding: '0 1rem'\n  },\n  sendButtonWrapper: {\n    paddingLeft: '0.5rem',\n    display: 'flex',\n    alignItems: 'center',\n    width: '100%',\n    maxWidth: '390px',\n    backgroundColor: textInputBgColor,\n    border: '1px solid #c4c4c6',\n    borderRadius: selectButtonRadius\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  }\n}));\nconst currentSentenceIdInit = \"0\";\nconst genderInit = \"0\";\nconst spotIdInit = \"A\";\nconst spotNameInit = \"大谷資料館\";\nconst scenarioListInit = [{\n  sentenceId: \"0\",\n  nextSentenceId: \"1\",\n  personName: \"優花\",\n  sentence: {\n    plane: \"初期値消したい\",\n    button: [{\n      buttonLabel: \"海外強度料理にしよう\",\n      nextSentenceId: \"21\"\n    }, {\n      buttonLabel: \"お蕎麦屋さんにしよう\",\n      nextSentenceId: \"22\"\n    }]\n  },\n  reply: \"true\"\n}];\nconst isButtonInit = false;\nconst isReplyInit = false;\nconst isBtnLabelInit_1 = \"\";\nconst isBtnLabelInit_2 = \"\";\nconst isBtnScenarioIdInit_1 = \"\";\nconst isBtnScenarioIdInit_2 = \"\";\n\nconst BottomTab = () => {\n  const {\n    history\n  } = useReactRouter();\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.bottomTab,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.bottomChat,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: TabChatOn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 17\n    }\n  }, \"\\u30C1\\u30E3\\u30C3\\u30C8\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.bottomMap,\n    onClick: () => history.push(\"/map\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: TabMapOff,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 17\n    }\n  }, \"\\u30DE\\u30C3\\u30D7\")));\n};\n\nvar btn1 = \"\";\n\nconst Chat = () => {\n  const {\n    history\n  } = useReactRouter();\n  const classes = useStyles();\n  const [jsonData, setJsonData] = useState();\n  const [scenarioList, setScenarioList] = useState();\n  const [scenarioLog, setScenarioLog] = useState();\n  const [currentSentenceId, setCurrentSentenceId] = useState(currentSentenceIdInit);\n  const [isButton, setIsButton] = useState(isButtonInit);\n  const [isReply, setIsReply] = useState(isReplyInit);\n  const [btnLabel_1, setBtnLabel_1] = useState(isBtnLabelInit_1);\n  const [btnLabel_2, setBtnLabel_2] = useState(isBtnLabelInit_2);\n  const [btnScenarioId_1, setBtnScenarioId_1] = useState(isBtnScenarioIdInit_1);\n  const [btnScenarioId_2, setBtnScenarioId_2] = useState(isBtnScenarioIdInit_2);\n  const [btnText, setBtnText] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n  const [reply, setReply] = useState(\"\");\n  const isFirstRender = useRef(false);\n  const ref = useRef(null);\n  useEffect(() => {\n    const jwt = JSON.parse(localStorage.getItem('jwt'));\n    const {\n      Authorization,\n      Accesstoken\n    } = jwt;\n    const scenarioHistString = localStorage.getItem('scenarioHist'); // const scenarioHist: string<{ nextSentenceId: string, personName: string, plane: string }> = localStorage.getItem('scenarioHist')\n    // const { personName, plane } = scenarioHist\n\n    console.log(scenarioHistString); // console.log(\"3\")\n\n    if (scenarioHistString) {\n      console.log(\"Localstorage\");\n      const scenarioHist = JSON.parse(scenarioHistString);\n\n      if (scenarioHist.length > 0) {\n        setScenarioLog(scenarioHist);\n        setCurrentSentenceId(scenarioHist.slice(-1)[0].nextSentenceId);\n        scrollToBottomOfList();\n      }\n    } else {\n      console.log(\"DB\"); //ログから会話履歴をもってくる\n\n      fetch(\"https://jtb-prd.two-choices.jp/api/scenario/log/\", {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': Authorization,\n          'accesstoken': Accesstoken\n        }\n      }).then(res => res.json()).then(data => {\n        if (data.scenarioHistory.length <= 0) {\n          localStorage.setItem('scenarioHist', JSON.stringify([]));\n          return;\n        }\n\n        localStorage.setItem('scenarioHist', JSON.stringify(data.scenarioHistory)); // const scenarioGet: Array<{ nextSentenceId: string, personName: string, plane: string }> = JSON.parse(localStorage.getItem('scenarioHist') as string)\n\n        console.log(data.scenarioHistory); // DBから最新のIDをとってくる\n        // scenarioGet.slice(-1)[0]\n\n        console.log(\"休みたい\", data.scenarioHistory);\n        setScenarioLog(data.scenarioHistory);\n        setCurrentSentenceId(data.scenarioHistory.slice(-1)[0].nextSentenceId);\n        scrollToBottomOfList();\n      });\n    }\n  }, []);\n  useEffect(() => {\n    scrollToBottomOfList();\n  }, [scenarioList]);\n  useEffect(() => {\n    scrollToBottomOfList();\n  }, [scenarioLog]);\n  const scrollToBottomOfList = React.useCallback(() => {\n    ref.current.scrollIntoView({\n      behavior: 'smooth',\n      block: 'end'\n    });\n  }, [ref]);\n\n  const selectBtnText = (scenarioId, planeMessage) => {\n    scenarioList && setScenarioList([...scenarioList, {\n      sentenceId: \"\",\n      nextSentenceId: scenarioId,\n      personName: \"主人公\",\n      sentence: {\n        plane: planeMessage,\n        button: [{\n          buttonLabel: \"\",\n          nextSentenceId: \"\"\n        }, {\n          buttonLabel: \"\",\n          nextSentenceId: \"\"\n        }]\n      },\n      reply: \"false\"\n    }]);\n    setCurrentSentenceId(scenarioId);\n    const jwt = JSON.parse(localStorage.getItem('jwt'));\n    const {\n      Authorization,\n      Accesstoken\n    } = jwt;\n    fetch(\"https://jtb-prd.two-choices.jp/api/scenario/log/\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': Authorization,\n        'accesstoken': Accesstoken\n      },\n      // body: JSON.stringify({ scenario: { personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId } })\n      body: JSON.stringify({\n        scenario: {\n          nextSentenceId: scenarioId,\n          personName: \"主人公\",\n          plane: planeMessage\n        }\n      })\n    });\n    const tmpArray = JSON.parse(localStorage.getItem('scenarioHist'));\n    console.log(\"tmpArray:\", tmpArray);\n    tmpArray.push({\n      nextSentenceId: scenarioId,\n      personName: \"主人公\",\n      plane: planeMessage\n    }); // localStorage.setItem('scenarioHist', JSON.stringify({ personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId }))\n\n    localStorage.setItem('scenarioHist', JSON.stringify(tmpArray)); //性別\n    // console.log(\"性別\",currentSentenceId)\n\n    if (currentSentenceId === \"1\") {\n      fetch(\"https://jtb-prd.two-choices.jp/api/user/\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': Authorization,\n          'accesstoken': Accesstoken\n        },\n        body: JSON.stringify({\n          gender: planeMessage\n        })\n      });\n    }\n  };\n\n  const handleReplyChange = e => {\n    setReply(e.target.value);\n  };\n\n  const replyText = (id, planeMessage) => {\n    scenarioList && setScenarioList([...scenarioList, {\n      sentenceId: \"\",\n      nextSentenceId: \"\",\n      personName: \"主人公\",\n      sentence: {\n        plane: planeMessage,\n        button: [{\n          buttonLabel: \"\",\n          nextSentenceId: \"\"\n        }, {\n          buttonLabel: \"\",\n          nextSentenceId: \"\"\n        }]\n      },\n      reply: \"\"\n    }]);\n    setCurrentSentenceId(id);\n    setIsReply(false);\n    const jwt = JSON.parse(localStorage.getItem('jwt'));\n    const {\n      Authorization,\n      Accesstoken\n    } = jwt;\n    fetch(\"https://jtb-prd.two-choices.jp/api/scenario/log/\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': Authorization,\n        'accesstoken': Accesstoken\n      },\n      // body: JSON.stringify({ scenario: { personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId } })\n      body: JSON.stringify({\n        scenario: {\n          nextSentenceId: id,\n          personName: \"主人公\",\n          plane: planeMessage\n        }\n      })\n    });\n    const tmpArray = JSON.parse(localStorage.getItem('scenarioHist'));\n    console.log(\"tmpArray:\", tmpArray); // tmpArray.push({ personName: \"主人公\", plane: planeMessage })\n    // localStorage.setItem('scenarioHist', JSON.stringify({ personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId }))\n\n    localStorage.setItem('scenarioHist', JSON.stringify(tmpArray)); // }).then(res => res.json()).then(console.log)\n    // scrollToBottomOfList()\n    //名前\n\n    if (currentSentenceId === \"1\") {\n      fetch(\"https://jtb-prd.two-choices.jp/api/user/\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': Authorization,\n          'accesstoken': Accesstoken\n        },\n        body: JSON.stringify({\n          name: planeMessage\n        })\n      });\n    } //年齢\n\n\n    if (currentSentenceId === \"3\") {\n      fetch(\"https://jtb-prd.two-choices.jp/api/user/\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': Authorization,\n          'accesstoken': Accesstoken\n        },\n        body: JSON.stringify({\n          birth: planeMessage\n        })\n      });\n    }\n  };\n\n  const processScenario = async (btnId, btnLabel) => {\n    // setCurrentSentenceId(\"0\")\n    // console.log(jsonDataTest)\n    const jwt = JSON.parse(localStorage.getItem('jwt'));\n    const {\n      Authorization,\n      Accesstoken\n    } = jwt;\n    fetch(\"https://jtb-prd.two-choices.jp/api/user/\", {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': Authorization,\n        'accesstoken': Accesstoken\n      }\n    }).then(res => res.json()).then(data => {\n      if (data.Item.gender === \"\") {\n        console.log(\"1\");\n        return;\n      }\n\n      if (data.Item.gender === undefined) {\n        console.log(\"2\");\n        return;\n      } // const scenarioGet: Array<{ nextSentenceId: string, personName: string, plane: string }> = JSON.parse(localStorage.getItem('scenarioHist') as string)\n      // DBから最新のIDをとってくる\n      // scenarioGet.slice(-1)[0]\n\n\n      setGender(data.Item.gender);\n    });\n    console.log(\"gender\", gender);\n    if (!localStorage.getItem('scenarioHist')) return;\n    setIsButton(false);\n    setIsReply(false);\n\n    if (btnId != \"\") {\n      return;\n    } else {\n      if (gender === \"男性です。\") {\n        console.log(\"MM\");\n        jsonDataMale.map(scenario => {\n          //次もってくる文章に合っているものを抽出\n          if (scenario.sentenceId === currentSentenceId) {\n            //Filtterつかえる\n            //上書き\n            scenarioList ? setScenarioList([...scenarioList, { ...scenario\n            }]) : //新規\n            setScenarioList([{ ...scenario\n            }]);\n            console.log(\"scenario.nextSentenceId\", scenario.nextSentenceId);\n            console.log(\"scenario.sentence.button[0].buttonLabel\", scenario.sentence.button[0].buttonLabel); // 現在のnextSentenceIdに値が入っている場合\n\n            if (scenario.nextSentenceId != \"\") {\n              setCurrentSentenceId(scenario.nextSentenceId);\n            } //現在のsentenceにボタンが入っている場合\n\n\n            if (scenario.sentence.button[0].buttonLabel != \"\") {\n              setIsButton(true);\n              setBtnScenarioId_1(scenario.sentence.button[0].nextSentenceId);\n              setBtnScenarioId_2(scenario.sentence.button[1].nextSentenceId);\n              setBtnLabel_1(scenario.sentence.button[0].buttonLabel);\n              setBtnLabel_2(scenario.sentence.button[1].buttonLabel);\n            } //返信がテキストで必要な場合\n\n\n            if (scenario.reply === \"true\") {\n              setIsReply(true);\n            }\n\n            const jwt = JSON.parse(localStorage.getItem('jwt'));\n            const {\n              Authorization,\n              Accesstoken\n            } = jwt; //今表示したものをDBに入れる\n\n            fetch(\"https://jtb-prd.two-choices.jp/api/scenario/log/\", {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json',\n                'Authorization': Authorization,\n                'accesstoken': Accesstoken\n              },\n              body: JSON.stringify({\n                scenario: {\n                  nextSentenceId: currentSentenceId,\n                  personName: scenario.personName,\n                  plane: scenario.sentence.plane\n                }\n              })\n            });\n            const tmpArray = JSON.parse(localStorage.getItem('scenarioHist'));\n            console.log(\"tmpArray:\", tmpArray);\n            tmpArray.push({\n              nextSentenceId: scenario.nextSentenceId,\n              personName: scenario.personName,\n              plane: scenario.sentence.plane\n            });\n            localStorage.setItem('scenarioHist', JSON.stringify(tmpArray));\n          }\n        });\n      }\n\n      if (gender === \"女性です。\") {\n        console.log(\"FF\");\n        jsonDataFemale.map(scenario => {\n          //次もってくる文章に合っているものを抽出\n          if (scenario.sentenceId === currentSentenceId) {\n            //Filtterつかえる\n            //上書き\n            scenarioList ? setScenarioList([...scenarioList, { ...scenario\n            }]) : //新規\n            setScenarioList([{ ...scenario\n            }]);\n            console.log(\"scenario.nextSentenceId\", scenario.nextSentenceId);\n            console.log(\"scenario.sentence.button[0].buttonLabel\", scenario.sentence.button[0].buttonLabel); // 現在のnextSentenceIdに値が入っている場合\n\n            if (scenario.nextSentenceId != \"\") {\n              setCurrentSentenceId(scenario.nextSentenceId);\n            } //現在のsentenceにボタンが入っている場合\n\n\n            if (scenario.sentence.button[0].buttonLabel != \"\") {\n              setIsButton(true);\n              setBtnScenarioId_1(scenario.sentence.button[0].nextSentenceId);\n              setBtnScenarioId_2(scenario.sentence.button[1].nextSentenceId);\n              setBtnLabel_1(scenario.sentence.button[0].buttonLabel);\n              setBtnLabel_2(scenario.sentence.button[1].buttonLabel);\n            } //返信がテキストで必要な場合\n\n\n            if (scenario.reply === \"true\") {\n              setIsReply(true);\n            }\n\n            const jwt = JSON.parse(localStorage.getItem('jwt'));\n            const {\n              Authorization,\n              Accesstoken\n            } = jwt; //今表示したものをDBに入れる\n\n            fetch(\"https://jtb-prd.two-choices.jp/api/scenario/log/\", {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json',\n                'Authorization': Authorization,\n                'accesstoken': Accesstoken\n              },\n              body: JSON.stringify({\n                scenario: {\n                  nextSentenceId: currentSentenceId,\n                  personName: scenario.personName,\n                  plane: scenario.sentence.plane\n                }\n              })\n            });\n            const tmpArray = JSON.parse(localStorage.getItem('scenarioHist'));\n            console.log(\"tmpArray:\", tmpArray);\n            tmpArray.push({\n              nextSentenceId: scenario.nextSentenceId,\n              personName: scenario.personName,\n              plane: scenario.sentence.plane\n            });\n            localStorage.setItem('scenarioHist', JSON.stringify(tmpArray));\n          }\n        });\n      } else {\n        jsonDataMale.map(scenario => {\n          //次もってくる文章に合っているものを抽出\n          if (scenario.sentenceId === currentSentenceId) {\n            //Filtterつかえる\n            //上書き\n            scenarioList ? setScenarioList([...scenarioList, { ...scenario\n            }]) : //新規\n            setScenarioList([{ ...scenario\n            }]);\n            console.log(\"scenario.nextSentenceId\", scenario.nextSentenceId);\n            console.log(\"scenario.sentence.button[0].buttonLabel\", scenario.sentence.button[0].buttonLabel); // 現在のnextSentenceIdに値が入っている場合\n\n            if (scenario.nextSentenceId != \"\") {\n              setCurrentSentenceId(scenario.nextSentenceId);\n            } //現在のsentenceにボタンが入っている場合\n\n\n            if (scenario.sentence.button[0].buttonLabel != \"\") {\n              setIsButton(true);\n              setBtnScenarioId_1(scenario.sentence.button[0].nextSentenceId);\n              setBtnScenarioId_2(scenario.sentence.button[1].nextSentenceId);\n              setBtnLabel_1(scenario.sentence.button[0].buttonLabel);\n              setBtnLabel_2(scenario.sentence.button[1].buttonLabel);\n            } //返信がテキストで必要な場合\n\n\n            if (scenario.reply === \"true\") {\n              setIsReply(true);\n            }\n\n            const jwt = JSON.parse(localStorage.getItem('jwt'));\n            const {\n              Authorization,\n              Accesstoken\n            } = jwt; //今表示したものをDBに入れる\n\n            fetch(\"https://jtb-prd.two-choices.jp/api/scenario/log/\", {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json',\n                'Authorization': Authorization,\n                'accesstoken': Accesstoken\n              },\n              body: JSON.stringify({\n                scenario: {\n                  nextSentenceId: currentSentenceId,\n                  personName: scenario.personName,\n                  plane: scenario.sentence.plane\n                }\n              })\n            });\n            const tmpArray = JSON.parse(localStorage.getItem('scenarioHist'));\n            console.log(\"tmpArray:\", tmpArray);\n            tmpArray.push({\n              nextSentenceId: scenario.nextSentenceId,\n              personName: scenario.personName,\n              plane: scenario.sentence.plane\n            });\n            localStorage.setItem('scenarioHist', JSON.stringify(tmpArray));\n          }\n        });\n      }\n\n      if (currentSentenceId === \"1001\") {\n        history.push(`/summary?messageNum=1`);\n      }\n\n      if (currentSentenceId === \"1002\") {\n        history.push(`/summary?messageNum=2`);\n      }\n\n      if (currentSentenceId === \"1003\") {\n        history.push(`/summary?messageNum=3`);\n      }\n\n      if (currentSentenceId === \"1004\") {\n        history.push(`/summary?messageNum=4`);\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 778,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(HeaderChat, {\n    title: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 780,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.chatDesignContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 782,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.chatDesign,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 783,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.chatDesignInner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 784,\n      columnNumber: 21\n    }\n  }, scenarioLog && scenarioLog.map(scenario => scenario.personName == \"優花\" ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.yukaWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 786,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.yuka_label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 787,\n      columnNumber: 33\n    }\n  }, \"\\u512A\\u82B1\"), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 789,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 790,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    alt: \"icon\",\n    src: userIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 791,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(ListItem, {\n    className: classes.yuka,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 793,\n      columnNumber: 37\n    }\n  }, scenario.plane))) : scenario.personName == \"主人公\" ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.syujiinkoWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 797,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 798,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    className: classes.syujiinko,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 799,\n      columnNumber: 41\n    }\n  }, scenario.plane))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 803,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 804,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    className: classes.narrator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 805,\n      columnNumber: 41\n    }\n  }, scenario.plane)))), scenarioList && scenarioList.map(scenario => scenario.personName == \"優花\" ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.yukaWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 810,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.yuka_label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 811,\n      columnNumber: 33\n    }\n  }, \"\\u512A\\u82B1\"), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 813,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 814,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    alt: \"icon\",\n    src: userIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 815,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(ListItem, {\n    className: classes.yuka,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 817,\n      columnNumber: 37\n    }\n  }, scenario.sentence.plane))) : scenario.personName == \"主人公\" ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.syujiinkoWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 821,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 822,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    className: classes.syujiinko,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 823,\n      columnNumber: 41\n    }\n  }, scenario.sentence.plane))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 827,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 828,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    className: classes.narrator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 829,\n      columnNumber: 41\n    }\n  }, scenario.sentence.plane)))), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"bottom-of-list\",\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 837,\n      columnNumber: 25\n    }\n  })), isButton == true ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.selectButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 840,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    alignItems: \"center\",\n    spacing: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 841,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 842,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    disableElevation: true,\n    onClick: () => {\n      selectBtnText(btnScenarioId_1, btnLabel_1);\n      processScenario(btnScenarioId_1, btnLabel_1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 843,\n      columnNumber: 37\n    }\n  }, btnLabel_1)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 855,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    disableElevation: true,\n    onClick: () => {\n      selectBtnText(btnScenarioId_2, btnLabel_2);\n      processScenario(btnScenarioId_2, btnLabel_2);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 856,\n      columnNumber: 37\n    }\n  }, btnLabel_2)))) // <button className={classes.buttonDesign} onClick={() => { processScenario(\"\", \"\") }}>↑</button>\n  : isReply == true ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.selectButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 881,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.sendButtonContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 882,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.sendButtonWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 883,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(InputBase, {\n    className: classes.input,\n    placeholder: \"\\u5165\\u529B\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\",\n    inputProps: {\n      'aria-label': 'search google maps'\n    },\n    onChange: e => handleReplyChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 884,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    type: \"submit\",\n    className: classes.iconButton,\n    \"aria-label\": \"search\",\n    onClick: () => replyText(currentSentenceId, reply),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 891,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(ForwardIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 897,\n      columnNumber: 45\n    }\n  }))))) : currentSentenceId === \"5\" ?\n  /*#__PURE__*/\n  //東京\n  React.createElement(\"div\", {\n    className: classes.mapLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 933,\n      columnNumber: 33\n    }\n  }, \"\\u76EE\\u7684\\u5730\\u306B\\u5230\\u7740\\u3057\\u305F\\u3089\\u4E0B\\u306E\\u30DE\\u30C3\\u30D7\\u30DA\\u30FC\\u30B8\\u3067\\u30C1\\u30A7\\u30C3\\u30AF\\u30A4\\u30F3\\u3057\\u3066\\u30B7\\u30CA\\u30EA\\u30AA\\u3092\\u9032\\u3081\\u307E\\u3057\\u3087\\u3046\") : currentSentenceId === \"68\" ?\n  /*#__PURE__*/\n  //大谷資料館\n  React.createElement(\"div\", {\n    className: classes.mapLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 938,\n      columnNumber: 33\n    }\n  }, \"\\u76EE\\u7684\\u5730\\u306B\\u5230\\u7740\\u3057\\u305F\\u3089\\u4E0B\\u306E\\u30DE\\u30C3\\u30D7\\u30DA\\u30FC\\u30B8\\u3067\\u30C1\\u30A7\\u30C3\\u30AF\\u30A4\\u30F3\\u3057\\u3066\\u30B7\\u30CA\\u30EA\\u30AA\\u3092\\u9032\\u3081\\u307E\\u3057\\u3087\\u3046\") : currentSentenceId === \"125\" ?\n  /*#__PURE__*/\n  //クーリ・ルージュ\n  React.createElement(\"div\", {\n    className: classes.mapLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 942,\n      columnNumber: 37\n    }\n  }, \"\\u76EE\\u7684\\u5730\\u306B\\u5230\\u7740\\u3057\\u305F\\u3089\\u4E0B\\u306E\\u30DE\\u30C3\\u30D7\\u30DA\\u30FC\\u30B8\\u3067\\u30C1\\u30A7\\u30C3\\u30AF\\u30A4\\u30F3\\u3057\\u3066\\u30B7\\u30CA\\u30EA\\u30AA\\u3092\\u9032\\u3081\\u307E\\u3057\\u3087\\u3046\") : currentSentenceId === \"165\" ?\n  /*#__PURE__*/\n  //若竹\n  React.createElement(\"div\", {\n    className: classes.mapLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 947,\n      columnNumber: 41\n    }\n  }, \"\\u76EE\\u7684\\u5730\\u306B\\u5230\\u7740\\u3057\\u305F\\u3089\\u4E0B\\u306E\\u30DE\\u30C3\\u30D7\\u30DA\\u30FC\\u30B8\\u3067\\u30C1\\u30A7\\u30C3\\u30AF\\u30A4\\u30F3\\u3057\\u3066\\u30B7\\u30CA\\u30EA\\u30AA\\u3092\\u9032\\u3081\\u307E\\u3057\\u3087\\u3046\") : currentSentenceId === \"216\" ?\n  /*#__PURE__*/\n  //二荒山神社\n  React.createElement(\"div\", {\n    className: classes.mapLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 952,\n      columnNumber: 45\n    }\n  }, \"\\u76EE\\u7684\\u5730\\u306B\\u5230\\u7740\\u3057\\u305F\\u3089\\u4E0B\\u306E\\u30DE\\u30C3\\u30D7\\u30DA\\u30FC\\u30B8\\u3067\\u30C1\\u30A7\\u30C3\\u30AF\\u30A4\\u30F3\\u3057\\u3066\\u30B7\\u30CA\\u30EA\\u30AA\\u3092\\u9032\\u3081\\u307E\\u3057\\u3087\\u3046\") : currentSentenceId === \"308\" ?\n  /*#__PURE__*/\n  //二荒山神社\n  React.createElement(\"div\", {\n    className: classes.mapLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 957,\n      columnNumber: 49\n    }\n  }, \"\\u76EE\\u7684\\u5730\\u306B\\u5230\\u7740\\u3057\\u305F\\u3089\\u4E0B\\u306E\\u30DE\\u30C3\\u30D7\\u30DA\\u30FC\\u30B8\\u3067\\u30C1\\u30A7\\u30C3\\u30AF\\u30A4\\u30F3\\u3057\\u3066\\u30B7\\u30CA\\u30EA\\u30AA\\u3092\\u9032\\u3081\\u307E\\u3057\\u3087\\u3046\") : currentSentenceId === \"410\" ?\n  /*#__PURE__*/\n  //二荒山神社\n  React.createElement(\"div\", {\n    className: classes.mapLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 962,\n      columnNumber: 53\n    }\n  }, \"\\u76EE\\u7684\\u5730\\u306B\\u5230\\u7740\\u3057\\u305F\\u3089\\u4E0B\\u306E\\u30DE\\u30C3\\u30D7\\u30DA\\u30FC\\u30B8\\u3067\\u30C1\\u30A7\\u30C3\\u30AF\\u30A4\\u30F3\\u3057\\u3066\\u30B7\\u30CA\\u30EA\\u30AA\\u3092\\u9032\\u3081\\u307E\\u3057\\u3087\\u3046\") : currentSentenceId === \"464\" ?\n  /*#__PURE__*/\n  //クラッセ\n  React.createElement(\"div\", {\n    className: classes.mapLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 967,\n      columnNumber: 57\n    }\n  }, \"\\u76EE\\u7684\\u5730\\u306B\\u5230\\u7740\\u3057\\u305F\\u3089\\u4E0B\\u306E\\u30DE\\u30C3\\u30D7\\u30DA\\u30FC\\u30B8\\u3067\\u30C1\\u30A7\\u30C3\\u30AF\\u30A4\\u30F3\\u3057\\u3066\\u30B7\\u30CA\\u30EA\\u30AA\\u3092\\u9032\\u3081\\u307E\\u3057\\u3087\\u3046\") : currentSentenceId === \"546\" ?\n  /*#__PURE__*/\n  //SELECT\n  React.createElement(\"div\", {\n    className: classes.mapLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 971,\n      columnNumber: 61\n    }\n  }, \"\\u76EE\\u7684\\u5730\\u306B\\u5230\\u7740\\u3057\\u305F\\u3089\\u4E0B\\u306E\\u30DE\\u30C3\\u30D7\\u30DA\\u30FC\\u30B8\\u3067\\u30C1\\u30A7\\u30C3\\u30AF\\u30A4\\u30F3\\u3057\\u3066\\u30B7\\u30CA\\u30EA\\u30AA\\u3092\\u9032\\u3081\\u307E\\u3057\\u3087\\u3046\") : currentSentenceId === \"625\" ?\n  /*#__PURE__*/\n  //最上\n  React.createElement(\"div\", {\n    className: classes.mapLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 975,\n      columnNumber: 65\n    }\n  }, \"\\u76EE\\u7684\\u5730\\u306B\\u5230\\u7740\\u3057\\u305F\\u3089\\u4E0B\\u306E\\u30DE\\u30C3\\u30D7\\u30DA\\u30FC\\u30B8\\u3067\\u30C1\\u30A7\\u30C3\\u30AF\\u30A4\\u30F3\\u3057\\u3066\\u30B7\\u30CA\\u30EA\\u30AA\\u3092\\u9032\\u3081\\u307E\\u3057\\u3087\\u3046\") : currentSentenceId === \"672\" ?\n  /*#__PURE__*/\n  //森林公園\n  React.createElement(\"div\", {\n    className: classes.mapLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 979,\n      columnNumber: 69\n    }\n  }, \"\\u76EE\\u7684\\u5730\\u306B\\u5230\\u7740\\u3057\\u305F\\u3089\\u4E0B\\u306E\\u30DE\\u30C3\\u30D7\\u30DA\\u30FC\\u30B8\\u3067\\u30C1\\u30A7\\u30C3\\u30AF\\u30A4\\u30F3\\u3057\\u3066\\u30B7\\u30CA\\u30EA\\u30AA\\u3092\\u9032\\u3081\\u307E\\u3057\\u3087\\u3046\") : currentSentenceId === \"730\" ?\n  /*#__PURE__*/\n  //森林公園\n  React.createElement(\"div\", {\n    className: classes.mapLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 983,\n      columnNumber: 73\n    }\n  }, \"\\u76EE\\u7684\\u5730\\u306B\\u5230\\u7740\\u3057\\u305F\\u3089\\u4E0B\\u306E\\u30DE\\u30C3\\u30D7\\u30DA\\u30FC\\u30B8\\u3067\\u30C1\\u30A7\\u30C3\\u30AF\\u30A4\\u30F3\\u3057\\u3066\\u30B7\\u30CA\\u30EA\\u30AA\\u3092\\u9032\\u3081\\u307E\\u3057\\u3087\\u3046\") : /*#__PURE__*/React.createElement(\"img\", {\n    className: classes.buttonDesign,\n    src: Tap,\n    onClick: () => {\n      processScenario(\"\", \"\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 989,\n      columnNumber: 73\n    }\n  }) // <button className={classes.buttonDesign} onClick={() => { processScenario(\"\", \"\") }}>↑</button>\n  , /*#__PURE__*/React.createElement(BottomTab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 993,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default Chat;","map":{"version":3,"sources":["/Users/rei.kawasato/Desktop/travel/src/pages/chat.tsx"],"names":["React","useEffect","useState","useRef","makeStyles","Grid","Button","ListItemAvatar","Avatar","List","ListItem","useReactRouter","HeaderChat","userIcon","jsonDataMale","jsonDataFemale","InputBase","IconButton","ForwardIcon","UserIcon","require","TabChatOn","TabMapOff","Tap","headerHeight","ContentBodyHeight","selectButtonRadius","baseFontColor","textInputBgColor","useStyles","theme","chatDesignContainer","display","position","width","height","flexDirection","justifyContent","alignItems","paddingTop","paddingBottom","chatDesign","backgroundColor","overflow","padding","chatDesignInner","maxWidth","buttonDesign","bottom","borderRadius","color","fontFamily","selectButton","minHeight","justifyItems","textAlign","boxShadow","border","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","narrator","marginTop","yukaWrapper","minWidth","yuka","palette","background","paper","borderColor","yuka_label","fontSize","marginBottom","marginLeft","syujiinkoWrapper","syujiinko","avatar","square","bottomTab","bottomChat","flex","bottomMap","mapLabel","fontWeight","letterSpacing","sendButtonContainer","sendButtonWrapper","paddingLeft","input","spacing","iconButton","currentSentenceIdInit","genderInit","spotIdInit","spotNameInit","scenarioListInit","sentenceId","nextSentenceId","personName","sentence","plane","button","buttonLabel","reply","isButtonInit","isReplyInit","isBtnLabelInit_1","isBtnLabelInit_2","isBtnScenarioIdInit_1","isBtnScenarioIdInit_2","BottomTab","history","classes","push","btn1","Chat","jsonData","setJsonData","scenarioList","setScenarioList","scenarioLog","setScenarioLog","currentSentenceId","setCurrentSentenceId","isButton","setIsButton","isReply","setIsReply","btnLabel_1","setBtnLabel_1","btnLabel_2","setBtnLabel_2","btnScenarioId_1","setBtnScenarioId_1","btnScenarioId_2","setBtnScenarioId_2","btnText","setBtnText","gender","setGender","setReply","isFirstRender","ref","jwt","JSON","parse","localStorage","getItem","Authorization","Accesstoken","scenarioHistString","console","log","scenarioHist","length","slice","scrollToBottomOfList","fetch","method","headers","then","res","json","data","scenarioHistory","setItem","stringify","useCallback","current","scrollIntoView","behavior","block","selectBtnText","scenarioId","planeMessage","body","scenario","tmpArray","handleReplyChange","e","target","value","replyText","id","name","birth","processScenario","btnId","btnLabel","Item","undefined","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAAqBC,UAArB,EAA4CC,IAA5C,EAAuDC,MAAvD,EAA+DC,cAA/D,EAA+EC,MAA/E,EAAuFC,IAAvF,QAAmG,mBAAnG;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,cAAP,MAA2B,kBAA3B,C,CACA;;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AAMA,OAAOC,QAAP,MAAqB,2BAArB;AAEA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAOC,cAAP,MAA2B,oBAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;;AAEA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,oBAAD,CAAxB;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,yBAAD,CAAzB;;AACA,MAAME,SAAS,GAAGF,OAAO,CAAC,yBAAD,CAAzB;;AACA,MAAMG,GAAG,GAAGH,OAAO,CAAC,mBAAD,CAAnB;;AAGA,MAAMI,YAAY,GAAG,MAArB;AACA,MAAMC,iBAAiB,GAAI,gBAAeD,YAAa,GAAvD;AACA,MAAME,kBAAkB,GAAG,MAA3B;AACA,MAAMC,aAAa,GAAG,SAAtB;AACA,MAAMC,gBAAgB,GAAG,SAAzB;AAEA,MAAMC,SAAS,GAAGzB,UAAU,CAAE0B,KAAD,KAAY;AACrCC,EAAAA,mBAAmB,EAAE;AACjBC,IAAAA,OAAO,EAAE,MADQ;AAEjBC,IAAAA,QAAQ,EAAE,UAFO;AAGjBC,IAAAA,KAAK,EAAE,MAHU;AAIjB;AACA;AACAC,IAAAA,MAAM,EAAEV,iBANS;AAOjBW,IAAAA,aAAa,EAAE,QAPE;AAQjBC,IAAAA,cAAc,EAAE,YARC;AASjBC,IAAAA,UAAU,EAAE,QATK;AAUjBC,IAAAA,UAAU,EAAEf,YAVK;AAWjBgB,IAAAA,aAAa,EAAE,OAXE,CAYjB;AACA;;AAbiB,GADgB;AAgBrCC,EAAAA,UAAU,EAAE;AACRT,IAAAA,OAAO,EAAE,MADD;AAERK,IAAAA,cAAc,EAAE,QAFR;AAGRJ,IAAAA,QAAQ,EAAE,UAHF;AAIRC,IAAAA,KAAK,EAAE,MAJC;AAKRQ,IAAAA,eAAe,EAAE,SALT;AAMR;AACA;AACAF,IAAAA,aAAa,EAAE,OARP;AASRG,IAAAA,QAAQ,EAAE,MATF;AAUR,0BAAsB;AAClBX,MAAAA,OAAO,EAAE,MADS;AAElBK,MAAAA,cAAc,EAAE,QAFE;AAGlBO,MAAAA,OAAO,EAAE;AAHS;AAVd,GAhByB;AAgCrCC,EAAAA,eAAe,EAAE;AACbZ,IAAAA,QAAQ,EAAE,UADG;AAEbC,IAAAA,KAAK,EAAE,MAFM;AAGbY,IAAAA,QAAQ,EAAE,OAHG;AAIbX,IAAAA,MAAM,EAAEV;AAJK,GAhCoB;AAsCrCsB,EAAAA,YAAY,EAAE;AACVC,IAAAA,MAAM,EAAE,KADE;AAEVf,IAAAA,QAAQ,EAAE,OAFA;AAGVgB,IAAAA,YAAY,EAAE,KAHJ;AAIV;AACAC,IAAAA,KAAK,EAAE,OALG;AAMV;AACA;AACAC,IAAAA,UAAU,EAAE,MARF,CASV;;AATU,GAtCuB;AAiDrCC,EAAAA,YAAY,EAAE;AACVlB,IAAAA,KAAK,EAAE,MADG;AAEVmB,IAAAA,SAAS,EAAE,KAFD;AAGV;AACAC,IAAAA,YAAY,EAAE,QAJJ;AAKVC,IAAAA,SAAS,EAAE,QALD;AAMVX,IAAAA,OAAO,EAAE,UANC;AAOVX,IAAAA,QAAQ,EAAE,OAPA;AAQVe,IAAAA,MAAM,EAAE,KARE;AASVN,IAAAA,eAAe,EAAE,SATP;AAUVc,IAAAA,SAAS,EAAE,uCAVD;AAWV,0BAAsB;AAClBN,MAAAA,KAAK,EAAEvB;AADW,KAXZ;AAcV,qCAAiC;AAC7BO,MAAAA,KAAK,EAAE,MADsB;AAE7BY,MAAAA,QAAQ,EAAE,OAFmB;AAG7BX,MAAAA,MAAM,EAAE,MAHqB;AAI7BkB,MAAAA,SAAS,EAAE7B,YAJkB;AAK7BiC,MAAAA,MAAM,EAAE,mBALqB;AAM7Bf,MAAAA,eAAe,EAAE;AANY,KAdvB;AAsBV,4CAAwC;AACpC,kBAAY;AACRgB,QAAAA,mBAAmB,EAAEhC,kBADb;AAERiC,QAAAA,oBAAoB,EAAEjC;AAFd;AADwB,KAtB9B;AA4BV,4CAAwC;AACpC,kBAAY;AACRkC,QAAAA,sBAAsB,EAAElC,kBADhB;AAERmC,QAAAA,uBAAuB,EAAEnC;AAFjB;AADwB;AA5B9B,GAjDuB;AAoFrCoC,EAAAA,QAAQ,EAAE;AACNX,IAAAA,UAAU,EAAE,MADN;AAEN;AACAnB,IAAAA,OAAO,EAAE,MAHH;AAINM,IAAAA,UAAU,EAAE,YAJN;AAImB;AACzBiB,IAAAA,SAAS,EAAE,MALL;AAKY;AAClBb,IAAAA,eAAe,EAAE,SANX;AAONQ,IAAAA,KAAK,EAAE,SAPD;AAQND,IAAAA,YAAY,EAAE,EARR;AASNf,IAAAA,KAAK,EAAE,MATD;AAUNY,IAAAA,QAAQ,EAAE,OAVJ;AAWNiB,IAAAA,SAAS,EAAE,EAXL;AAYN1B,IAAAA,cAAc,EAAE,YAZV;AAaN;AACAO,IAAAA,OAAO,EAAE,MAdH,CAeN;;AAfM,GApF2B;AAqGrCoB,EAAAA,WAAW,EAAE;AACThC,IAAAA,OAAO,EAAE,MADA;AAETI,IAAAA,aAAa,EAAE,QAFN;AAGTC,IAAAA,cAAc,EAAE,YAHP;AAITC,IAAAA,UAAU,EAAE,YAJH;AAKT,iCAA6B;AACzB2B,MAAAA,QAAQ,EAAE;AADe,KALpB;AAQT,yBAAqB;AACjB/B,MAAAA,KAAK,EAAE,MADU;AAEjBC,MAAAA,MAAM,EAAE;AAFS;AARZ,GArGwB;AAkHrC+B,EAAAA,IAAI,EAAE;AACFf,IAAAA,UAAU,EAAE,MADV;AAEFjB,IAAAA,KAAK,EAAE,MAFL;AAGFY,IAAAA,QAAQ,EAAE,MAHR;AAIFJ,IAAAA,eAAe,EAAEZ,KAAK,CAACqC,OAAN,CAAcC,UAAd,CAAyBC,KAJxC;AAKFpB,IAAAA,YAAY,EAAE,IALZ;AAMFqB,IAAAA,WAAW,EAAE,MANX;AAOF1B,IAAAA,OAAO,EAAE;AAPP,GAlH+B;AA2HrC2B,EAAAA,UAAU,EAAE;AACRC,IAAAA,QAAQ,EAAE,EADF;AAERC,IAAAA,YAAY,EAAE,IAFN;AAGRC,IAAAA,UAAU,EAAE,KAHJ;AAIRX,IAAAA,SAAS,EAAE;AAJH,GA3HyB;AAiIrCY,EAAAA,gBAAgB,EAAE;AACd3C,IAAAA,OAAO,EAAE,MADK;AAEdI,IAAAA,aAAa,EAAE,QAFD;AAGdC,IAAAA,cAAc,EAAE,YAHF;AAIdC,IAAAA,UAAU,EAAE;AAJE,GAjImB;AAuIrCsC,EAAAA,SAAS,EAAE;AACPzB,IAAAA,UAAU,EAAE,MADL;AAEPM,IAAAA,MAAM,EAAE,mBAFD;AAGPP,IAAAA,KAAK,EAAE,SAHA;AAIPD,IAAAA,YAAY,EAAE,IAJP;AAKPP,IAAAA,eAAe,EAAE,SALV;AAMPR,IAAAA,KAAK,EAAE,MANA;AAOPY,IAAAA,QAAQ,EAAE,MAPH;AAQPF,IAAAA,OAAO,EAAE;AARF,GAvI0B;AAiJrCiC,EAAAA,MAAM,EAAE;AACJ;AACAH,IAAAA,UAAU,EAAE;AAFR,GAjJ6B;AAqJrCI,EAAAA,MAAM,EAAE;AACJ5C,IAAAA,KAAK,EAAE,MADH;AAEJC,IAAAA,MAAM,EAAE,OAFJ;AAGJ;AACAO,IAAAA,eAAe,EAAE;AAJb,GArJ6B;AA2JrCqC,EAAAA,SAAS,EAAE;AACP9C,IAAAA,QAAQ,EAAE,OADH;AAEPe,IAAAA,MAAM,EAAE,GAFD;AAGPb,IAAAA,MAAM,EAAE,KAHD;AAIPD,IAAAA,KAAK,EAAE,MAJA;AAKPQ,IAAAA,eAAe,EAAE,SALV;AAMPV,IAAAA,OAAO,EAAE,MANF;AAOPI,IAAAA,aAAa,EAAE,KAPR;AAQPmB,IAAAA,SAAS,EAAE,QARJ;AASPlB,IAAAA,cAAc,EAAE,QATT;AAUPC,IAAAA,UAAU,EAAE;AAVL,GA3J0B;AAuKrC0C,EAAAA,UAAU,EAAE;AACR;AACA;AACAC,IAAAA,IAAI,EAAE;AAHE,GAvKyB;AA4KrCC,EAAAA,SAAS,EAAE;AACP;AACA;AACAD,IAAAA,IAAI,EAAE;AAHC,GA5K0B;AAiLrCE,EAAAA,QAAQ,EAAE;AACNjC,IAAAA,KAAK,EAAEvB,aADD;AAENyD,IAAAA,UAAU,EAAE,MAFN;AAGNZ,IAAAA,QAAQ,EAAE,MAHJ;AAINa,IAAAA,aAAa,EAAE,SAJT;AAKN9B,IAAAA,SAAS,EAAE,QALL;AAMNP,IAAAA,MAAM,EAAE,KANF;AAONf,IAAAA,QAAQ,EAAE,OAPJ;AAQNgB,IAAAA,YAAY,EAAE,KARR;AASN;AACA;AACA;AACAE,IAAAA,UAAU,EAAE,MAZN,CAaN;;AAbM,GAjL2B;AAgMrCmC,EAAAA,mBAAmB,EAAE;AACjBtD,IAAAA,OAAO,EAAE,MADQ;AAEjBK,IAAAA,cAAc,EAAE,QAFC;AAGjBC,IAAAA,UAAU,EAAE,QAHK;AAIjBJ,IAAAA,KAAK,EAAE,MAJU;AAKjBU,IAAAA,OAAO,EAAE;AALQ,GAhMgB;AAuMrC2C,EAAAA,iBAAiB,EAAE;AACfC,IAAAA,WAAW,EAAE,QADE;AAEfxD,IAAAA,OAAO,EAAE,MAFM;AAGfM,IAAAA,UAAU,EAAE,QAHG;AAIfJ,IAAAA,KAAK,EAAE,MAJQ;AAKfY,IAAAA,QAAQ,EAAE,OALK;AAMfJ,IAAAA,eAAe,EAAEd,gBANF;AAOf6B,IAAAA,MAAM,EAAE,mBAPO;AAQfR,IAAAA,YAAY,EAAEvB;AARC,GAvMkB;AAiNrC+D,EAAAA,KAAK,EAAE;AACHf,IAAAA,UAAU,EAAE5C,KAAK,CAAC4D,OAAN,CAAc,CAAd,CADT;AAEHT,IAAAA,IAAI,EAAE;AAFH,GAjN8B;AAqNrCU,EAAAA,UAAU,EAAE;AACR/C,IAAAA,OAAO,EAAE;AADD;AArNyB,CAAZ,CAAD,CAA5B;AA+OA,MAAMgD,qBAA6B,GAAG,GAAtC;AACA,MAAMC,UAAkB,GAAG,GAA3B;AACA,MAAMC,UAAkB,GAAG,GAA3B;AACA,MAAMC,YAAoB,GAAG,OAA7B;AACA,MAAMC,gBAAgB,GAAG,CACrB;AACIC,EAAAA,UAAU,EAAE,GADhB;AAEIC,EAAAA,cAAc,EAAE,GAFpB;AAGIC,EAAAA,UAAU,EAAE,IAHhB;AAIIC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,KAAK,EAAE,SADD;AAENC,IAAAA,MAAM,EAAE,CACJ;AACIC,MAAAA,WAAW,EAAE,YADjB;AAEIL,MAAAA,cAAc,EAAE;AAFpB,KADI,EAKJ;AACIK,MAAAA,WAAW,EAAE,YADjB;AAEIL,MAAAA,cAAc,EAAE;AAFpB,KALI;AAFF,GAJd;AAiBIM,EAAAA,KAAK,EAAE;AAjBX,CADqB,CAAzB;AAsBA,MAAMC,YAAY,GAAG,KAArB;AACA,MAAMC,WAAW,GAAG,KAApB;AACA,MAAMC,gBAAgB,GAAG,EAAzB;AACA,MAAMC,gBAAgB,GAAG,EAAzB;AACA,MAAMC,qBAAqB,GAAG,EAA9B;AACA,MAAMC,qBAAqB,GAAG,EAA9B;;AAEA,MAAMC,SAAmB,GAAG,MAAM;AAC9B,QAAM;AAAEC,IAAAA;AAAF,MAAcrG,cAAc,EAAlC;AACA,QAAMsG,OAAO,GAAGpF,SAAS,EAAzB;AACA,sBAEI;AAAK,IAAA,SAAS,EAAEoF,OAAO,CAAClC,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAEkC,OAAO,CAACjC,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAK,IAAA,GAAG,EAAE3D,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAHJ,CADJ,eAQI;AAAK,IAAA,SAAS,EAAE4F,OAAO,CAAC/B,SAAxB;AAAmC,IAAA,OAAO,EAAE,MAAM8B,OAAO,CAACE,IAAR,CAAa,MAAb,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAK,IAAA,GAAG,EAAE5F,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHJ,CARJ,CAFJ;AAmBH,CAtBD;;AAwBA,IAAI6F,IAAY,GAAG,EAAnB;;AACA,MAAMC,IAAc,GAAG,MAAM;AAEzB,QAAM;AAAEJ,IAAAA;AAAF,MAAcrG,cAAc,EAAlC;AACA,QAAMsG,OAAO,GAAGpF,SAAS,EAAzB;AACA,QAAM,CAACwF,QAAD,EAAWC,WAAX,IAA0BpH,QAAQ,EAAxC;AACA,QAAM,CAACqH,YAAD,EAAeC,eAAf,IAAkCtH,QAAQ,EAAhD;AACA,QAAM,CAACuH,WAAD,EAAcC,cAAd,IAAgCxH,QAAQ,EAA9C;AACA,QAAM,CAACyH,iBAAD,EAAoBC,oBAApB,IAA4C1H,QAAQ,CAAC0F,qBAAD,CAA1D;AACA,QAAM,CAACiC,QAAD,EAAWC,WAAX,IAA0B5H,QAAQ,CAACuG,YAAD,CAAxC;AACA,QAAM,CAACsB,OAAD,EAAUC,UAAV,IAAwB9H,QAAQ,CAACwG,WAAD,CAAtC;AACA,QAAM,CAACuB,UAAD,EAAaC,aAAb,IAA8BhI,QAAQ,CAACyG,gBAAD,CAA5C;AACA,QAAM,CAACwB,UAAD,EAAaC,aAAb,IAA8BlI,QAAQ,CAAC0G,gBAAD,CAA5C;AACA,QAAM,CAACyB,eAAD,EAAkBC,kBAAlB,IAAwCpI,QAAQ,CAAC2G,qBAAD,CAAtD;AACA,QAAM,CAAC0B,eAAD,EAAkBC,kBAAlB,IAAwCtI,QAAQ,CAAC4G,qBAAD,CAAtD;AACA,QAAM,CAAC2B,OAAD,EAAUC,UAAV,IAAwBxI,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACyI,MAAD,EAASC,SAAT,IAAsB1I,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACsG,KAAD,EAAQqC,QAAR,IAAoB3I,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM4I,aAAa,GAAG3I,MAAM,CAAC,KAAD,CAA5B;AAGA,QAAM4I,GAAG,GAAG5I,MAAM,CAAM,IAAN,CAAlB;AAEAF,EAAAA,SAAS,CAAC,MAAM;AAEZ,UAAM+I,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAX,CAAZ;AACA,UAAM;AAAEC,MAAAA,aAAF;AAAiBC,MAAAA;AAAjB,QAAiCN,GAAvC;AACA,UAAMO,kBAAiC,GAAGJ,YAAY,CAACC,OAAb,CAAqB,cAArB,CAA1C,CAJY,CAKZ;AACA;;AAEAI,IAAAA,OAAO,CAACC,GAAR,CAAYF,kBAAZ,EARY,CAYZ;;AACA,QAAIA,kBAAJ,EAAwB;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,YAAMC,YAAkF,GAAGT,IAAI,CAACC,KAAL,CAAWK,kBAAX,CAA3F;;AACA,UAAIG,YAAY,CAACC,MAAb,GAAsB,CAA1B,EAA6B;AAEzBjC,QAAAA,cAAc,CAACgC,YAAD,CAAd;AACA9B,QAAAA,oBAAoB,CAAC8B,YAAY,CAACE,KAAb,CAAmB,CAAC,CAApB,EAAuB,CAAvB,EAA0B1D,cAA3B,CAApB;AACA2D,QAAAA,oBAAoB;AACvB;AACJ,KATD,MASO;AACHL,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EADG,CAGH;;AAEAK,MAAAA,KAAK,CAAC,kDAAD,EAAqD;AACtDC,QAAAA,MAAM,EAAE,KAD8C;AAEtDC,QAAAA,OAAO,EAAE;AACL,0BAAgB,kBADX;AAEL,2BAAiBX,aAFZ;AAGL,yBAAeC;AAHV;AAF6C,OAArD,CAAL,CAOGW,IAPH,CAOQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPf,EAO2BF,IAP3B,CAOgCG,IAAI,IAAI;AAIpC,YAAIA,IAAI,CAACC,eAAL,CAAqBV,MAArB,IAA+B,CAAnC,EAAsC;AAElCR,UAAAA,YAAY,CAACmB,OAAb,CAAqB,cAArB,EAAqCrB,IAAI,CAACsB,SAAL,CAAe,EAAf,CAArC;AACA;AACH;;AACDpB,QAAAA,YAAY,CAACmB,OAAb,CAAqB,cAArB,EAAqCrB,IAAI,CAACsB,SAAL,CAAeH,IAAI,CAACC,eAApB,CAArC,EAToC,CAUpC;;AACAb,QAAAA,OAAO,CAACC,GAAR,CAAYW,IAAI,CAACC,eAAjB,EAXoC,CAapC;AACA;;AACAb,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBW,IAAI,CAACC,eAAxB;AACA3C,QAAAA,cAAc,CAAC0C,IAAI,CAACC,eAAN,CAAd;AACAzC,QAAAA,oBAAoB,CAACwC,IAAI,CAACC,eAAL,CAAqBT,KAArB,CAA2B,CAAC,CAA5B,EAA+B,CAA/B,EAAkC1D,cAAnC,CAApB;AACA2D,QAAAA,oBAAoB;AAGvB,OA5BD;AA6BH;AACJ,GAzDQ,EAyDN,EAzDM,CAAT;AA2DA5J,EAAAA,SAAS,CAAC,MAAM;AACZ4J,IAAAA,oBAAoB;AACvB,GAFQ,EAEN,CAACtC,YAAD,CAFM,CAAT;AAKAtH,EAAAA,SAAS,CAAC,MAAM;AACZ4J,IAAAA,oBAAoB;AACvB,GAFQ,EAEN,CAACpC,WAAD,CAFM,CAAT;AAKA,QAAMoC,oBAAoB,GAAG7J,KAAK,CAACwK,WAAN,CAAkB,MAAM;AACjDzB,IAAAA,GAAG,CAAE0B,OAAL,CAAcC,cAAd,CAA6B;AACzBC,MAAAA,QAAQ,EAAE,QADe;AAEzBC,MAAAA,KAAK,EAAE;AAFkB,KAA7B;AAIH,GAL4B,EAK1B,CAAC7B,GAAD,CAL0B,CAA7B;;AAOA,QAAM8B,aAAa,GAAG,CAACC,UAAD,EAAqBC,YAArB,KAA8C;AAChExD,IAAAA,YAAY,IAAIC,eAAe,CAAC,CAAC,GAAGD,YAAJ,EAAkB;AAC9CtB,MAAAA,UAAU,EAAE,EADkC;AAE9CC,MAAAA,cAAc,EAAE4E,UAF8B;AAG9C3E,MAAAA,UAAU,EAAE,KAHkC;AAI9CC,MAAAA,QAAQ,EAAE;AACNC,QAAAA,KAAK,EAAE0E,YADD;AAENzE,QAAAA,MAAM,EAAE,CACJ;AACIC,UAAAA,WAAW,EAAE,EADjB;AAEIL,UAAAA,cAAc,EAAE;AAFpB,SADI,EAKJ;AACIK,UAAAA,WAAW,EAAE,EADjB;AAEIL,UAAAA,cAAc,EAAE;AAFpB,SALI;AAFF,OAJoC;AAiB9CM,MAAAA,KAAK,EAAE;AAjBuC,KAAlB,CAAD,CAA/B;AAmBAoB,IAAAA,oBAAoB,CAACkD,UAAD,CAApB;AACA,UAAM9B,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAX,CAAZ;AACA,UAAM;AAAEC,MAAAA,aAAF;AAAiBC,MAAAA;AAAjB,QAAiCN,GAAvC;AACAc,IAAAA,KAAK,CAAC,kDAAD,EAAqD;AACtDC,MAAAA,MAAM,EAAE,MAD8C;AAEtDC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,yBAAiBX,aAFZ;AAGL,uBAAeC;AAHV,OAF6C;AAOtD;AACA0B,MAAAA,IAAI,EAAE/B,IAAI,CAACsB,SAAL,CAAe;AAAEU,QAAAA,QAAQ,EAAE;AAAE/E,UAAAA,cAAc,EAAE4E,UAAlB;AAA8B3E,UAAAA,UAAU,EAAE,KAA1C;AAAiDE,UAAAA,KAAK,EAAE0E;AAAxD;AAAZ,OAAf;AARgD,KAArD,CAAL;AAUA,UAAMG,QAAQ,GAAGjC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,CAAjB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyByB,QAAzB;AACAA,IAAAA,QAAQ,CAAChE,IAAT,CAAc;AAAEhB,MAAAA,cAAc,EAAE4E,UAAlB;AAA8B3E,MAAAA,UAAU,EAAE,KAA1C;AAAiDE,MAAAA,KAAK,EAAE0E;AAAxD,KAAd,EAnCgE,CAoChE;;AACA5B,IAAAA,YAAY,CAACmB,OAAb,CAAqB,cAArB,EAAqCrB,IAAI,CAACsB,SAAL,CAAeW,QAAf,CAArC,EArCgE,CAuChE;AACA;;AACA,QAAIvD,iBAAiB,KAAK,GAA1B,EAA+B;AAC3BmC,MAAAA,KAAK,CAAC,0CAAD,EAA6C;AAC9CC,QAAAA,MAAM,EAAE,MADsC;AAE9CC,QAAAA,OAAO,EAAE;AACL,0BAAgB,kBADX;AAEL,2BAAiBX,aAFZ;AAGL,yBAAeC;AAHV,SAFqC;AAO9C0B,QAAAA,IAAI,EAAE/B,IAAI,CAACsB,SAAL,CAAe;AAAE5B,UAAAA,MAAM,EAAEoC;AAAV,SAAf;AAPwC,OAA7C,CAAL;AASH;AACJ,GApDD;;AAuDA,QAAMI,iBAAiB,GAAIC,CAAD,IAA4C;AAClEvC,IAAAA,QAAQ,CAACuC,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACH,GAFD;;AAIA,QAAMC,SAAS,GAAG,CAACC,EAAD,EAAaT,YAAb,KAAsC;AAEpDxD,IAAAA,YAAY,IAAIC,eAAe,CAAC,CAAC,GAAGD,YAAJ,EAAkB;AAC9CtB,MAAAA,UAAU,EAAE,EADkC;AAE9CC,MAAAA,cAAc,EAAE,EAF8B;AAG9CC,MAAAA,UAAU,EAAE,KAHkC;AAI9CC,MAAAA,QAAQ,EAAE;AACNC,QAAAA,KAAK,EAAE0E,YADD;AAENzE,QAAAA,MAAM,EAAE,CACJ;AACIC,UAAAA,WAAW,EAAE,EADjB;AAEIL,UAAAA,cAAc,EAAE;AAFpB,SADI,EAKJ;AACIK,UAAAA,WAAW,EAAE,EADjB;AAEIL,UAAAA,cAAc,EAAE;AAFpB,SALI;AAFF,OAJoC;AAiB9CM,MAAAA,KAAK,EAAE;AAjBuC,KAAlB,CAAD,CAA/B;AAmBAoB,IAAAA,oBAAoB,CAAC4D,EAAD,CAApB;AACAxD,IAAAA,UAAU,CAAC,KAAD,CAAV;AACA,UAAMgB,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAX,CAAZ;AACA,UAAM;AAAEC,MAAAA,aAAF;AAAiBC,MAAAA;AAAjB,QAAiCN,GAAvC;AACAc,IAAAA,KAAK,CAAC,kDAAD,EAAqD;AACtDC,MAAAA,MAAM,EAAE,MAD8C;AAEtDC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,yBAAiBX,aAFZ;AAGL,uBAAeC;AAHV,OAF6C;AAOtD;AACA0B,MAAAA,IAAI,EAAE/B,IAAI,CAACsB,SAAL,CAAe;AAAEU,QAAAA,QAAQ,EAAE;AAAE/E,UAAAA,cAAc,EAAEsF,EAAlB;AAAsBrF,UAAAA,UAAU,EAAE,KAAlC;AAAyCE,UAAAA,KAAK,EAAE0E;AAAhD;AAAZ,OAAf;AARgD,KAArD,CAAL;AAUA,UAAMG,QAAQ,GAAGjC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,CAAjB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyByB,QAAzB,EApCoD,CAqCpD;AACA;;AACA/B,IAAAA,YAAY,CAACmB,OAAb,CAAqB,cAArB,EAAqCrB,IAAI,CAACsB,SAAL,CAAeW,QAAf,CAArC,EAvCoD,CAwCpD;AACA;AAEA;;AACA,QAAIvD,iBAAiB,KAAK,GAA1B,EAA+B;AAC3BmC,MAAAA,KAAK,CAAC,0CAAD,EAA6C;AAC9CC,QAAAA,MAAM,EAAE,MADsC;AAE9CC,QAAAA,OAAO,EAAE;AACL,0BAAgB,kBADX;AAEL,2BAAiBX,aAFZ;AAGL,yBAAeC;AAHV,SAFqC;AAO9C0B,QAAAA,IAAI,EAAE/B,IAAI,CAACsB,SAAL,CAAe;AAAEkB,UAAAA,IAAI,EAAEV;AAAR,SAAf;AAPwC,OAA7C,CAAL;AASH,KAtDmD,CAuDpD;;;AACA,QAAIpD,iBAAiB,KAAK,GAA1B,EAA+B;AAC3BmC,MAAAA,KAAK,CAAC,0CAAD,EAA6C;AAC9CC,QAAAA,MAAM,EAAE,MADsC;AAE9CC,QAAAA,OAAO,EAAE;AACL,0BAAgB,kBADX;AAEL,2BAAiBX,aAFZ;AAGL,yBAAeC;AAHV,SAFqC;AAO9C0B,QAAAA,IAAI,EAAE/B,IAAI,CAACsB,SAAL,CAAe;AAAEmB,UAAAA,KAAK,EAAEX;AAAT,SAAf;AAPwC,OAA7C,CAAL;AASH;AACJ,GAnED;;AAoEA,QAAMY,eAAe,GAAG,OAAOC,KAAP,EAAsBC,QAAtB,KAA2C;AAC/D;AACA;AACA,UAAM7C,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAX,CAAZ;AACA,UAAM;AAAEC,MAAAA,aAAF;AAAiBC,MAAAA;AAAjB,QAAiCN,GAAvC;AACAc,IAAAA,KAAK,CAAC,0CAAD,EAA6C;AAC9CC,MAAAA,MAAM,EAAE,KADsC;AAE9CC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,yBAAiBX,aAFZ;AAGL,uBAAeC;AAHV;AAFqC,KAA7C,CAAL,CAOGW,IAPH,CAOQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPf,EAO2BF,IAP3B,CAOgCG,IAAI,IAAI;AAIpC,UAAIA,IAAI,CAAC0B,IAAL,CAAUnD,MAAV,KAAqB,EAAzB,EAA6B;AACzBa,QAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AAEA;AACH;;AACD,UAAIW,IAAI,CAAC0B,IAAL,CAAUnD,MAAV,KAAqBoD,SAAzB,EAAoC;AAEhCvC,QAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACA;AACH,OAbmC,CAcpC;AAEA;AACA;;;AACAb,MAAAA,SAAS,CAACwB,IAAI,CAAC0B,IAAL,CAAUnD,MAAX,CAAT;AAEH,KA3BD;AA4BAa,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBd,MAAtB;AACA,QAAI,CAACQ,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAL,EAA2C;AAE3CtB,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAE,IAAAA,UAAU,CAAC,KAAD,CAAV;;AACA,QAAI4D,KAAK,IAAI,EAAb,EAAiB;AACb;AACH,KAFD,MAEO;AAEH,UAAIjD,MAAM,KAAK,OAAf,EAAwB;AACpBa,QAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA3I,QAAAA,YAAY,CAACkL,GAAb,CAAkBf,QAAD,IAAmB;AAChC;AACA,cAAIA,QAAQ,CAAChF,UAAT,KAAwB0B,iBAA5B,EAA+C;AAAE;AAC7C;AACAJ,YAAAA,YAAY,GAAGC,eAAe,CAAC,CAAC,GAAGD,YAAJ,EAC/B,EAAE,GAAG0D;AAAL,aAD+B,CAAD,CAAlB,GAGR;AACAzD,YAAAA,eAAe,CAAC,CACZ,EAAE,GAAGyD;AAAL,aADY,CAAD,CAJnB;AAQAzB,YAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCwB,QAAQ,CAAC/E,cAAhD;AACAsD,YAAAA,OAAO,CAACC,GAAR,CAAY,yCAAZ,EAAuDwB,QAAQ,CAAC7E,QAAT,CAAkBE,MAAlB,CAAyB,CAAzB,EAA4BC,WAAnF,EAX2C,CAY3C;;AACA,gBAAI0E,QAAQ,CAAC/E,cAAT,IAA2B,EAA/B,EAAmC;AAC/B0B,cAAAA,oBAAoB,CAACqD,QAAQ,CAAC/E,cAAV,CAApB;AACH,aAf0C,CAgB3C;;;AACA,gBAAI+E,QAAQ,CAAC7E,QAAT,CAAkBE,MAAlB,CAAyB,CAAzB,EAA4BC,WAA5B,IAA2C,EAA/C,EAAmD;AAC/CuB,cAAAA,WAAW,CAAC,IAAD,CAAX;AACAQ,cAAAA,kBAAkB,CAAC2C,QAAQ,CAAC7E,QAAT,CAAkBE,MAAlB,CAAyB,CAAzB,EAA4BJ,cAA7B,CAAlB;AACAsC,cAAAA,kBAAkB,CAACyC,QAAQ,CAAC7E,QAAT,CAAkBE,MAAlB,CAAyB,CAAzB,EAA4BJ,cAA7B,CAAlB;AACAgC,cAAAA,aAAa,CAAC+C,QAAQ,CAAC7E,QAAT,CAAkBE,MAAlB,CAAyB,CAAzB,EAA4BC,WAA7B,CAAb;AACA6B,cAAAA,aAAa,CAAC6C,QAAQ,CAAC7E,QAAT,CAAkBE,MAAlB,CAAyB,CAAzB,EAA4BC,WAA7B,CAAb;AACH,aAvB0C,CAwB3C;;;AACA,gBAAI0E,QAAQ,CAACzE,KAAT,KAAmB,MAAvB,EAA+B;AAC3BwB,cAAAA,UAAU,CAAC,IAAD,CAAV;AACH;;AACD,kBAAMgB,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAX,CAAZ;AACA,kBAAM;AAAEC,cAAAA,aAAF;AAAiBC,cAAAA;AAAjB,gBAAiCN,GAAvC,CA7B2C,CA+B3C;;AACAc,YAAAA,KAAK,CAAC,kDAAD,EAAqD;AACtDC,cAAAA,MAAM,EAAE,MAD8C;AAEtDC,cAAAA,OAAO,EAAE;AACL,gCAAgB,kBADX;AAEL,iCAAiBX,aAFZ;AAGL,+BAAeC;AAHV,eAF6C;AAOtD0B,cAAAA,IAAI,EAAE/B,IAAI,CAACsB,SAAL,CAAe;AAAEU,gBAAAA,QAAQ,EAAE;AAAE/E,kBAAAA,cAAc,EAAEyB,iBAAlB;AAAqCxB,kBAAAA,UAAU,EAAE8E,QAAQ,CAAC9E,UAA1D;AAAsEE,kBAAAA,KAAK,EAAE4E,QAAQ,CAAC7E,QAAT,CAAkBC;AAA/F;AAAZ,eAAf;AAPgD,aAArD,CAAL;AASA,kBAAM6E,QAAQ,GAAGjC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,CAAjB;AACAI,YAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyByB,QAAzB;AACAA,YAAAA,QAAQ,CAAChE,IAAT,CAAc;AAAEhB,cAAAA,cAAc,EAAE+E,QAAQ,CAAC/E,cAA3B;AAA2CC,cAAAA,UAAU,EAAE8E,QAAQ,CAAC9E,UAAhE;AAA4EE,cAAAA,KAAK,EAAE4E,QAAQ,CAAC7E,QAAT,CAAkBC;AAArG,aAAd;AACA8C,YAAAA,YAAY,CAACmB,OAAb,CAAqB,cAArB,EAAqCrB,IAAI,CAACsB,SAAL,CAAeW,QAAf,CAArC;AACH;AACJ,SAhDD;AAkDH;;AACD,UAAIvC,MAAM,KAAK,OAAf,EAAwB;AACpBa,QAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA1I,QAAAA,cAAc,CAACiL,GAAf,CAAoBf,QAAD,IAAmB;AAClC;AACA,cAAIA,QAAQ,CAAChF,UAAT,KAAwB0B,iBAA5B,EAA+C;AAAE;AAC7C;AACAJ,YAAAA,YAAY,GAAGC,eAAe,CAAC,CAAC,GAAGD,YAAJ,EAC/B,EAAE,GAAG0D;AAAL,aAD+B,CAAD,CAAlB,GAGR;AACAzD,YAAAA,eAAe,CAAC,CACZ,EAAE,GAAGyD;AAAL,aADY,CAAD,CAJnB;AAQAzB,YAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCwB,QAAQ,CAAC/E,cAAhD;AACAsD,YAAAA,OAAO,CAACC,GAAR,CAAY,yCAAZ,EAAuDwB,QAAQ,CAAC7E,QAAT,CAAkBE,MAAlB,CAAyB,CAAzB,EAA4BC,WAAnF,EAX2C,CAY3C;;AACA,gBAAI0E,QAAQ,CAAC/E,cAAT,IAA2B,EAA/B,EAAmC;AAC/B0B,cAAAA,oBAAoB,CAACqD,QAAQ,CAAC/E,cAAV,CAApB;AACH,aAf0C,CAgB3C;;;AACA,gBAAI+E,QAAQ,CAAC7E,QAAT,CAAkBE,MAAlB,CAAyB,CAAzB,EAA4BC,WAA5B,IAA2C,EAA/C,EAAmD;AAC/CuB,cAAAA,WAAW,CAAC,IAAD,CAAX;AACAQ,cAAAA,kBAAkB,CAAC2C,QAAQ,CAAC7E,QAAT,CAAkBE,MAAlB,CAAyB,CAAzB,EAA4BJ,cAA7B,CAAlB;AACAsC,cAAAA,kBAAkB,CAACyC,QAAQ,CAAC7E,QAAT,CAAkBE,MAAlB,CAAyB,CAAzB,EAA4BJ,cAA7B,CAAlB;AACAgC,cAAAA,aAAa,CAAC+C,QAAQ,CAAC7E,QAAT,CAAkBE,MAAlB,CAAyB,CAAzB,EAA4BC,WAA7B,CAAb;AACA6B,cAAAA,aAAa,CAAC6C,QAAQ,CAAC7E,QAAT,CAAkBE,MAAlB,CAAyB,CAAzB,EAA4BC,WAA7B,CAAb;AACH,aAvB0C,CAwB3C;;;AACA,gBAAI0E,QAAQ,CAACzE,KAAT,KAAmB,MAAvB,EAA+B;AAC3BwB,cAAAA,UAAU,CAAC,IAAD,CAAV;AACH;;AACD,kBAAMgB,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAX,CAAZ;AACA,kBAAM;AAAEC,cAAAA,aAAF;AAAiBC,cAAAA;AAAjB,gBAAiCN,GAAvC,CA7B2C,CA+B3C;;AACAc,YAAAA,KAAK,CAAC,kDAAD,EAAqD;AACtDC,cAAAA,MAAM,EAAE,MAD8C;AAEtDC,cAAAA,OAAO,EAAE;AACL,gCAAgB,kBADX;AAEL,iCAAiBX,aAFZ;AAGL,+BAAeC;AAHV,eAF6C;AAOtD0B,cAAAA,IAAI,EAAE/B,IAAI,CAACsB,SAAL,CAAe;AAAEU,gBAAAA,QAAQ,EAAE;AAAE/E,kBAAAA,cAAc,EAAEyB,iBAAlB;AAAqCxB,kBAAAA,UAAU,EAAE8E,QAAQ,CAAC9E,UAA1D;AAAsEE,kBAAAA,KAAK,EAAE4E,QAAQ,CAAC7E,QAAT,CAAkBC;AAA/F;AAAZ,eAAf;AAPgD,aAArD,CAAL;AASA,kBAAM6E,QAAQ,GAAGjC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,CAAjB;AACAI,YAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyByB,QAAzB;AACAA,YAAAA,QAAQ,CAAChE,IAAT,CAAc;AAAEhB,cAAAA,cAAc,EAAE+E,QAAQ,CAAC/E,cAA3B;AAA2CC,cAAAA,UAAU,EAAE8E,QAAQ,CAAC9E,UAAhE;AAA4EE,cAAAA,KAAK,EAAE4E,QAAQ,CAAC7E,QAAT,CAAkBC;AAArG,aAAd;AACA8C,YAAAA,YAAY,CAACmB,OAAb,CAAqB,cAArB,EAAqCrB,IAAI,CAACsB,SAAL,CAAeW,QAAf,CAArC;AACH;AACJ,SAhDD;AAkDH,OApDD,MAoDO;AACHpK,QAAAA,YAAY,CAACkL,GAAb,CAAkBf,QAAD,IAAmB;AAChC;AACA,cAAIA,QAAQ,CAAChF,UAAT,KAAwB0B,iBAA5B,EAA+C;AAAE;AAC7C;AACAJ,YAAAA,YAAY,GAAGC,eAAe,CAAC,CAAC,GAAGD,YAAJ,EAC/B,EAAE,GAAG0D;AAAL,aAD+B,CAAD,CAAlB,GAGR;AACAzD,YAAAA,eAAe,CAAC,CACZ,EAAE,GAAGyD;AAAL,aADY,CAAD,CAJnB;AAQAzB,YAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCwB,QAAQ,CAAC/E,cAAhD;AACAsD,YAAAA,OAAO,CAACC,GAAR,CAAY,yCAAZ,EAAuDwB,QAAQ,CAAC7E,QAAT,CAAkBE,MAAlB,CAAyB,CAAzB,EAA4BC,WAAnF,EAX2C,CAY3C;;AACA,gBAAI0E,QAAQ,CAAC/E,cAAT,IAA2B,EAA/B,EAAmC;AAC/B0B,cAAAA,oBAAoB,CAACqD,QAAQ,CAAC/E,cAAV,CAApB;AACH,aAf0C,CAgB3C;;;AACA,gBAAI+E,QAAQ,CAAC7E,QAAT,CAAkBE,MAAlB,CAAyB,CAAzB,EAA4BC,WAA5B,IAA2C,EAA/C,EAAmD;AAC/CuB,cAAAA,WAAW,CAAC,IAAD,CAAX;AACAQ,cAAAA,kBAAkB,CAAC2C,QAAQ,CAAC7E,QAAT,CAAkBE,MAAlB,CAAyB,CAAzB,EAA4BJ,cAA7B,CAAlB;AACAsC,cAAAA,kBAAkB,CAACyC,QAAQ,CAAC7E,QAAT,CAAkBE,MAAlB,CAAyB,CAAzB,EAA4BJ,cAA7B,CAAlB;AACAgC,cAAAA,aAAa,CAAC+C,QAAQ,CAAC7E,QAAT,CAAkBE,MAAlB,CAAyB,CAAzB,EAA4BC,WAA7B,CAAb;AACA6B,cAAAA,aAAa,CAAC6C,QAAQ,CAAC7E,QAAT,CAAkBE,MAAlB,CAAyB,CAAzB,EAA4BC,WAA7B,CAAb;AACH,aAvB0C,CAwB3C;;;AACA,gBAAI0E,QAAQ,CAACzE,KAAT,KAAmB,MAAvB,EAA+B;AAC3BwB,cAAAA,UAAU,CAAC,IAAD,CAAV;AACH;;AACD,kBAAMgB,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAX,CAAZ;AACA,kBAAM;AAAEC,cAAAA,aAAF;AAAiBC,cAAAA;AAAjB,gBAAiCN,GAAvC,CA7B2C,CA+B3C;;AACAc,YAAAA,KAAK,CAAC,kDAAD,EAAqD;AACtDC,cAAAA,MAAM,EAAE,MAD8C;AAEtDC,cAAAA,OAAO,EAAE;AACL,gCAAgB,kBADX;AAEL,iCAAiBX,aAFZ;AAGL,+BAAeC;AAHV,eAF6C;AAOtD0B,cAAAA,IAAI,EAAE/B,IAAI,CAACsB,SAAL,CAAe;AAAEU,gBAAAA,QAAQ,EAAE;AAAE/E,kBAAAA,cAAc,EAAEyB,iBAAlB;AAAqCxB,kBAAAA,UAAU,EAAE8E,QAAQ,CAAC9E,UAA1D;AAAsEE,kBAAAA,KAAK,EAAE4E,QAAQ,CAAC7E,QAAT,CAAkBC;AAA/F;AAAZ,eAAf;AAPgD,aAArD,CAAL;AASA,kBAAM6E,QAAQ,GAAGjC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,CAAjB;AACAI,YAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyByB,QAAzB;AACAA,YAAAA,QAAQ,CAAChE,IAAT,CAAc;AAAEhB,cAAAA,cAAc,EAAE+E,QAAQ,CAAC/E,cAA3B;AAA2CC,cAAAA,UAAU,EAAE8E,QAAQ,CAAC9E,UAAhE;AAA4EE,cAAAA,KAAK,EAAE4E,QAAQ,CAAC7E,QAAT,CAAkBC;AAArG,aAAd;AACA8C,YAAAA,YAAY,CAACmB,OAAb,CAAqB,cAArB,EAAqCrB,IAAI,CAACsB,SAAL,CAAeW,QAAf,CAArC;AACH;AACJ,SAhDD;AAiDH;;AAMD,UAAIvD,iBAAiB,KAAK,MAA1B,EAAkC;AAC9BX,QAAAA,OAAO,CAACE,IAAR,CAAc,uBAAd;AAEH;;AACD,UAAIS,iBAAiB,KAAK,MAA1B,EAAkC;AAC9BX,QAAAA,OAAO,CAACE,IAAR,CAAc,uBAAd;AAEH;;AACD,UAAIS,iBAAiB,KAAK,MAA1B,EAAkC;AAC9BX,QAAAA,OAAO,CAACE,IAAR,CAAc,uBAAd;AAEH;;AACD,UAAIS,iBAAiB,KAAK,MAA1B,EAAkC;AAC9BX,QAAAA,OAAO,CAACE,IAAR,CAAc,uBAAd;AAEH;AACJ;AACJ,GA5ND;;AA8NA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAII;AAAK,IAAA,SAAS,EAAED,OAAO,CAAClF,mBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAEkF,OAAO,CAACxE,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAEwE,OAAO,CAACpE,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK4E,WAAW,IAAIA,WAAW,CAACuE,GAAZ,CAAiBf,QAAD,IAAmBA,QAAQ,CAAC9E,UAAT,IAAuB,IAAvB,gBAC/C;AAAK,IAAA,SAAS,EAAEc,OAAO,CAACjD,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAEiD,OAAO,CAAC1C,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAGI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,GAAG,EAAC,MAAZ;AAAmB,IAAA,GAAG,EAAE1D,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAII,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAEoG,OAAO,CAAC/C,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoC+G,QAAQ,CAAC5E,KAA7C,CAJJ,CAHJ,CAD+C,GAW7C4E,QAAQ,CAAC9E,UAAT,IAAuB,KAAvB,gBACE;AAAK,IAAA,SAAS,EAAEc,OAAO,CAACtC,gBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAEsC,OAAO,CAACrC,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyCqG,QAAQ,CAAC5E,KAAlD,CADJ,CADJ,CADF,gBAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAEY,OAAO,CAACnD,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwCmH,QAAQ,CAAC5E,KAAjD,CADJ,CADJ,CAlBQ,CADpB,EAyBKkB,YAAY,IAAIA,YAAY,CAACyE,GAAb,CAAkBf,QAAD,IAAmBA,QAAQ,CAAC9E,UAAT,IAAuB,IAAvB,gBACjD;AAAK,IAAA,SAAS,EAAEc,OAAO,CAACjD,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAEiD,OAAO,CAAC1C,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAGI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,GAAG,EAAC,MAAZ;AAAmB,IAAA,GAAG,EAAE1D,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAII,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAEoG,OAAO,CAAC/C,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoC+G,QAAQ,CAAC7E,QAAT,CAAkBC,KAAtD,CAJJ,CAHJ,CADiD,GAW/C4E,QAAQ,CAAC9E,UAAT,IAAuB,KAAvB,gBACE;AAAK,IAAA,SAAS,EAAEc,OAAO,CAACtC,gBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAEsC,OAAO,CAACrC,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyCqG,QAAQ,CAAC7E,QAAT,CAAkBC,KAA3D,CADJ,CADJ,CADF,gBAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAEY,OAAO,CAACnD,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwCmH,QAAQ,CAAC7E,QAAT,CAAkBC,KAA1D,CADJ,CADJ,CAlBS,CAzBrB,eAqDI;AAAK,IAAA,EAAE,EAAC,gBAAR;AAAyB,IAAA,GAAG,EAAE0C,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArDJ,CADJ,EAwDKlB,QAAQ,IAAI,IAAZ,gBACG;AAAK,IAAA,SAAS,EAAEZ,OAAO,CAAC7D,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAC,QAAxB;AAAiC,IAAA,UAAU,EAAC,QAA5C;AAAqD,IAAA,OAAO,EAAE,CAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAC,WADZ;AAEI,IAAA,gBAAgB,MAFpB;AAGI,IAAA,OAAO,EAAE,MAAM;AACXyH,MAAAA,aAAa,CAACxC,eAAD,EAAkBJ,UAAlB,CAAb;AACA0D,MAAAA,eAAe,CAACtD,eAAD,EAAkBJ,UAAlB,CAAf;AACH,KANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQKA,UARL,CADJ,CADJ,eAcI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAC,WADZ;AAEI,IAAA,gBAAgB,MAFpB;AAGI,IAAA,OAAO,EAAE,MAAM;AACX4C,MAAAA,aAAa,CAACtC,eAAD,EAAkBJ,UAAlB,CAAb;AACAwD,MAAAA,eAAe,CAACpD,eAAD,EAAkBJ,UAAlB,CAAf;AACH,KANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQKA,UARL,CADJ,CAdJ,CADJ,CADH,CAwCG;AAxCH,IAyCKJ,OAAO,IAAI,IAAX,gBACE;AAAK,IAAA,SAAS,EAAEd,OAAO,CAAC7D,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAE6D,OAAO,CAAC3B,mBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAE2B,OAAO,CAAC1B,iBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,SAAS,EAAE0B,OAAO,CAACxB,KADvB;AAEI,IAAA,WAAW,EAAC,kDAFhB;AAGI,IAAA,UAAU,EAAE;AAAE,oBAAc;AAAhB,KAHhB;AAII,IAAA,QAAQ,EAAG2F,CAAD,IACND,iBAAiB,CAACC,CAAD,CALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAQI,oBAAC,UAAD;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,SAAS,EAAEnE,OAAO,CAACtB,UAFvB;AAGI,kBAAW,QAHf;AAII,IAAA,OAAO,EAAE,MAAM4F,SAAS,CAAC5D,iBAAD,EAAoBnB,KAApB,CAJ5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CARJ,CADJ,CADJ,CADF,GAoDImB,iBAAiB,KAAK,GAAtB;AAAA;AAA4B;AAC1B;AAAK,IAAA,SAAS,EAAEV,OAAO,CAAC9B,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sOADF,GAKAwC,iBAAiB,KAAK,IAAtB;AAAA;AAA4B;AAC1B;AAAK,IAAA,SAAS,EAAEV,OAAO,CAAC9B,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sOADF,GAIIwC,iBAAiB,KAAK,KAAtB;AAAA;AAA6B;AAC3B;AAAK,IAAA,SAAS,EAAEV,OAAO,CAAC9B,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sOADF,GAKIwC,iBAAiB,KAAK,KAAtB;AAAA;AAA6B;AAC3B;AAAK,IAAA,SAAS,EAAEV,OAAO,CAAC9B,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sOADF,GAKIwC,iBAAiB,KAAK,KAAtB;AAAA;AAA6B;AAC3B;AAAK,IAAA,SAAS,EAAEV,OAAO,CAAC9B,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sOADF,GAKIwC,iBAAiB,KAAK,KAAtB;AAAA;AAA6B;AAC3B;AAAK,IAAA,SAAS,EAAEV,OAAO,CAAC9B,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sOADF,GAKIwC,iBAAiB,KAAK,KAAtB;AAAA;AAA6B;AAC3B;AAAK,IAAA,SAAS,EAAEV,OAAO,CAAC9B,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sOADF,GAKIwC,iBAAiB,KAAK,KAAtB;AAAA;AAA6B;AAC3B;AAAK,IAAA,SAAS,EAAEV,OAAO,CAAC9B,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sOADF,GAIIwC,iBAAiB,KAAK,KAAtB;AAAA;AAA6B;AAC3B;AAAK,IAAA,SAAS,EAAEV,OAAO,CAAC9B,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sOADF,GAIIwC,iBAAiB,KAAK,KAAtB;AAAA;AAA6B;AAC3B;AAAK,IAAA,SAAS,EAAEV,OAAO,CAAC9B,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sOADF,GAIIwC,iBAAiB,KAAK,KAAtB;AAAA;AAA6B;AAC3B;AAAK,IAAA,SAAS,EAAEV,OAAO,CAAC9B,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sOADF,GAIIwC,iBAAiB,KAAK,KAAtB;AAAA;AAA6B;AAC3B;AAAK,IAAA,SAAS,EAAEV,OAAO,CAAC9B,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sOADF,gBAOE;AAAK,IAAA,SAAS,EAAE8B,OAAO,CAAClE,YAAxB;AAAsC,IAAA,GAAG,EAAExB,GAA3C;AAAgD,IAAA,OAAO,EAAE,MAAM;AAAEoK,MAAAA,eAAe,CAAC,EAAD,EAAK,EAAL,CAAf;AAAyB,KAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9MxD,CA+MQ;AA/MR,iBAkNI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlNJ,CADJ,CAJJ,CADJ;AA8NH,CA7pBD;;AAiqBA,eAAevE,IAAf","sourcesContent":["import React, { useEffect, useState, useRef } from 'react'\nimport { Typography, makeStyles, TextField, Grid, Box, Button, ListItemAvatar, Avatar, List } from '@material-ui/core'\nimport ListItem from '@material-ui/core/ListItem';\nimport useReactRouter from 'use-react-router';\n// import classes from '*.module.css';\nimport Header from './header';\nimport HeaderChat from './headerChat';\nimport GoogleMapAPI from '../utils/googleMapAPI';\nimport Footer from './footer';\nimport SelectInput from '@material-ui/core/Select/SelectInput';\nimport axios, { AxiosResponse } from 'axios';\nimport { Data, GoogleMap } from '@react-google-maps/api';\nimport userIcon from '../assets/avatarWomen.png';\nimport { Label } from '@material-ui/icons';\nimport jsonDataMale from '../utils/db2.json';\nimport jsonDataFemale from '../utils/db_f.json';\nimport InputBase from \"@material-ui/core/InputBase\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ForwardIcon from '@material-ui/icons/Forward';\n\nconst UserIcon = require('../assets/test.png');\nconst TabChatOn = require('../assets/TabChatOn.png');\nconst TabMapOff = require('../assets/TabMapOff.png');\nconst Tap = require('../assets/Tap.png');\n\n\nconst headerHeight = '44px';\nconst ContentBodyHeight = `calc(100vh - ${headerHeight})`;\nconst selectButtonRadius = '18px';\nconst baseFontColor = '#4575b4';\nconst textInputBgColor = '#fefffe';\n\nconst useStyles = makeStyles((theme) => ({\n    chatDesignContainer: {\n        display: \"flex\",\n        position: \"relative\",\n        width: \"100%\",\n        // height: '100vh',\n        // height: 'calc(100vh - 200px)',\n        height: ContentBodyHeight,\n        flexDirection: 'column',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n        paddingTop: headerHeight,\n        paddingBottom: '156px',\n        // paddingBottom: isButton ? '156px' : 'calc(10% + 1rem)',\n        // paddingBottom: 'calc(20% + 1rem)',\n    },\n    chatDesign: {\n        display: 'flex',\n        justifyContent: 'center',\n        position: \"relative\",\n        width: \"100%\",\n        backgroundColor: \"#EFEDE9\",\n        // top: \"10%\",\n        // paddingTop: headerHeight,\n        paddingBottom: \"291px\",\n        overflow: \"auto\",\n        '& .MuiList-padding': {\n            display: 'flex',\n            justifyContent: 'center',\n            padding: '0.5rem 1rem',\n        }\n    },\n    chatDesignInner: {\n        position: \"relative\",\n        width: \"100%\",\n        maxWidth: '390px',\n        height: ContentBodyHeight,\n    },\n    buttonDesign: {\n        bottom: \"30%\",\n        position: \"fixed\",\n        borderRadius: \"50%\",\n        // backgroundColor: \"blue\",\n        color: \"white\",\n        // zIndex:100,\n        // marginLeft: \"40%\",\n        fontFamily: 'メイリオ',\n        // cursor: \"pointer\",\n    },\n    selectButton: {\n        width: \"100%\",\n        minHeight: '10%',\n        // height: '10%',\n        justifyItems: 'center',\n        textAlign: 'center',\n        padding: '0.5rem 0',\n        position: 'fixed',\n        bottom: \"10%\",\n        backgroundColor: '#EFEDE9',\n        boxShadow: 'inset 0 -0.5px 0 0 rgba(0, 0, 0, 0.2)',\n        '& .MuiButton-label': {\n            color: baseFontColor,\n        },\n        '& .MuiButton-disableElevation': {\n            width: '100%',\n            maxWidth: '326px',\n            height: '100%',\n            minHeight: headerHeight,\n            border: '1px solid #cdcdcd',\n            backgroundColor: '#FFFFFF',\n        },\n        '& .MuiGrid-grid-xs-12:nth-of-type(1)': {\n            '& button': {\n                borderTopLeftRadius: selectButtonRadius,\n                borderTopRightRadius: selectButtonRadius,\n            },\n        },\n        '& .MuiGrid-grid-xs-12:nth-of-type(2)': {\n            '& button': {\n                borderBottomLeftRadius: selectButtonRadius,\n                borderBottomRightRadius: selectButtonRadius,\n            },\n        },\n    },\n    narrator: {\n        fontFamily: 'メイリオ',\n        // fontSize: 20,\n        display: 'flex',\n        alignItems: 'flex-start',//縦\n        textAlign: 'left',//横\n        backgroundColor: '#efdcc9',\n        color: \"#994C00\",\n        borderRadius: 16,\n        width: '100%',\n        maxWidth: '390px',\n        marginTop: 20,\n        justifyContent: 'flex-start',\n        // marginLeft: '15%',\n        padding: '1rem',\n        // position:'relative',\n    },\n    yukaWrapper: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'flex-start',\n        alignItems: 'flex-start',\n        '& .MuiListItemAvatar-root': {\n            minWidth: '40px',\n        },\n        '& .MuiAvatar-root': {\n            width: '31px',\n            height: '31px',\n        }\n    },\n    yuka: {\n        fontFamily: 'メイリオ',\n        width: '100%',\n        maxWidth: '25ch',\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: 17.5,\n        borderColor: 'blue',\n        padding: 10,\n    },\n    yuka_label: {\n        fontSize: 15,\n        marginBottom: '0%',\n        marginLeft: '15%',\n        marginTop: '0.5rem',\n    },\n    syujiinkoWrapper: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'flex-start',\n        alignItems: 'flex-end',\n    },\n    syujiinko: {\n        fontFamily: 'メイリオ',\n        border: '1px solid #bfc8d5',\n        color: '#7088b1',\n        borderRadius: 17.5,\n        backgroundColor: '#e2e3e4',\n        width: 'auto',\n        maxWidth: '27ch',\n        padding: 10,\n    },\n    avatar: {\n        // padding: 10,\n        marginLeft: 50,\n    },\n    square: {\n        width: \"100%\",\n        height: \"900px\",\n        // margin:'0',\n        backgroundColor: \"#eeedea\",\n    },\n    bottomTab: {\n        position: \"fixed\",\n        bottom: \"0\",\n        height: \"10%\",\n        width: \"100%\",\n        backgroundColor: \"#eeedea\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        textAlign: \"center\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    bottomChat: {\n        // border: \"2px solid\",\n        // borderColor: \"pink\",\n        flex: 1,\n    },\n    bottomMap: {\n        // border: \"2px solid\",\n        // borderColor: \"pink\",\n        flex: 1,\n    },\n    mapLabel: {\n        color: baseFontColor,\n        fontWeight: 'bold',\n        fontSize: '14px',\n        letterSpacing: '-0.32px',\n        textAlign: 'center',\n        bottom: \"13%\",\n        position: \"fixed\",\n        borderRadius: \"50%\",\n        // backgroundColor: \"blue\",\n        // zIndex:100,\n        // marginLeft: \"40%\",\n        fontFamily: 'メイリオ',\n        // cursor: \"pointer\",\n    },\n    sendButtonContainer: {\n        display: 'flex',\n        justifyContent: \"center\",\n        alignItems: 'center',\n        width: '100%',\n        padding: '0 1rem',\n    },\n    sendButtonWrapper: {\n        paddingLeft: '0.5rem',\n        display: 'flex',\n        alignItems: 'center',\n        width: '100%',\n        maxWidth: '390px',\n        backgroundColor: textInputBgColor,\n        border: '1px solid #c4c4c6',\n        borderRadius: selectButtonRadius,\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n    iconButton: {\n        padding: 10,\n    },\n}))\n\ntype JsonData = {\n    sentenceId: string\n    nextSentenceId: string\n    personName: string\n    sentence: {\n        plane: string,\n        button: Array<{\n            buttonLabel: string,\n            nextSentenceId: string\n        }>\n    }\n    reply: string\n}\ntype LogData = {\n    // id: string\n    personName: string\n    plane: string,\n\n}\n\n\nconst currentSentenceIdInit: string = \"0\"\nconst genderInit: string = \"0\"\nconst spotIdInit: string = \"A\"\nconst spotNameInit: string = \"大谷資料館\"\nconst scenarioListInit = [\n    {\n        sentenceId: \"0\",\n        nextSentenceId: \"1\",\n        personName: \"優花\",\n        sentence: {\n            plane: \"初期値消したい\",\n            button: [\n                {\n                    buttonLabel: \"海外強度料理にしよう\",\n                    nextSentenceId: \"21\"\n                },\n                {\n                    buttonLabel: \"お蕎麦屋さんにしよう\",\n                    nextSentenceId: \"22\"\n                }\n            ],\n        },\n        reply: \"true\"\n    }\n]\n\nconst isButtonInit = false\nconst isReplyInit = false\nconst isBtnLabelInit_1 = \"\"\nconst isBtnLabelInit_2 = \"\"\nconst isBtnScenarioIdInit_1 = \"\"\nconst isBtnScenarioIdInit_2 = \"\"\n\nconst BottomTab: React.FC = () => {\n    const { history } = useReactRouter();\n    const classes = useStyles()\n    return (\n\n        <div className={classes.bottomTab}>\n            <div className={classes.bottomChat}>\n\n                <img src={TabChatOn} />\n                <div>\n                    チャット\n                </div>\n            </div>\n            <div className={classes.bottomMap} onClick={() => history.push(\"/map\")}>\n\n                <img src={TabMapOff} />\n                <div>\n                    マップ\n                </div>\n            </div>\n        </div>\n    )\n}\n\nvar btn1: string = \"\"\nconst Chat: React.FC = () => {\n\n    const { history } = useReactRouter();\n    const classes = useStyles()\n    const [jsonData, setJsonData] = useState<JsonData[]>()\n    const [scenarioList, setScenarioList] = useState<JsonData[]>()\n    const [scenarioLog, setScenarioLog] = useState<LogData[]>()\n    const [currentSentenceId, setCurrentSentenceId] = useState(currentSentenceIdInit);\n    const [isButton, setIsButton] = useState(isButtonInit)\n    const [isReply, setIsReply] = useState(isReplyInit)\n    const [btnLabel_1, setBtnLabel_1] = useState(isBtnLabelInit_1)\n    const [btnLabel_2, setBtnLabel_2] = useState(isBtnLabelInit_2)\n    const [btnScenarioId_1, setBtnScenarioId_1] = useState(isBtnScenarioIdInit_1)\n    const [btnScenarioId_2, setBtnScenarioId_2] = useState(isBtnScenarioIdInit_2)\n    const [btnText, setBtnText] = useState(\"\")\n    const [gender, setGender] = useState(\"\")\n    const [reply, setReply] = useState(\"\")\n    const isFirstRender = useRef(false)\n\n\n    const ref = useRef<any>(null)\n\n    useEffect(() => {\n\n        const jwt = JSON.parse(localStorage.getItem('jwt') as string)\n        const { Authorization, Accesstoken } = jwt\n        const scenarioHistString: string | null = localStorage.getItem('scenarioHist')\n        // const scenarioHist: string<{ nextSentenceId: string, personName: string, plane: string }> = localStorage.getItem('scenarioHist')\n        // const { personName, plane } = scenarioHist\n\n        console.log(scenarioHistString)\n\n\n\n        // console.log(\"3\")\n        if (scenarioHistString) {\n            console.log(\"Localstorage\")\n            const scenarioHist: Array<{ nextSentenceId: string, personName: string, plane: string }> = JSON.parse(scenarioHistString)\n            if (scenarioHist.length > 0) {\n\n                setScenarioLog(scenarioHist)\n                setCurrentSentenceId(scenarioHist.slice(-1)[0].nextSentenceId)\n                scrollToBottomOfList()\n            }\n        } else {\n            console.log(\"DB\")\n\n            //ログから会話履歴をもってくる\n\n            fetch(\"https://jtb-prd.two-choices.jp/api/scenario/log/\", {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': Authorization,\n                    'accesstoken': Accesstoken\n                },\n            }).then(res => res.json()).then(data => {\n\n\n\n                if (data.scenarioHistory.length <= 0) {\n\n                    localStorage.setItem('scenarioHist', JSON.stringify([]))\n                    return\n                }\n                localStorage.setItem('scenarioHist', JSON.stringify(data.scenarioHistory))\n                // const scenarioGet: Array<{ nextSentenceId: string, personName: string, plane: string }> = JSON.parse(localStorage.getItem('scenarioHist') as string)\n                console.log(data.scenarioHistory)\n\n                // DBから最新のIDをとってくる\n                // scenarioGet.slice(-1)[0]\n                console.log(\"休みたい\",data.scenarioHistory)\n                setScenarioLog(data.scenarioHistory)\n                setCurrentSentenceId(data.scenarioHistory.slice(-1)[0].nextSentenceId)\n                scrollToBottomOfList()\n\n\n            })\n        }\n    }, [])\n\n    useEffect(() => {\n        scrollToBottomOfList()\n    }, [scenarioList])\n\n\n    useEffect(() => {\n        scrollToBottomOfList()\n    }, [scenarioLog])\n\n\n    const scrollToBottomOfList = React.useCallback(() => {\n        ref!.current!.scrollIntoView({\n            behavior: 'smooth',\n            block: 'end',\n        })\n    }, [ref])\n\n    const selectBtnText = (scenarioId: string, planeMessage: string) => {\n        scenarioList && setScenarioList([...scenarioList, {\n            sentenceId: \"\",\n            nextSentenceId: scenarioId,\n            personName: \"主人公\",\n            sentence: {\n                plane: planeMessage,\n                button: [\n                    {\n                        buttonLabel: \"\",\n                        nextSentenceId: \"\"\n                    },\n                    {\n                        buttonLabel: \"\",\n                        nextSentenceId: \"\"\n                    }\n                ]\n            },\n            reply: \"false\"\n        }])\n        setCurrentSentenceId(scenarioId)\n        const jwt = JSON.parse(localStorage.getItem('jwt') as string)\n        const { Authorization, Accesstoken } = jwt\n        fetch(\"https://jtb-prd.two-choices.jp/api/scenario/log/\", {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': Authorization,\n                'accesstoken': Accesstoken\n            },\n            // body: JSON.stringify({ scenario: { personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId } })\n            body: JSON.stringify({ scenario: { nextSentenceId: scenarioId, personName: \"主人公\", plane: planeMessage } })\n        })\n        const tmpArray = JSON.parse(localStorage.getItem('scenarioHist') as string)\n        console.log(\"tmpArray:\", tmpArray)\n        tmpArray.push({ nextSentenceId: scenarioId, personName: \"主人公\", plane: planeMessage })\n        // localStorage.setItem('scenarioHist', JSON.stringify({ personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId }))\n        localStorage.setItem('scenarioHist', JSON.stringify(tmpArray))\n\n        //性別\n        // console.log(\"性別\",currentSentenceId)\n        if (currentSentenceId === \"1\") {\n            fetch(\"https://jtb-prd.two-choices.jp/api/user/\", {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': Authorization,\n                    'accesstoken': Accesstoken\n                },\n                body: JSON.stringify({ gender: planeMessage })\n            })\n        }\n    }\n\n\n    const handleReplyChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setReply(e.target.value)\n    }\n\n    const replyText = (id: string, planeMessage: string) => {\n\n        scenarioList && setScenarioList([...scenarioList, {\n            sentenceId: \"\",\n            nextSentenceId: \"\",\n            personName: \"主人公\",\n            sentence: {\n                plane: planeMessage,\n                button: [\n                    {\n                        buttonLabel: \"\",\n                        nextSentenceId: \"\"\n                    },\n                    {\n                        buttonLabel: \"\",\n                        nextSentenceId: \"\"\n                    }\n                ]\n            },\n            reply: \"\"\n        }])\n        setCurrentSentenceId(id)\n        setIsReply(false)\n        const jwt = JSON.parse(localStorage.getItem('jwt') as string)\n        const { Authorization, Accesstoken } = jwt\n        fetch(\"https://jtb-prd.two-choices.jp/api/scenario/log/\", {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': Authorization,\n                'accesstoken': Accesstoken\n            },\n            // body: JSON.stringify({ scenario: { personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId } })\n            body: JSON.stringify({ scenario: { nextSentenceId: id, personName: \"主人公\", plane: planeMessage } })\n        })\n        const tmpArray = JSON.parse(localStorage.getItem('scenarioHist') as string)\n        console.log(\"tmpArray:\", tmpArray)\n        // tmpArray.push({ personName: \"主人公\", plane: planeMessage })\n        // localStorage.setItem('scenarioHist', JSON.stringify({ personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId }))\n        localStorage.setItem('scenarioHist', JSON.stringify(tmpArray))\n        // }).then(res => res.json()).then(console.log)\n        // scrollToBottomOfList()\n\n        //名前\n        if (currentSentenceId === \"1\") {\n            fetch(\"https://jtb-prd.two-choices.jp/api/user/\", {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': Authorization,\n                    'accesstoken': Accesstoken\n                },\n                body: JSON.stringify({ name: planeMessage })\n            })\n        }\n        //年齢\n        if (currentSentenceId === \"3\") {\n            fetch(\"https://jtb-prd.two-choices.jp/api/user/\", {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': Authorization,\n                    'accesstoken': Accesstoken\n                },\n                body: JSON.stringify({ birth: planeMessage })\n            })\n        }\n    }\n    const processScenario = async (btnId: string, btnLabel: string) => {\n        // setCurrentSentenceId(\"0\")\n        // console.log(jsonDataTest)\n        const jwt = JSON.parse(localStorage.getItem('jwt') as string)\n        const { Authorization, Accesstoken } = jwt\n        fetch(\"https://jtb-prd.two-choices.jp/api/user/\", {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': Authorization,\n                'accesstoken': Accesstoken\n            },\n        }).then(res => res.json()).then(data => {\n\n\n\n            if (data.Item.gender === \"\") {\n                console.log(\"1\")\n\n                return\n            }\n            if (data.Item.gender === undefined) {\n\n                console.log(\"2\")\n                return\n            }\n            // const scenarioGet: Array<{ nextSentenceId: string, personName: string, plane: string }> = JSON.parse(localStorage.getItem('scenarioHist') as string)\n\n            // DBから最新のIDをとってくる\n            // scenarioGet.slice(-1)[0]\n            setGender(data.Item.gender)\n\n        })\n        console.log(\"gender\", gender)\n        if (!localStorage.getItem('scenarioHist')) return\n\n        setIsButton(false)\n        setIsReply(false)\n        if (btnId != \"\") {\n            return\n        } else {\n\n            if (gender === \"男性です。\") {\n                console.log(\"MM\")\n                jsonDataMale.map((scenario: any) => {\n                    //次もってくる文章に合っているものを抽出\n                    if (scenario.sentenceId === currentSentenceId) { //Filtterつかえる\n                        //上書き\n                        scenarioList ? setScenarioList([...scenarioList,\n                        { ...scenario }\n                        ]) :\n                            //新規\n                            setScenarioList([\n                                { ...scenario }\n\n                            ])\n                        console.log(\"scenario.nextSentenceId\", scenario.nextSentenceId)\n                        console.log(\"scenario.sentence.button[0].buttonLabel\", scenario.sentence.button[0].buttonLabel)\n                        // 現在のnextSentenceIdに値が入っている場合\n                        if (scenario.nextSentenceId != \"\") {\n                            setCurrentSentenceId(scenario.nextSentenceId)\n                        }\n                        //現在のsentenceにボタンが入っている場合\n                        if (scenario.sentence.button[0].buttonLabel != \"\") {\n                            setIsButton(true)\n                            setBtnScenarioId_1(scenario.sentence.button[0].nextSentenceId)\n                            setBtnScenarioId_2(scenario.sentence.button[1].nextSentenceId)\n                            setBtnLabel_1(scenario.sentence.button[0].buttonLabel)\n                            setBtnLabel_2(scenario.sentence.button[1].buttonLabel)\n                        }\n                        //返信がテキストで必要な場合\n                        if (scenario.reply === \"true\") {\n                            setIsReply(true)\n                        }\n                        const jwt = JSON.parse(localStorage.getItem('jwt') as string)\n                        const { Authorization, Accesstoken } = jwt\n\n                        //今表示したものをDBに入れる\n                        fetch(\"https://jtb-prd.two-choices.jp/api/scenario/log/\", {\n                            method: 'POST',\n                            headers: {\n                                'Content-Type': 'application/json',\n                                'Authorization': Authorization,\n                                'accesstoken': Accesstoken\n                            },\n                            body: JSON.stringify({ scenario: { nextSentenceId: currentSentenceId, personName: scenario.personName, plane: scenario.sentence.plane } })\n                        })\n                        const tmpArray = JSON.parse(localStorage.getItem('scenarioHist') as string)\n                        console.log(\"tmpArray:\", tmpArray)\n                        tmpArray.push({ nextSentenceId: scenario.nextSentenceId, personName: scenario.personName, plane: scenario.sentence.plane })\n                        localStorage.setItem('scenarioHist', JSON.stringify(tmpArray))\n                    }\n                })\n\n            }\n            if (gender === \"女性です。\") {\n                console.log(\"FF\")\n                jsonDataFemale.map((scenario: any) => {\n                    //次もってくる文章に合っているものを抽出\n                    if (scenario.sentenceId === currentSentenceId) { //Filtterつかえる\n                        //上書き\n                        scenarioList ? setScenarioList([...scenarioList,\n                        { ...scenario }\n                        ]) :\n                            //新規\n                            setScenarioList([\n                                { ...scenario }\n\n                            ])\n                        console.log(\"scenario.nextSentenceId\", scenario.nextSentenceId)\n                        console.log(\"scenario.sentence.button[0].buttonLabel\", scenario.sentence.button[0].buttonLabel)\n                        // 現在のnextSentenceIdに値が入っている場合\n                        if (scenario.nextSentenceId != \"\") {\n                            setCurrentSentenceId(scenario.nextSentenceId)\n                        }\n                        //現在のsentenceにボタンが入っている場合\n                        if (scenario.sentence.button[0].buttonLabel != \"\") {\n                            setIsButton(true)\n                            setBtnScenarioId_1(scenario.sentence.button[0].nextSentenceId)\n                            setBtnScenarioId_2(scenario.sentence.button[1].nextSentenceId)\n                            setBtnLabel_1(scenario.sentence.button[0].buttonLabel)\n                            setBtnLabel_2(scenario.sentence.button[1].buttonLabel)\n                        }\n                        //返信がテキストで必要な場合\n                        if (scenario.reply === \"true\") {\n                            setIsReply(true)\n                        }\n                        const jwt = JSON.parse(localStorage.getItem('jwt') as string)\n                        const { Authorization, Accesstoken } = jwt\n\n                        //今表示したものをDBに入れる\n                        fetch(\"https://jtb-prd.two-choices.jp/api/scenario/log/\", {\n                            method: 'POST',\n                            headers: {\n                                'Content-Type': 'application/json',\n                                'Authorization': Authorization,\n                                'accesstoken': Accesstoken\n                            },\n                            body: JSON.stringify({ scenario: { nextSentenceId: currentSentenceId, personName: scenario.personName, plane: scenario.sentence.plane } })\n                        })\n                        const tmpArray = JSON.parse(localStorage.getItem('scenarioHist') as string)\n                        console.log(\"tmpArray:\", tmpArray)\n                        tmpArray.push({ nextSentenceId: scenario.nextSentenceId, personName: scenario.personName, plane: scenario.sentence.plane })\n                        localStorage.setItem('scenarioHist', JSON.stringify(tmpArray))\n                    }\n                })\n\n            } else {\n                jsonDataMale.map((scenario: any) => {\n                    //次もってくる文章に合っているものを抽出\n                    if (scenario.sentenceId === currentSentenceId) { //Filtterつかえる\n                        //上書き\n                        scenarioList ? setScenarioList([...scenarioList,\n                        { ...scenario }\n                        ]) :\n                            //新規\n                            setScenarioList([\n                                { ...scenario }\n\n                            ])\n                        console.log(\"scenario.nextSentenceId\", scenario.nextSentenceId)\n                        console.log(\"scenario.sentence.button[0].buttonLabel\", scenario.sentence.button[0].buttonLabel)\n                        // 現在のnextSentenceIdに値が入っている場合\n                        if (scenario.nextSentenceId != \"\") {\n                            setCurrentSentenceId(scenario.nextSentenceId)\n                        }\n                        //現在のsentenceにボタンが入っている場合\n                        if (scenario.sentence.button[0].buttonLabel != \"\") {\n                            setIsButton(true)\n                            setBtnScenarioId_1(scenario.sentence.button[0].nextSentenceId)\n                            setBtnScenarioId_2(scenario.sentence.button[1].nextSentenceId)\n                            setBtnLabel_1(scenario.sentence.button[0].buttonLabel)\n                            setBtnLabel_2(scenario.sentence.button[1].buttonLabel)\n                        }\n                        //返信がテキストで必要な場合\n                        if (scenario.reply === \"true\") {\n                            setIsReply(true)\n                        }\n                        const jwt = JSON.parse(localStorage.getItem('jwt') as string)\n                        const { Authorization, Accesstoken } = jwt\n\n                        //今表示したものをDBに入れる\n                        fetch(\"https://jtb-prd.two-choices.jp/api/scenario/log/\", {\n                            method: 'POST',\n                            headers: {\n                                'Content-Type': 'application/json',\n                                'Authorization': Authorization,\n                                'accesstoken': Accesstoken\n                            },\n                            body: JSON.stringify({ scenario: { nextSentenceId: currentSentenceId, personName: scenario.personName, plane: scenario.sentence.plane } })\n                        })\n                        const tmpArray = JSON.parse(localStorage.getItem('scenarioHist') as string)\n                        console.log(\"tmpArray:\", tmpArray)\n                        tmpArray.push({ nextSentenceId: scenario.nextSentenceId, personName: scenario.personName, plane: scenario.sentence.plane })\n                        localStorage.setItem('scenarioHist', JSON.stringify(tmpArray))\n                    }\n                })\n            }\n\n\n\n\n\n            if (currentSentenceId === \"1001\") {\n                history.push(`/summary?messageNum=1`)\n\n            }\n            if (currentSentenceId === \"1002\") {\n                history.push(`/summary?messageNum=2`)\n\n            }\n            if (currentSentenceId === \"1003\") {\n                history.push(`/summary?messageNum=3`)\n\n            }\n            if (currentSentenceId === \"1004\") {\n                history.push(`/summary?messageNum=4`)\n\n            }\n        }\n    }\n\n    return (\n        <div>\n\n            <HeaderChat title=\"\" />\n\n            <div className={classes.chatDesignContainer}>\n                <div className={classes.chatDesign}>\n                    <div className={classes.chatDesignInner}>\n                        {scenarioLog && scenarioLog.map((scenario: any) => scenario.personName == \"優花\" ?\n                            <div className={classes.yukaWrapper}>\n                                <div className={classes.yuka_label}>優花</div>\n\n                                <List>\n                                    <ListItemAvatar>\n                                        <Avatar alt=\"icon\" src={userIcon} />\n                                    </ListItemAvatar>\n                                    <ListItem className={classes.yuka}>{scenario.plane}</ListItem>\n                                </List>\n                            </div>\n                            : scenario.personName == \"主人公\" ?\n                                <div className={classes.syujiinkoWrapper}>\n                                    <List>\n                                        <ListItem className={classes.syujiinko}>{scenario.plane}</ListItem>\n                                    </List>\n                                </div>\n                                :\n                                <div>\n                                    <List>\n                                        <ListItem className={classes.narrator}>{scenario.plane}</ListItem>\n                                    </List>\n                                </div>\n                        )}\n                        {scenarioList && scenarioList.map((scenario: any) => scenario.personName == \"優花\" ?\n                            <div className={classes.yukaWrapper}>\n                                <div className={classes.yuka_label}>優花</div>\n\n                                <List>\n                                    <ListItemAvatar>\n                                        <Avatar alt=\"icon\" src={userIcon} />\n                                    </ListItemAvatar>\n                                    <ListItem className={classes.yuka}>{scenario.sentence.plane}</ListItem>\n                                </List>\n                            </div>\n                            : scenario.personName == \"主人公\" ?\n                                <div className={classes.syujiinkoWrapper}>\n                                    <List>\n                                        <ListItem className={classes.syujiinko}>{scenario.sentence.plane}</ListItem>\n                                    </List>\n                                </div>\n                                :\n                                <div>\n                                    <List>\n                                        <ListItem className={classes.narrator}>{scenario.sentence.plane}</ListItem>\n                                    </List>\n                                </div>\n                        )}\n\n\n\n\n                        <div id=\"bottom-of-list\" ref={ref} />\n                    </div>\n                    {isButton == true ?\n                        <div className={classes.selectButton}>\n                            <Grid container justify=\"center\" alignItems=\"center\" spacing={0}>\n                                <Grid item xs={12}>\n                                    <Button\n                                        variant=\"contained\"\n                                        disableElevation\n                                        onClick={() => {\n                                            selectBtnText(btnScenarioId_1, btnLabel_1)\n                                            processScenario(btnScenarioId_1, btnLabel_1)\n                                        }}\n                                    >\n                                        {btnLabel_1}\n                                    </Button>\n\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <Button\n                                        variant=\"contained\"\n                                        disableElevation\n                                        onClick={() => {\n                                            selectBtnText(btnScenarioId_2, btnLabel_2)\n                                            processScenario(btnScenarioId_2, btnLabel_2)\n                                        }}\n                                    >\n                                        {btnLabel_2}\n                                    </Button>\n\n                                </Grid>\n                            </Grid>\n                            {/* <button onClick={() => {\n                            selectBtnText(btnScenarioId_1, btnLabel_1)\n                            processScenario(btnScenarioId_1, btnLabel_1)\n                        }}>{btnLabel_1}</button>\n                        <button onClick={() => {\n                            selectBtnText(btnScenarioId_2, btnLabel_2)\n                            processScenario(btnScenarioId_2, btnLabel_2)\n                        }}>{btnLabel_2}</button> */}\n                        </div>\n\n                        // <button className={classes.buttonDesign} onClick={() => { processScenario(\"\", \"\") }}>↑</button>\n                        : isReply == true ?\n                            <div className={classes.selectButton}>\n                                <div className={classes.sendButtonContainer}>\n                                    <div className={classes.sendButtonWrapper}>\n                                        <InputBase\n                                            className={classes.input}\n                                            placeholder=\"入力してください\"\n                                            inputProps={{ 'aria-label': 'search google maps' }}\n                                            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                                                handleReplyChange(e)}\n                                        />\n                                        <IconButton\n                                            type=\"submit\"\n                                            className={classes.iconButton}\n                                            aria-label=\"search\"\n                                            onClick={() => replyText(currentSentenceId, reply)}\n                                        >\n                                            <ForwardIcon />\n                                        </IconButton>\n                                    </div>\n                                </div>\n                                {/*<Grid container justify=\"center\" alignItems=\"center\">*/}\n                                {/*<Grid item xs={10} className={classes.sendButtonWrapper}>*/}\n                                {/*<TextField id=\"standard-basic\" label=\"入力してください\" onChange={(e: React.ChangeEvent<HTMLInputElement>) =>*/}\n                                {/*    handleReplyChange(e)*/}\n                                {/*} />*/}\n                                {/*</Grid>*/}\n                                {/*<Grid item xs={3}>*/}\n                                {/*    <div className={classes.sendButtonWrapper}>*/}\n                                {/*        <Button*/}\n                                {/*            variant=\"contained\"*/}\n                                {/*            disableElevation*/}\n                                {/*            onClick={() => replyText(currentSentenceId, reply)}*/}\n                                {/*        >*/}\n                                {/*            送信*/}\n                                {/*        </Button>*/}\n                                {/*</Grid>*/}\n                                {/*</Grid>*/}\n                                {/* <input\n                                id=\"replyText\"\n                                type=\"input\"\n                                name=\"reply\"\n                                placeholder=\"ここに入力して送信ボタンを押してください\"\n                                onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                                    handleReplyChange(e)\n                                }\n                            /> */}\n                                {/* <button onClick={() => {\n                                replyText(currentSentenceId, reply)\n                                // processScenario(btnScenarioId_1, \"0\")\n                            }}>送信</button> */}\n                            </div>\n                            : currentSentenceId === \"5\" ? //東京\n                                <div className={classes.mapLabel}>\n                                    目的地に到着したら下のマップページでチェックインしてシナリオを進めましょう\n                                </div>\n\n                            : currentSentenceId === \"68\" ?//大谷資料館\n                                <div className={classes.mapLabel}>\n                                    目的地に到着したら下のマップページでチェックインしてシナリオを進めましょう\n                            </div>\n                                : currentSentenceId === \"125\" ?//クーリ・ルージュ\n                                    <div className={classes.mapLabel}>\n                                        目的地に到着したら下のマップページでチェックインしてシナリオを進めましょう\n                            </div>\n\n                                    : currentSentenceId === \"165\" ?//若竹\n                                        <div className={classes.mapLabel}>\n                                            目的地に到着したら下のマップページでチェックインしてシナリオを進めましょう\n                              </div>\n\n                                        : currentSentenceId === \"216\" ?//二荒山神社\n                                            <div className={classes.mapLabel}>\n                                                目的地に到着したら下のマップページでチェックインしてシナリオを進めましょう\n                              </div>\n\n                                            : currentSentenceId === \"308\" ?//二荒山神社\n                                                <div className={classes.mapLabel}>\n                                                    目的地に到着したら下のマップページでチェックインしてシナリオを進めましょう\n                              </div>\n\n                                                : currentSentenceId === \"410\" ?//二荒山神社\n                                                    <div className={classes.mapLabel}>\n                                                        目的地に到着したら下のマップページでチェックインしてシナリオを進めましょう\n                              </div>\n\n                                                    : currentSentenceId === \"464\" ?//クラッセ\n                                                        <div className={classes.mapLabel}>\n                                                            目的地に到着したら下のマップページでチェックインしてシナリオを進めましょう\n                              </div>\n                                                        : currentSentenceId === \"546\" ?//SELECT\n                                                            <div className={classes.mapLabel}>\n                                                                目的地に到着したら下のマップページでチェックインしてシナリオを進めましょう\n                              </div>\n                                                            : currentSentenceId === \"625\" ?//最上\n                                                                <div className={classes.mapLabel}>\n                                                                    目的地に到着したら下のマップページでチェックインしてシナリオを進めましょう\n                              </div>\n                                                                : currentSentenceId === \"672\" ?//森林公園\n                                                                    <div className={classes.mapLabel}>\n                                                                        目的地に到着したら下のマップページでチェックインしてシナリオを進めましょう\n                              </div>\n                                                                    : currentSentenceId === \"730\" ?//森林公園\n                                                                        <div className={classes.mapLabel}>\n                                                                            目的地に到着したら下のマップページでチェックインしてシナリオを進めましょう\n                              </div>\n\n\n                                                                        :\n                                                                        <img className={classes.buttonDesign} src={Tap} onClick={() => { processScenario(\"\", \"\") }} />\n                        // <button className={classes.buttonDesign} onClick={() => { processScenario(\"\", \"\") }}>↑</button>\n\n                    }\n                    <BottomTab />\n                    {/* <Footer /> */}\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}