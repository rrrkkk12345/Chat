{"ast":null,"code":"var _jsxFileName = \"/Users/rei.kawasato/Desktop/travel/src/pages/passwordChange.tsx\";\nimport React, { useState } from 'react';\nimport useReactRouter from 'use-react-router';\nimport { useDispatch } from \"react-redux\";\nimport { makeStyles, TextField } from '@material-ui/core';\n\nconst Frame = require('../assets/decorativeframe2.png');\n\nconst baseFontColor = '#4575b4';\nconst useStyles = makeStyles({\n  startText: {\n    // borderBottom: \"1px solid #4575B4\",\n    backgroundColor: \"#EFEDE9\",\n    fontSize: \"15px\",\n    color: \"#4575B4\",\n    width: \"60%\",\n    height: \"5%\",\n    marginTop: \"-70%\",\n    marginLeft: \"20%\",\n    zIndex: 2,\n    position: 'absolute',\n    // letterSpacing: \"6px\",\n    fontFamily: \"メイリオ\",\n    textAlign: \"center\",\n    // lineHeight: \"50px\",\n    paddingBottom: \"1px\"\n  },\n  buttonDesign: {\n    // borderBottom: \"1px solid #4575B4\",\n    backgroundColor: \"#EFEDE9\",\n    fontSize: \"15px\",\n    color: \"#4575B4\",\n    width: \"60%\",\n    height: \"5%\",\n    marginTop: \"20%\",\n    marginLeft: \"20%\",\n    zIndex: 2,\n    position: 'absolute',\n    // letterSpacing: \"6px\",\n    fontFamily: \"メイリオ\",\n    textAlign: \"center\",\n    // lineHeight: \"50px\",\n    paddingBottom: \"1px\"\n  },\n  toStart: {\n    color: 'blue',\n    zIndex: 2,\n    borderBottom: '1px solid blue'\n  },\n  title: {\n    textAlign: 'center',\n    zIndex: 2,\n    alignItems: 'top'\n  },\n  border: {\n    marginLeft: 125,\n    textAlign: 'center',\n    border: '1px solid',\n    borderColor: 'blue',\n    zIndex: 2\n  },\n  center_wrapper: {\n    zIndex: 2,\n    textAlign: 'center'\n  },\n  frameDesign: {\n    zIndex: 500,\n    width: \"90%\",\n    height: \"70%\",\n    display: 'flex',\n    alignItems: 'top',\n    //縦\n    marginTop: \"10%\",\n    justifyContent: 'center',\n    marginLeft: '3%',\n    padding: 10\n  },\n  loginButtonWrapper: {\n    marginBottom: '1rem',\n    position: 'relative',\n    width: '100%',\n    '& .MuiButton-disableElevation': {\n      width: '100%',\n      height: '50px',\n      backgroundColor: baseFontColor,\n      fontWeight: 'bold',\n      fontSize: '17px',\n      color: '#ffffff',\n      borderRadius: 8\n    }\n  }\n});\n\nconst PasswordChange = () => {\n  const classes = useStyles();\n  const title = \"選択式ミステリー旅行\";\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [previousPassword, setPreviousPassword] = useState('');\n  const [proposePassword, setProposePassword] = useState('');\n  const {\n    history\n  } = useReactRouter();\n  const dispatch = useDispatch();\n  const [securityCode, setSecurityCode] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const jwt = JSON.parse(localStorage.getItem('jwt'));\n  const {\n    Authorization,\n    Accesstoken\n  } = jwt;\n\n  const passwordChange = async event => {\n    console.log(localStorage.getItem('jwt'));\n\n    if (previousPassword && proposePassword) {\n      fetch(\"https://jtb-prd.two-choices.jp/api/change_password/\", {\n        //非同期処理\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': Authorization,\n          'accesstoken': Accesstoken\n        },\n        body: JSON.stringify({\n          previousPassword: previousPassword,\n          proposePassword: proposePassword\n        })\n      }).then(async res => {\n        if (res.status === 200) {\n          console.log(res.status, typeof res.status);\n          window.alert(\"パスワード変更完了しました。次回ログイン時は新規パスワードをご利用ください。\");\n          history.push('/tutorial');\n        } else {\n          setErrorMessage('通信でエラーが発生しました');\n        }\n      }).catch(error => {\n        if (error.statusCode >= 400) setErrorMessage('通信でエラーが発生しました');\n      }); //同期処理\n    } else {\n      setErrorMessage('新旧パスワードを入力してください');\n    }\n  };\n\n  return (\n    /*#__PURE__*/\n    // <div className={commonStyle.accountFormInner}>\n    //   <div className={commonStyle.accountFormMain}>\n    //     <div className={commonStyle.accountFormWrapper}>\n    //       <div className={commonStyle.accountFormCardContainer}>\n    //         <h1 className={commonStyle.accountFormTitle}>\n    //           パスワード変更\n    //             </h1>\n    //         {errorMessage ? <p className={commonStyle.accountFormError}>{errorMessage}</p> : null}\n    //         <form className={commonStyle.accountForm}>\n    //           <div className={commonStyle.accountFormContent}>\n    //             <p>\n    //               <input\n    //                 type=\"password\"\n    //                 name=\"oldPassword\"\n    //                 placeholder=\"旧パスワードを入力\"\n    //                 // value={oldPassword}\n    //                 onChange={e => setPreviousPassword(e.target.value)}\n    //               />\n    //             </p>\n    //             <p>\n    //               <input\n    //                 type=\"password\"\n    //                 name=\"newPassword\"\n    //                 placeholder=\"新パスワードを入力\"\n    //                 // value={newPassword}\n    //                 onChange={e => setProposePassword(e.target.value)}\n    //               />\n    //             </p>\n    //           </div>\n    //           <p>※8文字以上。大文字・小文字英数字・記号を１つ以上</p>              \n    //           <div className={classes.loginButtonWrapper}>\n    //             <button\n    //               className={commonStyle.accountFormButton}\n    //               onClick={e => passwordChange(e)}\n    //             >変更する\n    //             </button>\n    //           </div>\n    //           {/* <span\n    //             // className={`${commonStyle.accountFormButtonLink} ${hover? commonStyle.buttonLinkHover: \"\"}`}\n    //             // onMouseEnter={() => setHover(true)}\n    //             // onMouseLeave={() => setHover(false)}\n    //             >\n    //               変更する\n    //                 </span> */}\n    //         </form>\n    //       </div>\n    //     </div>\n    //   </div>\n    // </div>\n    React.createElement(\"div\", {\n      className: classes.center_wrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: classes.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 7\n      }\n    }, \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\\u3092\\u5909\\u66F4\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.buttonDesign,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      noValidate: true,\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-basic\",\n      label: \"\\u65E7\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\\u3092\\u5165\\u529B\",\n      type: \"password\",\n      fullWidth: true,\n      onChange: e => setPreviousPassword(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-basic\",\n      label: \"\\u65B0\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\\u3092\\u5165\\u529B\\uFF08\\u78BA\\u8A8D\\u7528\\uFF09\",\n      type: \"password\",\n      fullWidth: true,\n      onChange: e => setProposePassword(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 12\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: e => passwordChange(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }\n    }, \"\\u9001\\u4FE1\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 7\n      }\n    }), \"8\\u6587\\u5B57\\u4EE5\\u4E0A\\u3002\\u5927\\u6587\\u5B57\\u30FB\\u5C0F\\u6587\\u5B57\\u82F1\\u6570\\u5B57\\u30FB\\u8A18\\u53F7\\u3092\\uFF11\\u3064\\u4EE5\\u4E0A\", /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.startText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 7\n      }\n    }, \" \\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\\u3092\\u304A\\u5FD8\\u308C\\u306E\\u65B9\\u306F\\u3053\\u3061\\u3089\\u306B\\u30E1\\u30FC\\u30EB\\u30A2\\u30C9\\u30EC\\u30B9\\u3092\\u5165\\u529B\\u3057\\u3001\\u9001\\u4FE1\\u30DC\\u30BF\\u30F3\\u3092\\u62BC\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\"))\n  );\n};\n\nexport default PasswordChange;","map":{"version":3,"sources":["/Users/rei.kawasato/Desktop/travel/src/pages/passwordChange.tsx"],"names":["React","useState","useReactRouter","useDispatch","makeStyles","TextField","Frame","require","baseFontColor","useStyles","startText","backgroundColor","fontSize","color","width","height","marginTop","marginLeft","zIndex","position","fontFamily","textAlign","paddingBottom","buttonDesign","toStart","borderBottom","title","alignItems","border","borderColor","center_wrapper","frameDesign","display","justifyContent","padding","loginButtonWrapper","marginBottom","fontWeight","borderRadius","PasswordChange","classes","email","setEmail","password","setPassword","previousPassword","setPreviousPassword","proposePassword","setProposePassword","history","dispatch","securityCode","setSecurityCode","errorMessage","setErrorMessage","jwt","JSON","parse","localStorage","getItem","Authorization","Accesstoken","passwordChange","event","console","log","fetch","method","headers","body","stringify","then","res","status","window","alert","push","catch","error","statusCode","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport useReactRouter from 'use-react-router';\nimport { useDispatch } from \"react-redux\";\nimport pageActionModule, { usePageAction } from \"../modules/pageActionModule\";\nimport { login } from '../modules/api';\nimport commonStyle from './accountCommon.module.css';\nimport { Typography, makeStyles, TextField, Grid, Box, Button } from '@material-ui/core'\nconst Frame = require('../assets/decorativeframe2.png');\nconst baseFontColor = '#4575b4';\nconst useStyles = makeStyles({\n  startText: {\n    // borderBottom: \"1px solid #4575B4\",\n    backgroundColor: \"#EFEDE9\",\n    fontSize: \"15px\",\n    color: \"#4575B4\",\n    width: \"60%\",\n    height: \"5%\",\n    marginTop: \"-70%\",\n    marginLeft: \"20%\",\n    zIndex: 2,\n    position: 'absolute',\n    // letterSpacing: \"6px\",\n    fontFamily: \"メイリオ\",\n    textAlign: \"center\",\n    // lineHeight: \"50px\",\n    paddingBottom: \"1px\",\n  },\n  buttonDesign: {\n    // borderBottom: \"1px solid #4575B4\",\n    backgroundColor: \"#EFEDE9\",\n    fontSize: \"15px\",\n    color: \"#4575B4\",\n    width: \"60%\",\n    height: \"5%\",\n    marginTop: \"20%\",\n    marginLeft: \"20%\",\n    zIndex: 2,\n    position: 'absolute',\n    // letterSpacing: \"6px\",\n    fontFamily: \"メイリオ\",\n    textAlign: \"center\",\n    // lineHeight: \"50px\",\n    paddingBottom: \"1px\",\n  },\n  toStart: {\n    color: 'blue',\n    zIndex: 2,\n    borderBottom: '1px solid blue'\n  },\n  title: {\n    textAlign: 'center',\n    zIndex: 2,\n    alignItems: 'top'\n  },\n  border: {\n    marginLeft: 125,\n    textAlign: 'center',\n    border: '1px solid',\n    borderColor: 'blue',\n    zIndex: 2,\n  },\n  center_wrapper: {\n    zIndex: 2,\n    textAlign: 'center',\n  },\n  frameDesign: {\n    zIndex: 500,\n    width: \"90%\",\n    height: \"70%\",\n    display: 'flex',\n    alignItems: 'top',//縦\n    marginTop: \"10%\",\n    justifyContent: 'center',\n    marginLeft: '3%',\n    padding: 10,\n  },\n  loginButtonWrapper: {\n    marginBottom: '1rem',\n    position: 'relative',\n    width: '100%',\n    '& .MuiButton-disableElevation': {\n      width: '100%',\n      height: '50px',\n      backgroundColor: baseFontColor,\n      fontWeight: 'bold',\n      fontSize: '17px',\n      color: '#ffffff',\n      borderRadius: 8,\n    },\n  },\n})\n\nconst PasswordChange: React.FC = () => {\n  const classes = useStyles()\n  const title = \"選択式ミステリー旅行\"\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [previousPassword, setPreviousPassword] = useState('');\n  const [proposePassword, setProposePassword] = useState('');\n  const { history } = useReactRouter();\n  const dispatch = useDispatch();\n  const [securityCode, setSecurityCode] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const jwt = JSON.parse(localStorage.getItem('jwt') as string)\n  const { Authorization, Accesstoken } = jwt\n\n  const passwordChange = async (event: React.MouseEvent<HTMLElement>) => {\n    console.log(localStorage.getItem('jwt'))\n    if (previousPassword && proposePassword) {\n      fetch(\"https://jtb-prd.two-choices.jp/api/change_password/\", {//非同期処理\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': Authorization,\n          'accesstoken': Accesstoken\n        },\n        body: JSON.stringify({ previousPassword: previousPassword, proposePassword: proposePassword })\n\n      }).then(async (res: any) => {\n        if (res.status === 200) {\n          console.log(res.status, typeof res.status)\n          window.alert(\"パスワード変更完了しました。次回ログイン時は新規パスワードをご利用ください。\")\n          history.push('/tutorial')\n        } else {\n\n          setErrorMessage('通信でエラーが発生しました')\n        }\n\n      })\n        .catch(error => { if (error.statusCode >= 400) setErrorMessage('通信でエラーが発生しました') })//同期処理\n\n\n    } else {\n      setErrorMessage('新旧パスワードを入力してください');\n    }\n\n  }\n\n  return (\n    // <div className={commonStyle.accountFormInner}>\n    //   <div className={commonStyle.accountFormMain}>\n    //     <div className={commonStyle.accountFormWrapper}>\n    //       <div className={commonStyle.accountFormCardContainer}>\n    //         <h1 className={commonStyle.accountFormTitle}>\n    //           パスワード変更\n    //             </h1>\n    //         {errorMessage ? <p className={commonStyle.accountFormError}>{errorMessage}</p> : null}\n    //         <form className={commonStyle.accountForm}>\n    //           <div className={commonStyle.accountFormContent}>\n    //             <p>\n    //               <input\n    //                 type=\"password\"\n    //                 name=\"oldPassword\"\n    //                 placeholder=\"旧パスワードを入力\"\n    //                 // value={oldPassword}\n    //                 onChange={e => setPreviousPassword(e.target.value)}\n    //               />\n    //             </p>\n\n    //             <p>\n    //               <input\n    //                 type=\"password\"\n    //                 name=\"newPassword\"\n    //                 placeholder=\"新パスワードを入力\"\n    //                 // value={newPassword}\n    //                 onChange={e => setProposePassword(e.target.value)}\n    //               />\n    //             </p>\n    //           </div>\n    //           <p>※8文字以上。大文字・小文字英数字・記号を１つ以上</p>              \n    //           <div className={classes.loginButtonWrapper}>\n    //             <button\n    //               className={commonStyle.accountFormButton}\n    //               onClick={e => passwordChange(e)}\n    //             >変更する\n    //             </button>\n\n    //           </div>\n    //           {/* <span\n    //             // className={`${commonStyle.accountFormButtonLink} ${hover? commonStyle.buttonLinkHover: \"\"}`}\n    //             // onMouseEnter={() => setHover(true)}\n    //             // onMouseLeave={() => setHover(false)}\n    //             >\n    //               変更する\n    //                 </span> */}\n    //         </form>\n    //       </div>\n    //     </div>\n    //   </div>\n    // </div>\n    <div className={classes.center_wrapper}>\n      {/* <p className={classes.title}>{title}</p> */}\n      <p className={classes.title}>パスワードを変更してください</p>\n      <div className={classes.buttonDesign}>\n        {/* <input\n          type=\"password\"\n          name=\"oldPassword\"\n          placeholder=\"旧パスワードを入力\"\n        // value={oldPassword}\n        // onChange={e => setOldPassword(e.target.value)}\n        /> */}\n        <div></div>\n        <form  noValidate autoComplete=\"off\">\n          <TextField \n          id=\"standard-basic\" \n          label=\"旧パスワードを入力\" \n          type=\"password\"\n          fullWidth\n          onChange={e => setPreviousPassword(e.target.value)}\n          />\n          <div></div>\n           <TextField \n          id=\"standard-basic\" \n          label=\"新パスワードを入力（確認用）\" \n          type=\"password\"\n          fullWidth\n          onChange={e => setProposePassword(e.target.value)}\n          />\n        </form>\n        {/* <input\n          type=\"password\"\n          name=\"newPassword\"\n          placeholder=\"新パスワードを入力\"\n          // value={newPassword}\n          onChange={e => setPreviousPassword(e.target.value)}\n        />\n        <input\n          type=\"password\"\n          name=\"newPassworVerify\"\n          placeholder=\"新パスワードを入力（確認用）\"\n          // value={newPassworVerify}\n          onChange={e => setProposePassword(e.target.value)}\n        /> */}\n        <div></div>\n        <button\n          onClick={(e) => passwordChange(e)}\n        >\n          送信\n        </button>\n\n      </div>\n      <div></div>\n      8文字以上。大文字・小文字英数字・記号を１つ以上\n      <div className={classes.startText}> パスワードをお忘れの方はこちらにメールアドレスを入力し、送信ボタンを押してください</div>\n\n    </div>\n  )\n}\n\n\nexport default PasswordChange;"]},"metadata":{},"sourceType":"module"}