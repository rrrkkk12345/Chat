{"ast":null,"code":"import _slicedToArray from\"/Users/rei.kawasato/Desktop/travel/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{GoogleMap,useLoadScript,Marker,Circle}from\"@react-google-maps/api\";import useReactRouter from'use-react-router';import{makeStyles,Button}from'@material-ui/core';var TabChatOff=require('../assets/TabChatOff.png');var TabMapOn=require('../assets/TabMapOn.png');var baseFontColor='#4575b4';var useStyles=makeStyles(function(theme){return{bottomTab:{position:\"fixed\",bottom:\"0\",height:\"10%\",width:\"100%\",backgroundColor:\"#eeedea\",display:\"flex\",flexDirection:\"row\",textAlign:\"center\",justifyContent:\"center\",alignItems:\"center\"},bottomChat:{// border: \"2px solid\",\n// borderColor: \"pink\",\nflex:1},bottomMap:{// border: \"2px solid\",\n// borderColor: \"pink\",\nflex:1},mapWrapper:{width:\"100%\",hight:\"100%\",position:\"fixed\"// borderRadius: \"50%\",\n// backgroundColor: \"blue\",\n// zIndex:100,\n// marginLeft: \"40%\",\n// fontFamily: 'メイリオ',\n// cursor: \"pointer\",\n},checkIn:{position:\"fixed\",bottom:\"15%\",left:\"38%\",color:'#ffffff',backgroundColor:baseFontColor}};});var mapContainerStyle={width:\"100vw\",height:\"100vh\"};var center={lat:36.559707,lng:139.898472};var options={disableDefaultUI:true,zoomControl:true};var BottomTab=function BottomTab(){var _useReactRouter=useReactRouter(),history=_useReactRouter.history;var classes=useStyles();return/*#__PURE__*/React.createElement(\"div\",{className:classes.bottomTab},/*#__PURE__*/React.createElement(\"div\",{className:classes.bottomChat},/*#__PURE__*/React.createElement(\"img\",{src:TabChatOff,onClick:function onClick(){return history.push(\"/chat\");}}),/*#__PURE__*/React.createElement(\"div\",null,\"\\u30C1\\u30E3\\u30C3\\u30C8\")),/*#__PURE__*/React.createElement(\"div\",{className:classes.bottomMap},/*#__PURE__*/React.createElement(\"img\",{src:TabMapOn}),/*#__PURE__*/React.createElement(\"div\",null,\"\\u30DE\\u30C3\\u30D7\")));};var libraries=[\"places\",\"geometry\"];var GoogleMapAPI=function GoogleMapAPI(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),utsunomiyaShow=_useState2[0],setUtsunomiyaShow=_useState2[1];var classes=useStyles();useEffect(function(){var jwt=JSON.parse(localStorage.getItem('jwt'));var Authorization=jwt.Authorization,Accesstoken=jwt.Accesstoken;var scenarioHist=JSON.parse(localStorage.getItem('scenarioHist'));if(scenarioHist){console.log(\"Localstorage\");console.log(scenarioHist);if(scenarioHist.slice(-1)[0].nextSentenceId===\"5\"){setUtsunomiyaShow(true);}}else{console.log(\"DB\");//ログから会話履歴をもってくる\n//id削除\nfetch(\"https://jtb-prd.two-choices.jp/api/scenario/log/\",{method:'GET',headers:{'Content-Type':'application/json','Authorization':Authorization,'accesstoken':Accesstoken}}).then(function(res){return res.json();}).then(function(data){var localHistory=localStorage.setItem('scenarioHist',JSON.stringify(data.ScenarioHistory));var scenarioGet=JSON.parse(localStorage.getItem('scenarioHist'));console.log(scenarioGet);});}},[]);// function  getDestinationFromChat(destinationFromChat:string){\n//     const [destination, setDestination] = useState(\"\")\n//     setDestination(props.a)\n//     console.log(\"aaa\")\n// }\nvar _useState3=useState(),_useState4=_slicedToArray(_useState3,2),position=_useState4[0],setPosition=_useState4[1];//-----------------------------------------------------------\nvar googleMapsApiKey=process.env.REACT_APP_GOOGLE_MAPS_API_KEY;var _useLoadScript=useLoadScript({googleMapsApiKey:googleMapsApiKey,libraries:libraries}),isLoaded=_useLoadScript.isLoaded,loadError=_useLoadScript.loadError;if(loadError)return/*#__PURE__*/React.createElement(\"h1\",null,\"\\\"Error loading maps\\\"\");//returnあとにusestate入れるとだめ\nif(!isLoaded)return/*#__PURE__*/React.createElement(\"h1\",null,\"Loading maps\");//-----------------------------------------------------------\n//-----------------------------------------------------------\n// const utsunomiya = new google.maps.LatLng(36.559707, 139.898472) //宇都宮駅\n// const utsunomiya = new google.maps.LatLng(35.75098387956675, 139.7615640423288) //小台\nvar utsunomiya=new google.maps.LatLng(36.2048239999999995,138.252924);//PC\nvar tokyo=new google.maps.LatLng(35.681215917748915,139.76707964692983);//東京駅\nvar oyashiryokan=new google.maps.LatLng(36.602020,139.824747);//大谷資料館\nvar oyadera=new google.maps.LatLng(36.597424,139.820439);//大谷寺\nvar kuriruju=new google.maps.LatLng(36.631208,139.827650);//クーリ・ルージュ\nvar mogamijaya=new google.maps.LatLng(36.617913,139.820958);//最上茶屋\nvar wakatake=new google.maps.LatLng(36.616712,139.849803);//若竹の社\nvar utsunomiyaZoo=new google.maps.LatLng(36.632781,139.853577);//宇都宮動物園\nvar utsunomiyaPark=new google.maps.LatLng(36.618265,139.790336);//宇都宮森林公園\nvar matsugamine=new google.maps.LatLng(36.558171,139.881408);//松が峰教会\nvar kurasse=new google.maps.LatLng(36.560851,139.885278);//来らっせ\nvar utsunomiyaTower=new google.maps.LatLng(36.570387,139.885919);//宇都宮タワー\nvar selectCafe=new google.maps.LatLng(36.560085,139.902119);//SELECT\nvar test=new google.maps.LatLng(36.204823999,138.272924);//テスト\n//-----------------------------------------------------------\n// const res = google.maps.geometry.spherical.computeDistanceBetween(oyasiryokan, utsunomiya) \n// console.log(res)\nvar tokyoArea=new google.maps.Circle({//範囲情報\nstrokeColor:'#FF0000',strokeOpacity:0.5,strokeWeight:2,fillColor:'#FF0000',fillOpacity:0.2,// map: map,\ncenter:tokyo,radius:500});var utsunomiyaArea=new google.maps.Circle({//範囲情報\nstrokeColor:'#FF0000',strokeOpacity:0.5,strokeWeight:2,fillColor:'#FF0000',fillOpacity:0.2,// map: map,\ncenter:utsunomiya,radius:100});var oyashiryokanArea=new google.maps.Circle({//範囲情報\nstrokeColor:'#FF0000',strokeOpacity:0.5,strokeWeight:2,fillColor:'#FF0000',fillOpacity:0.2,// map: map,\ncenter:oyashiryokan,radius:1000});var oyaderaArea=new google.maps.Circle({//範囲情報\nstrokeColor:'#FF0000',strokeOpacity:0.5,strokeWeight:2,fillColor:'#FF0000',fillOpacity:0.2,// map: map,\ncenter:oyadera,radius:500});var kurirujuArea=new google.maps.Circle({//範囲情報\nstrokeColor:'#FF0000',strokeOpacity:0.5,strokeWeight:2,fillColor:'#FF0000',fillOpacity:0.2,// map: map,\ncenter:kuriruju,radius:500});var mogamijayaArea=new google.maps.Circle({//範囲情報\nstrokeColor:'#FF0000',strokeOpacity:0.5,strokeWeight:2,fillColor:'#FF0000',fillOpacity:0.2,// map: map,\ncenter:mogamijaya,radius:100});var wakatakeArea=new google.maps.Circle({//範囲情報\nstrokeColor:'#FF0000',strokeOpacity:0.5,strokeWeight:2,fillColor:'#FF0000',fillOpacity:0.2,// map: map,\ncenter:wakatake,radius:100});var utsunomiyaZooArea=new google.maps.Circle({//範囲情報\nstrokeColor:'#FF0000',strokeOpacity:0.5,strokeWeight:2,fillColor:'#FF0000',fillOpacity:0.2,// map: map,\ncenter:utsunomiyaZoo,radius:100});var utsunomiyaParkArea=new google.maps.Circle({//範囲情報\nstrokeColor:'#FF0000',strokeOpacity:0.5,strokeWeight:2,fillColor:'#FF0000',fillOpacity:0.2,// map: map,\ncenter:utsunomiyaPark,radius:1000});var matsugamineArea=new google.maps.Circle({//範囲情報\nstrokeColor:'#FF0000',strokeOpacity:0.5,strokeWeight:2,fillColor:'#FF0000',fillOpacity:0.2,// map: map,\ncenter:matsugamine,radius:100});var kurasseArea=new google.maps.Circle({//範囲情報\nstrokeColor:'#FF0000',strokeOpacity:0.5,strokeWeight:2,fillColor:'#FF0000',fillOpacity:0.2,// map: map,\ncenter:kurasse,radius:100});var utsunomiyaTowerArea=new google.maps.Circle({//範囲情報\nstrokeColor:'#FF0000',strokeOpacity:0.5,strokeWeight:2,fillColor:'#FF0000',fillOpacity:0.2,// map: map,\ncenter:utsunomiyaTower,radius:100});var selectCafeArea=new google.maps.Circle({//範囲情報\nstrokeColor:'#FF0000',strokeOpacity:0.5,strokeWeight:2,fillColor:'#FF0000',fillOpacity:0.2,// map: map,\ncenter:selectCafe,radius:100});var testArea=new google.maps.Circle({//範囲情報\nstrokeColor:'#FF0000',strokeOpacity:0.5,strokeWeight:2,fillColor:'#FF0000',fillOpacity:0.2,// map: map,\ncenter:test,radius:100});//-----------------------------------------------------------\n// const [isAvailable, setAvailable] = useState(false);\n// const [position, setPosition] = useState<{ latitude: number, longitude: number }>();\n// // useEffectが実行されているかどうかを判定するために用意しています\n// const isFirstRef = useRef(true);\n/*\n     * ページ描画時にGeolocation APIが使えるかどうかをチェックしています\n     * もし使えなければその旨のエラーメッセージを表示させます\n     */ // useEffect(() => {\n//     isFirstRef.current = false;\n//     if ('geolocation' in navigator) {\n//         setAvailable(true);\n//     }\n// }, [isAvailable]);\nfunction error(error){var errorMessage={0:\"原因不明のエラーが発生しました…。\",1:\"位置情報の取得が許可されませんでした…。\",2:\"電波状況などで位置情報が取得できませんでした…。\",3:\"位置情報の取得に時間がかかり過ぎてタイムアウトしました…。\"};console.log(errorMessage[error.code]);//getccurentpotion\n}var getCurrentPosition=function getCurrentPosition(){navigator.geolocation.getCurrentPosition(function(position){var data=position.coords;var lat=data.latitude;var lng=data.longitude;var latlng=new google.maps.LatLng(lat,lng);// var canvas = document.getElementById('map-canvas') as Element;\n// document.getElementById('google').innerHTML= \"String(lat)\" ;\n// var mapOptions = {\n//     zoom: 15,\n//     center: latlng,\n//     mapTypeId: google.maps.MapTypeId.ROADMAP\n// }\n// var map = new google.maps.Map(canvas, mapOptions);\n// const {lati,longa} = position.coords\n// alert(lat)\n// alert(lng)\nsetPosition({latitude:lat,longitude:lng});// marker\nvar markerOptions={// map: map,\nposition:latlng,draggable:true,visible:true};new google.maps.Marker(markerOptions);//宇都宮駅\nif(google.maps.geometry.spherical.computeDistanceBetween(latlng,utsunomiyaArea.getCenter())<=utsunomiyaArea.getRadius()){//領域判定\nconsole.log(\"宇都宮駅範囲内\");// alert(\"宇都宮駅範囲内\")\n}else{console.log(\"宇都宮駅範囲外\");// alert(\"宇都宮駅範囲外\")\n}//大谷資料館\nif(google.maps.geometry.spherical.computeDistanceBetween(latlng,oyashiryokanArea.getCenter())<=oyashiryokanArea.getRadius()){//領域判定\nconsole.log(\"大谷資料館範囲内\");// alert(\"大谷資料館範囲内\")\n}else{console.log(\"大谷資料館範囲外\");// alert(\"大谷資料館範囲外\")\n}//東京駅\nif(google.maps.geometry.spherical.computeDistanceBetween(latlng,tokyoArea.getCenter())<=tokyoArea.getRadius()){//領域判定\nconsole.log(\"東京駅範囲内\");var jwt=JSON.parse(localStorage.getItem('jwt'));var Authorization=jwt.Authorization,Accesstoken=jwt.Accesstoken;var scenarioHist=JSON.parse(localStorage.getItem('scenarioHist'));console.log(\"Localstorage\");// Object.keys(scenarioHist).map((sc: any) => {\n//     console.log(scenarioHist)\n//     scenarioLog && setScenarioLog([...scenarioLog, {\n//         id: \"\",\n//         personName: sc.personName,\n//         plane: sc.plane,\n//     }])\n//     // scenarioHist[\"id\"]=\"\"\n//     // localStorage.setItem('scenarioHist', JSON.stringify(scenarioHist))\n// })\nvar tmpArray=JSON.parse(localStorage.getItem('scenarioHist'));console.log(\"tmpArray:\",tmpArray);tmpArray.push({nextSentenceId:\"6\",personName:\"ナレーター\",plane:\"チェックインできました。\"});// localStorage.setItem('scenarioHist', JSON.stringify({ personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId }))\nlocalStorage.setItem('scenarioHist',JSON.stringify(tmpArray));console.log(\"DB\");//ログから会話履歴をもってくる\nfetch(\"https://jtb-prd.two-choices.jp/api/scenario/log/\",{method:'POST',headers:{'Content-Type':'application/json','Authorization':Authorization,'accesstoken':Accesstoken},// body: JSON.stringify({ scenario: { personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId } })\nbody:JSON.stringify({scenario:{nextSentenceId:\"6\",personName:\"ナレーター\",plane:\"チェックインできました。\"}})});window.alert(\"チェックインできました。チャット画面に戻ってシナリオを進めてください。\");}else{console.log(\"東京駅範囲外\");}//大谷寺\nif(google.maps.geometry.spherical.computeDistanceBetween(latlng,oyaderaArea.getCenter())<=oyaderaArea.getRadius()){//領域判定\nconsole.log(\"大谷寺範囲内\");// alert(\"大谷寺範囲内\")\n}else{console.log(\"大谷寺範囲外\");// alert(\"大谷寺範囲外\")\n}//クーリ・ルージュ\nif(google.maps.geometry.spherical.computeDistanceBetween(latlng,kurirujuArea.getCenter())<=kurirujuArea.getRadius()){//領域判定\nconsole.log(\"クーリ・ルージュ範囲内\");// alert(\"クーリ・ルージュ範囲内\")\n}else{console.log(\"クーリ・ルージュ範囲外\");// alert(\"クーリ・ルージュ範囲外\")\n}//最上茶屋\nif(google.maps.geometry.spherical.computeDistanceBetween(latlng,mogamijayaArea.getCenter())<=mogamijayaArea.getRadius()){//領域判定\nconsole.log(\"最上茶屋範囲内\");// alert(\"最上茶屋範囲内\")\n}else{console.log(\"最上茶屋範囲外\");// alert(\"最上茶屋範囲外\")\n}//若竹\nif(google.maps.geometry.spherical.computeDistanceBetween(latlng,wakatakeArea.getCenter())<=wakatakeArea.getRadius()){//領域判定\nconsole.log(\"若竹範囲内\");// alert(\"若竹範囲内\")\n}else{console.log(\"若竹範囲外\");// alert(\"若竹範囲外\")\n}//動物園\nif(google.maps.geometry.spherical.computeDistanceBetween(latlng,utsunomiyaZooArea.getCenter())<=utsunomiyaZooArea.getRadius()){//領域判定\nconsole.log(\"動物園範囲内\");// alert(\"動物園範囲内\")\n}else{console.log(\"動物園範囲外\");// alert(\"動物園範囲外\")\n}//公園\nif(google.maps.geometry.spherical.computeDistanceBetween(latlng,utsunomiyaParkArea.getCenter())<=utsunomiyaParkArea.getRadius()){//領域判定\nconsole.log(\"公園範囲内\");// alert(\"公園範囲内\")\n}else{console.log(\"公園範囲外\");// alert(\"公園範囲外\")\n}//松が峰\nif(google.maps.geometry.spherical.computeDistanceBetween(latlng,matsugamineArea.getCenter())<=matsugamineArea.getRadius()){//領域判定\nconsole.log(\"松が峰範囲内\");// alert(\"松が峰範囲内\")\n}else{console.log(\"松が峰範囲外\");// alert(\"松が峰範囲外\")\n}//くらっせ\nif(google.maps.geometry.spherical.computeDistanceBetween(latlng,kurasseArea.getCenter())<=kurasseArea.getRadius()){//領域判定\nconsole.log(\"くらっせ範囲内\");// alert(\"くらっせ範囲内\")\n}else{console.log(\"くらっせ範囲外\");// alert(\"くらっせ範囲外\")\n}//宇都宮タワー\nif(google.maps.geometry.spherical.computeDistanceBetween(latlng,utsunomiyaTowerArea.getCenter())<=utsunomiyaTowerArea.getRadius()){//領域判定\nconsole.log(\"宇都宮タワー範囲内\");// alert(\"宇都宮タワー範囲内\")\n}else{console.log(\"宇都宮タワー範囲外\");// alert(\"宇都宮タワー範囲外\")\n}//SELECT\nif(google.maps.geometry.spherical.computeDistanceBetween(latlng,selectCafeArea.getCenter())<=selectCafeArea.getRadius()){//領域判定\nconsole.log(\"SELECT範囲内\");// alert(\"SELECT範囲内\")\n}else{console.log(\"SELECT範囲外\");// alert(\"SELECT範囲外\")\n}//test\nif(google.maps.geometry.spherical.computeDistanceBetween(latlng,testArea.getCenter())<=testArea.getRadius()){//領域判定\nconsole.log(\"test範囲内\");}else{console.log(\"test駅範囲外\");}},function(failure){if(failure.message.startsWith(\"Only secure origins are allowed\")){console.log(\"secure issuess\");}});};//------------\nreturn/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:classes.mapWrapper},/*#__PURE__*/React.createElement(GoogleMap,{mapContainerStyle:mapContainerStyle,zoom:15,center:center,options:options},(position===null||position===void 0?void 0:position.latitude)&&/*#__PURE__*/React.createElement(Marker,{position:new google.maps.LatLng(position===null||position===void 0?void 0:position.latitude,position===null||position===void 0?void 0:position.longitude)//値が入っていることを保証しないとエラー\n// icon={\"📝\"}\n// label={\"Marker！！\"}\n// visible={true}\n// onLoad={onLoad}\n}),utsunomiyaShow===true?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Marker,{position:utsunomiyaArea.getCenter()// icon={\"📝\"}\n// label={\"Marker！！\"}\n// visible={true}\n// onLoad={onLoad}\n}),/*#__PURE__*/React.createElement(Circle,{center:utsunomiyaArea.getCenter(),radius:100,visible:true})):/*#__PURE__*/React.createElement(\"div\",null,\"aaa\"),/*#__PURE__*/React.createElement(Button,{className:classes.checkIn,variant:\"contained\",disableElevation:true,onClick:function onClick(){getCurrentPosition();}},\"\\u30C1\\u30A7\\u30C3\\u30AF\\u30A4\\u30F3\"))),/*#__PURE__*/React.createElement(BottomTab,null));};export default GoogleMapAPI;","map":{"version":3,"sources":["/Users/rei.kawasato/Desktop/travel/src/utils/googleMapAPI.tsx"],"names":["React","useState","useEffect","GoogleMap","useLoadScript","Marker","Circle","useReactRouter","makeStyles","Button","TabChatOff","require","TabMapOn","baseFontColor","useStyles","theme","bottomTab","position","bottom","height","width","backgroundColor","display","flexDirection","textAlign","justifyContent","alignItems","bottomChat","flex","bottomMap","mapWrapper","hight","checkIn","left","color","mapContainerStyle","center","lat","lng","options","disableDefaultUI","zoomControl","BottomTab","history","classes","push","libraries","GoogleMapAPI","props","utsunomiyaShow","setUtsunomiyaShow","jwt","JSON","parse","localStorage","getItem","Authorization","Accesstoken","scenarioHist","console","log","slice","nextSentenceId","fetch","method","headers","then","res","json","data","localHistory","setItem","stringify","ScenarioHistory","scenarioGet","setPosition","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","isLoaded","loadError","utsunomiya","google","maps","LatLng","tokyo","oyashiryokan","oyadera","kuriruju","mogamijaya","wakatake","utsunomiyaZoo","utsunomiyaPark","matsugamine","kurasse","utsunomiyaTower","selectCafe","test","tokyoArea","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","radius","utsunomiyaArea","oyashiryokanArea","oyaderaArea","kurirujuArea","mogamijayaArea","wakatakeArea","utsunomiyaZooArea","utsunomiyaParkArea","matsugamineArea","kurasseArea","utsunomiyaTowerArea","selectCafeArea","testArea","error","errorMessage","code","getCurrentPosition","navigator","geolocation","coords","latitude","longitude","latlng","markerOptions","draggable","visible","geometry","spherical","computeDistanceBetween","getCenter","getRadius","tmpArray","personName","plane","body","scenario","window","alert","failure","message","startsWith"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, SetStateAction } from 'react'\nimport {\n    GoogleMap,\n    useLoadScript,\n    Marker,\n    Circle,\n} from \"@react-google-maps/api\"\nimport { Libraries } from '@react-google-maps/api/dist/utils/make-load-script-url';\nimport useReactRouter from 'use-react-router';\nimport { Typography, makeStyles, Grid, Box, Button, ListItemAvatar, Avatar, List } from '@material-ui/core'\nconst TabChatOff = require('../assets/TabChatOff.png');\nconst TabMapOn = require('../assets/TabMapOn.png');\n\nconst baseFontColor = '#4575b4';\nconst useStyles = makeStyles((theme) => ({\n\n    bottomTab: {\n        position: \"fixed\",\n        bottom: \"0\",\n        height: \"10%\",\n        width: \"100%\",\n        backgroundColor: \"#eeedea\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        textAlign: \"center\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    bottomChat: {\n        // border: \"2px solid\",\n        // borderColor: \"pink\",\n        flex: 1,\n    },\n    bottomMap: {\n        // border: \"2px solid\",\n        // borderColor: \"pink\",\n        flex: 1,\n    },\n    mapWrapper: {\n        width: \"100%\",\n        hight: \"100%\",\n        position: \"fixed\",\n        // borderRadius: \"50%\",\n        // backgroundColor: \"blue\",\n        // zIndex:100,\n        // marginLeft: \"40%\",\n        // fontFamily: 'メイリオ',\n        // cursor: \"pointer\",\n    },\n    checkIn:{\n        position:\"fixed\",\n        bottom:\"15%\",\n        left:\"38%\",\n        color: '#ffffff',\n        backgroundColor: baseFontColor,\n    }\n}))\nconst mapContainerStyle = {\n    width: \"100vw\",\n    height: \"100vh\",\n};\n\nconst center = {\n    lat: 36.559707,\n    lng: 139.898472,\n};\n\nconst options = {\n    disableDefaultUI: true,\n    zoomControl: true\n};\n\nconst BottomTab: React.FC = () => {\n    const { history } = useReactRouter();\n    const classes = useStyles()\n    return (\n\n        <div className={classes.bottomTab}>\n            <div className={classes.bottomChat}>\n\n                <img src={TabChatOff} onClick={() => history.push(\"/chat\")} />\n                <div>\n                    チャット\n                </div>\n            </div>\n            <div className={classes.bottomMap} >\n\n                <img src={TabMapOn} />\n                <div>\n                    マップ\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst libraries: Libraries = [\"places\", \"geometry\"]\n\nconst GoogleMapAPI: React.FC<{ a: string }> = (props) => {\n    const [utsunomiyaShow, setUtsunomiyaShow] = useState(false)\n    const classes = useStyles()\n    useEffect(() => {\n        const jwt = JSON.parse(localStorage.getItem('jwt') as string)\n        const { Authorization, Accesstoken } = jwt\n        const scenarioHist: Array<{ nextSentenceId: string, personName: string, plane: string }> = JSON.parse(localStorage.getItem('scenarioHist') as string)\n\n\n        if (scenarioHist) {\n            console.log(\"Localstorage\")\n\n            console.log(scenarioHist)\n            if ((scenarioHist.slice(-1)[0].nextSentenceId === \"5\")) {\n                setUtsunomiyaShow(true)\n            }\n        } else {\n            console.log(\"DB\")\n\n            //ログから会話履歴をもってくる\n\n            //id削除\n            fetch(\"https://jtb-prd.two-choices.jp/api/scenario/log/\", {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': Authorization,\n                    'accesstoken': Accesstoken\n                },\n            }).then(res => res.json()).then(data => {\n\n                const localHistory = localStorage.setItem('scenarioHist', JSON.stringify(data.ScenarioHistory))\n                const scenarioGet: Array<{ nextSentenceId: string, personName: string, plane: string }> = JSON.parse(localStorage.getItem('scenarioHist') as string)\n                console.log(scenarioGet)\n            })\n        }\n    }, [])\n    // function  getDestinationFromChat(destinationFromChat:string){\n    //     const [destination, setDestination] = useState(\"\")\n    //     setDestination(props.a)\n    //     console.log(\"aaa\")\n    // }\n    const [position, setPosition] = useState<{ latitude: number, longitude: number }>();\n    //-----------------------------------------------------------\n    const googleMapsApiKey = process.env.REACT_APP_GOOGLE_MAPS_API_KEY as string\n\n    const { isLoaded, loadError } = useLoadScript({\n        googleMapsApiKey,\n        libraries: libraries,\n    });\n\n    if (loadError) return <h1>\"Error loading maps\"</h1>//returnあとにusestate入れるとだめ\n    if (!isLoaded) return <h1>Loading maps</h1>\n    //-----------------------------------------------------------\n\n    //-----------------------------------------------------------\n    // const utsunomiya = new google.maps.LatLng(36.559707, 139.898472) //宇都宮駅\n    // const utsunomiya = new google.maps.LatLng(35.75098387956675, 139.7615640423288) //小台\n    const utsunomiya = new google.maps.LatLng(36.2048239999999995, 138.252924) //PC\n    const tokyo = new google.maps.LatLng(35.681215917748915, 139.76707964692983) //東京駅\n    const oyashiryokan = new google.maps.LatLng(36.602020, 139.824747) //大谷資料館\n    const oyadera = new google.maps.LatLng(36.597424, 139.820439) //大谷寺\n    const kuriruju = new google.maps.LatLng(36.631208, 139.827650) //クーリ・ルージュ\n    const mogamijaya = new google.maps.LatLng(36.617913, 139.820958) //最上茶屋\n    const wakatake = new google.maps.LatLng(36.616712, 139.849803) //若竹の社\n    const utsunomiyaZoo = new google.maps.LatLng(36.632781, 139.853577) //宇都宮動物園\n    const utsunomiyaPark = new google.maps.LatLng(36.618265, 139.790336) //宇都宮森林公園\n    const matsugamine = new google.maps.LatLng(36.558171, 139.881408) //松が峰教会\n    const kurasse = new google.maps.LatLng(36.560851, 139.885278) //来らっせ\n    const utsunomiyaTower = new google.maps.LatLng(36.570387, 139.885919) //宇都宮タワー\n    const selectCafe = new google.maps.LatLng(36.560085, 139.902119) //SELECT\n    const test = new google.maps.LatLng(36.204823999, 138.272924) //テスト\n    //-----------------------------------------------------------\n    // const res = google.maps.geometry.spherical.computeDistanceBetween(oyasiryokan, utsunomiya) \n    // console.log(res)\n\n    const tokyoArea = new google.maps.Circle({ //範囲情報\n        strokeColor: '#FF0000',\n        strokeOpacity: 0.5,\n        strokeWeight: 2,\n        fillColor: '#FF0000',\n        fillOpacity: 0.2,\n        // map: map,\n        center: tokyo,\n        radius: 500\n    });\n    const utsunomiyaArea = new google.maps.Circle({ //範囲情報\n        strokeColor: '#FF0000',\n        strokeOpacity: 0.5,\n        strokeWeight: 2,\n        fillColor: '#FF0000',\n        fillOpacity: 0.2,\n        // map: map,\n        center: utsunomiya,\n        radius: 100\n    });\n\n    const oyashiryokanArea = new google.maps.Circle({ //範囲情報\n        strokeColor: '#FF0000',\n        strokeOpacity: 0.5,\n        strokeWeight: 2,\n        fillColor: '#FF0000',\n        fillOpacity: 0.2,\n        // map: map,\n        center: oyashiryokan,\n        radius: 1000\n    });\n    const oyaderaArea = new google.maps.Circle({ //範囲情報\n        strokeColor: '#FF0000',\n        strokeOpacity: 0.5,\n        strokeWeight: 2,\n        fillColor: '#FF0000',\n        fillOpacity: 0.2,\n        // map: map,\n        center: oyadera,\n        radius: 500\n    });\n    const kurirujuArea = new google.maps.Circle({ //範囲情報\n        strokeColor: '#FF0000',\n        strokeOpacity: 0.5,\n        strokeWeight: 2,\n        fillColor: '#FF0000',\n        fillOpacity: 0.2,\n        // map: map,\n        center: kuriruju,\n        radius: 500\n    });\n    const mogamijayaArea = new google.maps.Circle({ //範囲情報\n        strokeColor: '#FF0000',\n        strokeOpacity: 0.5,\n        strokeWeight: 2,\n        fillColor: '#FF0000',\n        fillOpacity: 0.2,\n        // map: map,\n        center: mogamijaya,\n        radius: 100\n    });\n    const wakatakeArea = new google.maps.Circle({ //範囲情報\n        strokeColor: '#FF0000',\n        strokeOpacity: 0.5,\n        strokeWeight: 2,\n        fillColor: '#FF0000',\n        fillOpacity: 0.2,\n        // map: map,\n        center: wakatake,\n        radius: 100\n    });\n    const utsunomiyaZooArea = new google.maps.Circle({ //範囲情報\n        strokeColor: '#FF0000',\n        strokeOpacity: 0.5,\n        strokeWeight: 2,\n        fillColor: '#FF0000',\n        fillOpacity: 0.2,\n        // map: map,\n        center: utsunomiyaZoo,\n        radius: 100\n    });\n    const utsunomiyaParkArea = new google.maps.Circle({ //範囲情報\n        strokeColor: '#FF0000',\n        strokeOpacity: 0.5,\n        strokeWeight: 2,\n        fillColor: '#FF0000',\n        fillOpacity: 0.2,\n        // map: map,\n        center: utsunomiyaPark,\n        radius: 1000\n    });\n    const matsugamineArea = new google.maps.Circle({ //範囲情報\n        strokeColor: '#FF0000',\n        strokeOpacity: 0.5,\n        strokeWeight: 2,\n        fillColor: '#FF0000',\n        fillOpacity: 0.2,\n        // map: map,\n        center: matsugamine,\n        radius: 100\n    });\n    const kurasseArea = new google.maps.Circle({ //範囲情報\n        strokeColor: '#FF0000',\n        strokeOpacity: 0.5,\n        strokeWeight: 2,\n        fillColor: '#FF0000',\n        fillOpacity: 0.2,\n        // map: map,\n        center: kurasse,\n        radius: 100\n    });\n    const utsunomiyaTowerArea = new google.maps.Circle({ //範囲情報\n        strokeColor: '#FF0000',\n        strokeOpacity: 0.5,\n        strokeWeight: 2,\n        fillColor: '#FF0000',\n        fillOpacity: 0.2,\n        // map: map,\n        center: utsunomiyaTower,\n        radius: 100\n    });\n    const selectCafeArea = new google.maps.Circle({ //範囲情報\n        strokeColor: '#FF0000',\n        strokeOpacity: 0.5,\n        strokeWeight: 2,\n        fillColor: '#FF0000',\n        fillOpacity: 0.2,\n        // map: map,\n        center: selectCafe,\n        radius: 100\n    });\n    const testArea = new google.maps.Circle({ //範囲情報\n        strokeColor: '#FF0000',\n        strokeOpacity: 0.5,\n        strokeWeight: 2,\n        fillColor: '#FF0000',\n        fillOpacity: 0.2,\n        // map: map,\n        center: test,\n        radius: 100\n    });\n\n\n\n    //-----------------------------------------------------------\n\n    // const [isAvailable, setAvailable] = useState(false);\n    // const [position, setPosition] = useState<{ latitude: number, longitude: number }>();\n\n    // // useEffectが実行されているかどうかを判定するために用意しています\n    // const isFirstRef = useRef(true);\n\n    /*\n     * ページ描画時にGeolocation APIが使えるかどうかをチェックしています\n     * もし使えなければその旨のエラーメッセージを表示させます\n     */\n    // useEffect(() => {\n    //     isFirstRef.current = false;\n    //     if ('geolocation' in navigator) {\n    //         setAvailable(true);\n    //     }\n    // }, [isAvailable]);\n    function error(error: any) {\n        var errorMessage: any = {\n            0: \"原因不明のエラーが発生しました…。\",\n            1: \"位置情報の取得が許可されませんでした…。\",\n            2: \"電波状況などで位置情報が取得できませんでした…。\",\n            3: \"位置情報の取得に時間がかかり過ぎてタイムアウトしました…。\",\n        };\n        console.log(errorMessage[error.code]);//getccurentpotion\n    }\n\n    const getCurrentPosition = () => {\n        navigator.geolocation.getCurrentPosition((position: Position) => {\n            var data = position.coords;\n            var lat = data.latitude;\n            var lng = data.longitude;\n            var latlng = new google.maps.LatLng(lat, lng);\n            // var canvas = document.getElementById('map-canvas') as Element;\n            // document.getElementById('google').innerHTML= \"String(lat)\" ;\n            // var mapOptions = {\n            //     zoom: 15,\n            //     center: latlng,\n            //     mapTypeId: google.maps.MapTypeId.ROADMAP\n            // }\n            // var map = new google.maps.Map(canvas, mapOptions);\n            // const {lati,longa} = position.coords\n            // alert(lat)\n            // alert(lng)\n            setPosition({ latitude: lat, longitude: lng });\n            // marker\n            var markerOptions = {\n                // map: map,\n                position: latlng,\n                draggable: true,\n                visible: true,\n            }\n            new google.maps.Marker(markerOptions);\n            //宇都宮駅\n            if (google.maps.geometry.spherical.computeDistanceBetween(latlng, utsunomiyaArea.getCenter()) <= utsunomiyaArea.getRadius()) { //領域判定\n                console.log(\"宇都宮駅範囲内\")\n                \n                // alert(\"宇都宮駅範囲内\")\n            } else {\n                console.log(\"宇都宮駅範囲外\")\n                // alert(\"宇都宮駅範囲外\")\n            }\n            //大谷資料館\n            if (google.maps.geometry.spherical.computeDistanceBetween(latlng, oyashiryokanArea.getCenter()) <= oyashiryokanArea.getRadius()) { //領域判定\n                console.log(\"大谷資料館範囲内\")\n                // alert(\"大谷資料館範囲内\")\n            } else {\n                console.log(\"大谷資料館範囲外\")\n                // alert(\"大谷資料館範囲外\")\n            }\n            //東京駅\n            if (google.maps.geometry.spherical.computeDistanceBetween(latlng, tokyoArea.getCenter()) <= tokyoArea.getRadius()) { //領域判定\n                console.log(\"東京駅範囲内\")\n                const jwt = JSON.parse(localStorage.getItem('jwt') as string)\n                const { Authorization, Accesstoken } = jwt\n                const scenarioHist: Array<{ nextSentenceId: string, personName: string, plane: string }> = JSON.parse(localStorage.getItem('scenarioHist') as string)\n                console.log(\"Localstorage\")\n                // Object.keys(scenarioHist).map((sc: any) => {\n                //     console.log(scenarioHist)\n                //     scenarioLog && setScenarioLog([...scenarioLog, {\n                //         id: \"\",\n                //         personName: sc.personName,\n                //         plane: sc.plane,\n                //     }])\n                //     // scenarioHist[\"id\"]=\"\"\n                //     // localStorage.setItem('scenarioHist', JSON.stringify(scenarioHist))\n                // })\n\n                const tmpArray = JSON.parse(localStorage.getItem('scenarioHist') as string)\n                console.log(\"tmpArray:\", tmpArray)\n                tmpArray.push({ nextSentenceId: \"6\", personName: \"ナレーター\", plane: \"チェックインできました。\" })\n                // localStorage.setItem('scenarioHist', JSON.stringify({ personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId }))\n                localStorage.setItem('scenarioHist', JSON.stringify(tmpArray))\n                console.log(\"DB\")\n\n                //ログから会話履歴をもってくる\n\n                fetch(\"https://jtb-prd.two-choices.jp/api/scenario/log/\", {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization': Authorization,\n                        'accesstoken': Accesstoken\n                    },\n                    // body: JSON.stringify({ scenario: { personName: scenario.personName, plane: scenario.sentence.plane, nextSentenceId: scenario.nextSentenceId } })\n                    body: JSON.stringify({ scenario: { nextSentenceId: \"6\", personName: \"ナレーター\", plane: \"チェックインできました。\" } })\n                })\n                window.alert(\"チェックインできました。チャット画面に戻ってシナリオを進めてください。\")\n            } else {\n                console.log(\"東京駅範囲外\")\n            }\n            //大谷寺\n            if (google.maps.geometry.spherical.computeDistanceBetween(latlng, oyaderaArea.getCenter()) <= oyaderaArea.getRadius()) { //領域判定\n                console.log(\"大谷寺範囲内\")\n                // alert(\"大谷寺範囲内\")\n            } else {\n                console.log(\"大谷寺範囲外\")\n                // alert(\"大谷寺範囲外\")\n            }\n            //クーリ・ルージュ\n            if (google.maps.geometry.spherical.computeDistanceBetween(latlng, kurirujuArea.getCenter()) <= kurirujuArea.getRadius()) { //領域判定\n                console.log(\"クーリ・ルージュ範囲内\")\n                // alert(\"クーリ・ルージュ範囲内\")\n            } else {\n                console.log(\"クーリ・ルージュ範囲外\")\n                // alert(\"クーリ・ルージュ範囲外\")\n            }\n            //最上茶屋\n            if (google.maps.geometry.spherical.computeDistanceBetween(latlng, mogamijayaArea.getCenter()) <= mogamijayaArea.getRadius()) { //領域判定\n                console.log(\"最上茶屋範囲内\")\n                // alert(\"最上茶屋範囲内\")\n            } else {\n                console.log(\"最上茶屋範囲外\")\n                // alert(\"最上茶屋範囲外\")\n            }\n            //若竹\n            if (google.maps.geometry.spherical.computeDistanceBetween(latlng, wakatakeArea.getCenter()) <= wakatakeArea.getRadius()) { //領域判定\n                console.log(\"若竹範囲内\")\n                // alert(\"若竹範囲内\")\n            } else {\n                console.log(\"若竹範囲外\")\n                // alert(\"若竹範囲外\")\n            }\n            //動物園\n            if (google.maps.geometry.spherical.computeDistanceBetween(latlng, utsunomiyaZooArea.getCenter()) <= utsunomiyaZooArea.getRadius()) { //領域判定\n                console.log(\"動物園範囲内\")\n                // alert(\"動物園範囲内\")\n            } else {\n                console.log(\"動物園範囲外\")\n                // alert(\"動物園範囲外\")\n            }\n            //公園\n            if (google.maps.geometry.spherical.computeDistanceBetween(latlng, utsunomiyaParkArea.getCenter()) <= utsunomiyaParkArea.getRadius()) { //領域判定\n                console.log(\"公園範囲内\")\n                // alert(\"公園範囲内\")\n            } else {\n                console.log(\"公園範囲外\")\n                // alert(\"公園範囲外\")\n            }\n            //松が峰\n            if (google.maps.geometry.spherical.computeDistanceBetween(latlng, matsugamineArea.getCenter()) <= matsugamineArea.getRadius()) { //領域判定\n                console.log(\"松が峰範囲内\")\n                // alert(\"松が峰範囲内\")\n            } else {\n                console.log(\"松が峰範囲外\")\n                // alert(\"松が峰範囲外\")\n            }\n            //くらっせ\n            if (google.maps.geometry.spherical.computeDistanceBetween(latlng, kurasseArea.getCenter()) <= kurasseArea.getRadius()) { //領域判定\n                console.log(\"くらっせ範囲内\")\n                // alert(\"くらっせ範囲内\")\n            } else {\n                console.log(\"くらっせ範囲外\")\n                // alert(\"くらっせ範囲外\")\n            }\n            //宇都宮タワー\n            if (google.maps.geometry.spherical.computeDistanceBetween(latlng, utsunomiyaTowerArea.getCenter()) <= utsunomiyaTowerArea.getRadius()) { //領域判定\n                console.log(\"宇都宮タワー範囲内\")\n                // alert(\"宇都宮タワー範囲内\")\n            } else {\n                console.log(\"宇都宮タワー範囲外\")\n                // alert(\"宇都宮タワー範囲外\")\n            }\n            //SELECT\n            if (google.maps.geometry.spherical.computeDistanceBetween(latlng, selectCafeArea.getCenter()) <= selectCafeArea.getRadius()) { //領域判定\n                console.log(\"SELECT範囲内\")\n                // alert(\"SELECT範囲内\")\n            } else {\n                console.log(\"SELECT範囲外\")\n                // alert(\"SELECT範囲外\")\n            }\n            //test\n            if (google.maps.geometry.spherical.computeDistanceBetween(latlng, testArea.getCenter()) <= testArea.getRadius()) { //領域判定\n                console.log(\"test範囲内\")\n            } else {\n                console.log(\"test駅範囲外\")\n            }\n        }, failure => {\n            if (failure.message.startsWith(\"Only secure origins are allowed\")) {\n                console.log(\"secure issuess\")\n            }\n        });\n    }\n\n    //------------\n\n    return <div>\n        {/* <button onClick={() => getCurrentPosition()}>チェックイン</button> */}\n        {/* <input id=\"google\" type=\"text\"></input> */}\n        {/* <div>latitude:{position?.latitude}</div> */}\n        {/* <div>longtitude:{position?.longitude}</div> */}\n        <div className={classes.mapWrapper}>\n\n\n            <GoogleMap\n                mapContainerStyle={mapContainerStyle}\n                zoom={15}\n                center={center}\n                options={options}\n            >\n\n                {position?.latitude && <Marker\n                    position={new google.maps.LatLng(position?.latitude, position?.longitude)}//値が入っていることを保証しないとエラー\n                // icon={\"📝\"}\n                // label={\"Marker！！\"}\n                // visible={true}\n                // onLoad={onLoad}\n                />}\n                {utsunomiyaShow === true ?\n                    <div>\n                        <Marker\n                            position={utsunomiyaArea.getCenter()}\n                        // icon={\"📝\"}\n                        // label={\"Marker！！\"}\n                        // visible={true}\n                        // onLoad={onLoad}\n                        />\n                        <Circle\n                            center={utsunomiyaArea.getCenter()}\n                            radius={100}\n                            visible={true}\n                        ></Circle>\n                    </div>\n\n                    :\n                    <div>aaa</div>\n                }\n                {/* \n            <Marker\n                position={utsunomiyaArea.getCenter()}\n            // icon={\"📝\"}\n            // label={\"Marker！！\"}\n            // visible={true}\n            // onLoad={onLoad}\n            />\n            <Circle\n                center={utsunomiyaArea.getCenter()}\n                radius={100}\n                visible={true}\n            ></Circle>\n\n            <Marker\n                position={oyashiryokanArea.getCenter()}\n            // icon={\"📝\"}\n            // label={\"Marker！！\"}\n            // visible={true}\n            // onLoad={onLoad}\n            />\n            <Circle\n                center={oyashiryokanArea.getCenter()}\n                radius={1000}\n                visible={true}\n            >\n            </Circle>\n            <Marker\n                position={oyaderaArea.getCenter()}\n            // icon={\"📝\"}\n            // label={\"Marker！！\"}\n            // visible={true}\n            // onLoad={onLoad}\n            />\n            <Circle\n                center={oyaderaArea.getCenter()}\n                radius={500}\n                visible={true}\n            >\n            </Circle>\n            <Marker\n                position={kurirujuArea.getCenter()}\n            // icon={\"📝\"}\n            // label={\"Marker！！\"}\n            // visible={true}\n            // onLoad={onLoad}\n            />\n            <Circle\n                center={kurirujuArea.getCenter()}\n                radius={100}\n                visible={true}\n            >\n            </Circle>\n            <Marker\n                position={mogamijayaArea.getCenter()}\n            // icon={\"📝\"}\n            // label={\"Marker！！\"}\n            // visible={true}\n            // onLoad={onLoad}\n            />\n            <Circle\n                center={mogamijayaArea.getCenter()}\n                radius={500}\n                visible={true}\n            >\n            </Circle>\n            <Marker\n                position={wakatakeArea.getCenter()}\n            // icon={\"📝\"}\n            // label={\"Marker！！\"}\n            // visible={true}\n            // onLoad={onLoad}\n            />\n            <Circle\n                center={wakatakeArea.getCenter()}\n                radius={100}\n                visible={true}\n            >\n            </Circle>\n            <Marker\n                position={utsunomiyaZooArea.getCenter()}\n            // icon={\"📝\"}\n            // label={\"Marker！！\"}\n            // visible={true}\n            // onLoad={onLoad}\n            />\n            <Circle\n                center={utsunomiyaZooArea.getCenter()}\n                radius={100}\n                visible={true}\n            >\n            </Circle>\n            <Marker\n                position={utsunomiyaParkArea.getCenter()}\n            // icon={\"📝\"}\n            // label={\"Marker！！\"}\n            // visible={true}\n            // onLoad={onLoad}\n            />\n            <Circle\n                center={utsunomiyaParkArea.getCenter()}\n                radius={1000}\n                visible={true}\n            >\n            </Circle>\n            <Marker\n                position={matsugamineArea.getCenter()}\n            // icon={\"📝\"}\n            // label={\"Marker！！\"}\n            // visible={true}\n            // onLoad={onLoad}\n            />\n            <Circle\n                center={matsugamineArea.getCenter()}\n                radius={100}\n                visible={true}\n            >\n            </Circle>\n            <Marker\n                position={kurasseArea.getCenter()}\n            // icon={\"📝\"}\n            // label={\"Marker！！\"}\n            // visible={true}\n            // onLoad={onLoad}\n            />\n            <Circle\n                center={kurasseArea.getCenter()}\n                radius={100}\n                visible={true}\n            >\n            </Circle>\n            <Marker\n                position={utsunomiyaTowerArea.getCenter()}\n            // icon={\"📝\"}\n            // label={\"Marker！！\"}\n            // visible={true}\n            // onLoad={onLoad}\n            />\n            <Circle\n                center={utsunomiyaTowerArea.getCenter()}\n                radius={100}\n                visible={true}\n            >\n            </Circle>\n            <Marker\n                position={selectCafeArea.getCenter()}\n            // icon={\"📝\"}\n            // label={\"Marker！！\"}\n            // visible={true}\n            // onLoad={onLoad}\n            />\n            <Circle\n                center={selectCafeArea.getCenter()}\n                radius={100}\n                visible={true}\n            >\n            </Circle>\n\n            <Circle\n                center={testArea.getCenter()}\n                radius={100}\n                visible={true}\n            >\n            </Circle> */}\n                <Button\n                className={classes.checkIn}\n                    variant=\"contained\"\n                    disableElevation\n                    onClick={() => {\n                        getCurrentPosition()\n                    }}\n                >\n                    チェックイン\n        </Button>\n            </GoogleMap>\n        </div>\n\n        <BottomTab />\n    </div>\n}\n\n\n\n\n\n\n\nexport default GoogleMapAPI;"]},"metadata":{},"sourceType":"module"}